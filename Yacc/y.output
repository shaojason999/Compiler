Terminals unused in grammar

   NOT
   LSB
   RSB
   FOR


State 100 conflicts: 1 reduce/reduce
State 135 conflicts: 24 reduce/reduce
State 207 conflicts: 16 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration

    3 external_declaration: function
    4                     | global_declaration
    5                     | comment

    6 global_declaration: type SEMICOLON
    7                   | type global_declarator_list SEMICOLON

    8 global_declarator_list: global_declarator
    9                       | global_declarator_list COMMA global_declarator

   10 global_declarator: ID
   11                  | ID ASGN only_const_operation
   12                  | ID ASGN STR_CONST

   13 only_const_operation: const_logical_or_expression

   14 const_without_str: I_CONST
   15                  | F_CONST
   16                  | TRUE
   17                  | FALSE

   18 type: VOID
   19     | INT
   20     | FLOAT
   21     | STRING
   22     | BOOL

   23 function: type ID LB RB SEMICOLON
   24         | type ID LB function_parameter_list RB SEMICOLON

   25 $@1: %empty

   26 function: type ID LB RB $@1 compound_statement

   27 $@2: %empty

   28 function: type ID LB function_parameter_list RB $@2 compound_statement

   29 function_parameter_list: type ID
   30                        | function_parameter_list COMMA type ID

   31 statement: compound_statement
   32          | statement_with_return
   33          | selection_statement
   34          | iteration_statement
   35          | comment
   36          | jump_statement

   37 statement_with_return: expression_statement
   38                      | print_statement

   39 $@3: %empty

   40 print_statement: PRINT LB ID $@3 RB SEMICOLON
   41                | PRINT LB STR_CONST RB SEMICOLON

   42 comment: C_COMMENT
   43        | CPP_COMMENT

   44 jump_statement: RET SEMICOLON
   45               | RET statement_with_return

   46 $@4: %empty

   47 compound_statement: LCB $@4 RCB

   48 $@5: %empty

   49 compound_statement: LCB $@5 block_item_list RCB

   50 block_item_list: block_item
   51                | block_item_list block_item

   52 block_item: statement
   53           | local_declaration
   54           | function

   55 local_declaration: type SEMICOLON
   56                  | type local_declarator_list SEMICOLON

   57 local_declarator_list: local_declarator
   58                      | local_declarator_list COMMA local_declarator

   59 local_declarator: ID
   60                 | ID ASGN assignment_expression
   61                 | ID ASGN only_const_operation

   62 expression_statement: SEMICOLON
   63                     | expression_list SEMICOLON

   64 expression_list: assignment_expression
   65                | expression_list COMMA assignment_expression

   66 assignment_expression: logical_or_expression

   67 $@6: %empty

   68 assignment_expression: ID assignment_operator $@6 assignment_expression

   69 $@7: %empty

   70 assignment_expression: ID ASGN $@7 STR_CONST

   71 assignment_operator: ASGN
   72                    | ADDASGN
   73                    | SUBASGN
   74                    | MULASGN
   75                    | DIVASGN
   76                    | MODASGN

   77 logical_or_expression: logical_and_expression
   78                      | logical_or_expression OR logical_and_expression

   79 logical_and_expression: equality_expression
   80                       | logical_and_expression AND equality_expression

   81 equality_expression: relational_expression
   82                    | equality_expression EQ relational_expression
   83                    | equality_expression NE relational_expression

   84 relational_expression: additive_expression
   85                      | relational_expression MT additive_expression
   86                      | relational_expression LT additive_expression
   87                      | relational_expression MTE additive_expression
   88                      | relational_expression LTE additive_expression

   89 additive_expression: multiplicative_expression
   90                    | additive_expression ADD multiplicative_expression
   91                    | additive_expression SUB multiplicative_expression

   92 multiplicative_expression: prefix_expression
   93                          | multiplicative_expression MUL prefix_expression
   94                          | multiplicative_expression DIV prefix_expression
   95                          | multiplicative_expression MOD prefix_expression

   96 prefix_expression: postfix_expression
   97                  | ADD prefix_expression
   98                  | SUB prefix_expression

   99 postfix_expression: ID

  100 $@8: %empty

  101 postfix_expression: ID LB $@8 RB

  102 $@9: %empty

  103 postfix_expression: ID LB $@9 expression_list RB
  104                   | const_without_str
  105                   | LB expression_list RB
  106                   | bra_expression INC
  107                   | bra_expression DEC

  108 bra_expression: ID
  109               | LB bra_expression RB

  110 const_logical_or_expression: const_logical_and_expression
  111                            | const_logical_or_expression OR const_logical_and_expression

  112 const_logical_and_expression: const_equality_expression
  113                             | const_logical_and_expression AND const_equality_expression

  114 const_equality_expression: const_relational_expression
  115                          | const_equality_expression EQ const_relational_expression
  116                          | const_equality_expression NE const_relational_expression

  117 const_relational_expression: const_additive_expression
  118                            | const_relational_expression MT const_additive_expression
  119                            | const_relational_expression LT const_additive_expression
  120                            | const_relational_expression MTE const_additive_expression
  121                            | const_relational_expression LTE const_additive_expression

  122 const_additive_expression: const_multiplicative_expression
  123                          | const_additive_expression ADD const_multiplicative_expression
  124                          | const_additive_expression SUB const_multiplicative_expression

  125 const_multiplicative_expression: const_prefix_expression
  126                                | const_multiplicative_expression MUL const_prefix_expression
  127                                | const_multiplicative_expression DIV const_prefix_expression
  128                                | const_multiplicative_expression MOD const_prefix_expression

  129 const_prefix_expression: const_postfix_expression
  130                        | ADD const_prefix_expression
  131                        | SUB const_prefix_expression

  132 const_postfix_expression: const_without_str
  133                         | LB const_logical_or_expression RB

  134 selection_statement: IF LB expression_list RB compound_statement
  135                    | IF LB expression_list RB compound_statement ELSE selection_statement
  136                    | IF LB expression_list RB compound_statement ELSE compound_statement

  137 iteration_statement: WHILE LB expression_list RB loop_compound_statement

  138 loop_statement: loop_compound_statement
  139               | expression_statement
  140               | loop_selection_statement
  141               | iteration_statement
  142               | print_statement
  143               | comment
  144               | loop_jump_statement

  145 loop_selection_statement: IF LB expression_list RB loop_compound_statement
  146                         | IF LB expression_list RB loop_compound_statement ELSE loop_selection_statement
  147                         | IF LB expression_list RB loop_compound_statement ELSE loop_compound_statement

  148 $@10: %empty

  149 loop_compound_statement: LCB $@10 RCB

  150 $@11: %empty

  151 loop_compound_statement: LCB $@11 loop_block_item_list RCB

  152 loop_block_item_list: loop_block_item
  153                     | loop_block_item_list loop_block_item

  154 loop_block_item: loop_statement
  155                | local_declaration
  156                | function

  157 loop_jump_statement: CONT SEMICOLON
  158                    | BREAK SEMICOLON
  159                    | jump_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 90 97 123 130
SUB (259) 91 98 124 131
MUL (260) 93 126
DIV (261) 94 127
MOD (262) 95 128
INC (263) 106
DEC (264) 107
MT (265) 85 118
LT (266) 86 119
MTE (267) 87 120
LTE (268) 88 121
EQ (269) 82 115
NE (270) 83 116
ASGN (271) 11 12 60 61 70 71
ADDASGN (272) 72
SUBASGN (273) 73
MULASGN (274) 74
DIVASGN (275) 75
MODASGN (276) 76
AND (277) 80 113
OR (278) 78 111
NOT (279)
LB (280) 23 24 26 28 40 41 101 103 105 109 133 134 135 136 137 145
    146 147
RB (281) 23 24 26 28 40 41 101 103 105 109 133 134 135 136 137 145
    146 147
LCB (282) 47 49 149 151
RCB (283) 47 49 149 151
LSB (284)
RSB (285)
COMMA (286) 9 30 58 65
PRINT (287) 40 41
IF (288) 134 135 136 145 146 147
ELSE (289) 135 136 146 147
FOR (290)
WHILE (291) 137
RET (292) 44 45
CONT (293) 157
BREAK (294) 158
TRUE (295) 16
FALSE (296) 17
STR_CONST (297) 12 41 70
I_CONST (298) 14
F_CONST (299) 15
C_COMMENT (300) 42
CPP_COMMENT (301) 43
SEMICOLON (302) 6 7 23 24 40 41 44 55 56 62 63 157 158
ID (303) 10 11 12 23 24 26 28 29 30 40 59 60 61 68 70 99 101 103 108
VOID (304) 18
INT (305) 19
FLOAT (306) 20
STRING (307) 21
BOOL (308) 22


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0 2
external_declaration (56)
    on left: 3 4 5, on right: 1 2
global_declaration (57)
    on left: 6 7, on right: 4
global_declarator_list (58)
    on left: 8 9, on right: 7 9
global_declarator (59)
    on left: 10 11 12, on right: 8 9
only_const_operation (60)
    on left: 13, on right: 11 61
const_without_str (61)
    on left: 14 15 16 17, on right: 104 132
type (62)
    on left: 18 19 20 21 22, on right: 6 7 23 24 26 28 29 30 55 56
function (63)
    on left: 23 24 26 28, on right: 3 54 156
$@1 (64)
    on left: 25, on right: 26
$@2 (65)
    on left: 27, on right: 28
function_parameter_list (66)
    on left: 29 30, on right: 24 28 30
statement (67)
    on left: 31 32 33 34 35 36, on right: 52
statement_with_return (68)
    on left: 37 38, on right: 32 45
print_statement (69)
    on left: 40 41, on right: 38 142
$@3 (70)
    on left: 39, on right: 40
comment (71)
    on left: 42 43, on right: 5 35 143
jump_statement (72)
    on left: 44 45, on right: 36 159
compound_statement (73)
    on left: 47 49, on right: 26 28 31 134 135 136
$@4 (74)
    on left: 46, on right: 47
$@5 (75)
    on left: 48, on right: 49
block_item_list (76)
    on left: 50 51, on right: 49 51
block_item (77)
    on left: 52 53 54, on right: 50 51
local_declaration (78)
    on left: 55 56, on right: 53 155
local_declarator_list (79)
    on left: 57 58, on right: 56 58
local_declarator (80)
    on left: 59 60 61, on right: 57 58
expression_statement (81)
    on left: 62 63, on right: 37 139
expression_list (82)
    on left: 64 65, on right: 63 65 103 105 134 135 136 137 145 146
    147
assignment_expression (83)
    on left: 66 68 70, on right: 60 64 65 68
$@6 (84)
    on left: 67, on right: 68
$@7 (85)
    on left: 69, on right: 70
assignment_operator (86)
    on left: 71 72 73 74 75 76, on right: 68
logical_or_expression (87)
    on left: 77 78, on right: 66 78
logical_and_expression (88)
    on left: 79 80, on right: 77 78 80
equality_expression (89)
    on left: 81 82 83, on right: 79 80 82 83
relational_expression (90)
    on left: 84 85 86 87 88, on right: 81 82 83 85 86 87 88
additive_expression (91)
    on left: 89 90 91, on right: 84 85 86 87 88 90 91
multiplicative_expression (92)
    on left: 92 93 94 95, on right: 89 90 91 93 94 95
prefix_expression (93)
    on left: 96 97 98, on right: 92 93 94 95 97 98
postfix_expression (94)
    on left: 99 101 103 104 105 106 107, on right: 96
$@8 (95)
    on left: 100, on right: 101
$@9 (96)
    on left: 102, on right: 103
bra_expression (97)
    on left: 108 109, on right: 106 107 109
const_logical_or_expression (98)
    on left: 110 111, on right: 13 111 133
const_logical_and_expression (99)
    on left: 112 113, on right: 110 111 113
const_equality_expression (100)
    on left: 114 115 116, on right: 112 113 115 116
const_relational_expression (101)
    on left: 117 118 119 120 121, on right: 114 115 116 118 119 120
    121
const_additive_expression (102)
    on left: 122 123 124, on right: 117 118 119 120 121 123 124
const_multiplicative_expression (103)
    on left: 125 126 127 128, on right: 122 123 124 126 127 128
const_prefix_expression (104)
    on left: 129 130 131, on right: 125 126 127 128 130 131
const_postfix_expression (105)
    on left: 132 133, on right: 129
selection_statement (106)
    on left: 134 135 136, on right: 33 135
iteration_statement (107)
    on left: 137, on right: 34 141
loop_statement (108)
    on left: 138 139 140 141 142 143 144, on right: 154
loop_selection_statement (109)
    on left: 145 146 147, on right: 140 146
loop_compound_statement (110)
    on left: 149 151, on right: 137 138 145 146 147
$@10 (111)
    on left: 148, on right: 149
$@11 (112)
    on left: 150, on right: 151
loop_block_item_list (113)
    on left: 152 153, on right: 151 153
loop_block_item (114)
    on left: 154 155 156, on right: 152 153
loop_jump_statement (115)
    on left: 157 158 159, on right: 144


State 0

    0 $accept: . program $end

    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    program               go to state 8
    external_declaration  go to state 9
    global_declaration    go to state 10
    type                  go to state 11
    function              go to state 12
    comment               go to state 13


State 1

   42 comment: C_COMMENT .

    $default  reduce using rule 42 (comment)


State 2

   43 comment: CPP_COMMENT .

    $default  reduce using rule 43 (comment)


State 3

   18 type: VOID .

    $default  reduce using rule 18 (type)


State 4

   19 type: INT .

    $default  reduce using rule 19 (type)


State 5

   20 type: FLOAT .

    $default  reduce using rule 20 (type)


State 6

   21 type: STRING .

    $default  reduce using rule 21 (type)


State 7

   22 type: BOOL .

    $default  reduce using rule 22 (type)


State 8

    0 $accept: program . $end
    2 program: program . external_declaration

    $end         shift, and go to state 14
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    external_declaration  go to state 15
    global_declaration    go to state 10
    type                  go to state 11
    function              go to state 12
    comment               go to state 13


State 9

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 10

    4 external_declaration: global_declaration .

    $default  reduce using rule 4 (external_declaration)


State 11

    6 global_declaration: type . SEMICOLON
    7                   | type . global_declarator_list SEMICOLON
   23 function: type . ID LB RB SEMICOLON
   24         | type . ID LB function_parameter_list RB SEMICOLON
   26         | type . ID LB RB $@1 compound_statement
   28         | type . ID LB function_parameter_list RB $@2 compound_statement

    SEMICOLON  shift, and go to state 16
    ID         shift, and go to state 17

    global_declarator_list  go to state 18
    global_declarator       go to state 19


State 12

    3 external_declaration: function .

    $default  reduce using rule 3 (external_declaration)


State 13

    5 external_declaration: comment .

    $default  reduce using rule 5 (external_declaration)


State 14

    0 $accept: program $end .

    $default  accept


State 15

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 16

    6 global_declaration: type SEMICOLON .

    $default  reduce using rule 6 (global_declaration)


State 17

   10 global_declarator: ID .
   11                  | ID . ASGN only_const_operation
   12                  | ID . ASGN STR_CONST
   23 function: type ID . LB RB SEMICOLON
   24         | type ID . LB function_parameter_list RB SEMICOLON
   26         | type ID . LB RB $@1 compound_statement
   28         | type ID . LB function_parameter_list RB $@2 compound_statement

    ASGN  shift, and go to state 20
    LB    shift, and go to state 21

    $default  reduce using rule 10 (global_declarator)


State 18

    7 global_declaration: type global_declarator_list . SEMICOLON
    9 global_declarator_list: global_declarator_list . COMMA global_declarator

    COMMA      shift, and go to state 22
    SEMICOLON  shift, and go to state 23


State 19

    8 global_declarator_list: global_declarator .

    $default  reduce using rule 8 (global_declarator_list)


State 20

   11 global_declarator: ID ASGN . only_const_operation
   12                  | ID ASGN . STR_CONST

    ADD        shift, and go to state 24
    SUB        shift, and go to state 25
    LB         shift, and go to state 26
    TRUE       shift, and go to state 27
    FALSE      shift, and go to state 28
    STR_CONST  shift, and go to state 29
    I_CONST    shift, and go to state 30
    F_CONST    shift, and go to state 31

    only_const_operation             go to state 32
    const_without_str                go to state 33
    const_logical_or_expression      go to state 34
    const_logical_and_expression     go to state 35
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 21

   23 function: type ID LB . RB SEMICOLON
   24         | type ID LB . function_parameter_list RB SEMICOLON
   26         | type ID LB . RB $@1 compound_statement
   28         | type ID LB . function_parameter_list RB $@2 compound_statement

    RB      shift, and go to state 42
    VOID    shift, and go to state 3
    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    type                     go to state 43
    function_parameter_list  go to state 44


State 22

    9 global_declarator_list: global_declarator_list COMMA . global_declarator

    ID  shift, and go to state 45

    global_declarator  go to state 46


State 23

    7 global_declaration: type global_declarator_list SEMICOLON .

    $default  reduce using rule 7 (global_declaration)


State 24

  130 const_prefix_expression: ADD . const_prefix_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 47
    const_postfix_expression  go to state 41


State 25

  131 const_prefix_expression: SUB . const_prefix_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 48
    const_postfix_expression  go to state 41


State 26

  133 const_postfix_expression: LB . const_logical_or_expression RB

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_logical_or_expression      go to state 49
    const_logical_and_expression     go to state 35
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 27

   16 const_without_str: TRUE .

    $default  reduce using rule 16 (const_without_str)


State 28

   17 const_without_str: FALSE .

    $default  reduce using rule 17 (const_without_str)


State 29

   12 global_declarator: ID ASGN STR_CONST .

    $default  reduce using rule 12 (global_declarator)


State 30

   14 const_without_str: I_CONST .

    $default  reduce using rule 14 (const_without_str)


State 31

   15 const_without_str: F_CONST .

    $default  reduce using rule 15 (const_without_str)


State 32

   11 global_declarator: ID ASGN only_const_operation .

    $default  reduce using rule 11 (global_declarator)


State 33

  132 const_postfix_expression: const_without_str .

    $default  reduce using rule 132 (const_postfix_expression)


State 34

   13 only_const_operation: const_logical_or_expression .
  111 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression

    OR  shift, and go to state 50

    $default  reduce using rule 13 (only_const_operation)


State 35

  110 const_logical_or_expression: const_logical_and_expression .
  113 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 51

    $default  reduce using rule 110 (const_logical_or_expression)


State 36

  112 const_logical_and_expression: const_equality_expression .
  115 const_equality_expression: const_equality_expression . EQ const_relational_expression
  116                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 52
    NE  shift, and go to state 53

    $default  reduce using rule 112 (const_logical_and_expression)


State 37

  114 const_equality_expression: const_relational_expression .
  118 const_relational_expression: const_relational_expression . MT const_additive_expression
  119                            | const_relational_expression . LT const_additive_expression
  120                            | const_relational_expression . MTE const_additive_expression
  121                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57

    $default  reduce using rule 114 (const_equality_expression)


State 38

  117 const_relational_expression: const_additive_expression .
  123 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  124                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 117 (const_relational_expression)


State 39

  122 const_additive_expression: const_multiplicative_expression .
  126 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  127                                | const_multiplicative_expression . DIV const_prefix_expression
  128                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 122 (const_additive_expression)


State 40

  125 const_multiplicative_expression: const_prefix_expression .

    $default  reduce using rule 125 (const_multiplicative_expression)


State 41

  129 const_prefix_expression: const_postfix_expression .

    $default  reduce using rule 129 (const_prefix_expression)


State 42

   23 function: type ID LB RB . SEMICOLON
   26         | type ID LB RB . $@1 compound_statement

    SEMICOLON  shift, and go to state 63

    $default  reduce using rule 25 ($@1)

    $@1  go to state 64


State 43

   29 function_parameter_list: type . ID

    ID  shift, and go to state 65


State 44

   24 function: type ID LB function_parameter_list . RB SEMICOLON
   28         | type ID LB function_parameter_list . RB $@2 compound_statement
   30 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 66
    COMMA  shift, and go to state 67


State 45

   10 global_declarator: ID .
   11                  | ID . ASGN only_const_operation
   12                  | ID . ASGN STR_CONST

    ASGN  shift, and go to state 20

    $default  reduce using rule 10 (global_declarator)


State 46

    9 global_declarator_list: global_declarator_list COMMA global_declarator .

    $default  reduce using rule 9 (global_declarator_list)


State 47

  130 const_prefix_expression: ADD const_prefix_expression .

    $default  reduce using rule 130 (const_prefix_expression)


State 48

  131 const_prefix_expression: SUB const_prefix_expression .

    $default  reduce using rule 131 (const_prefix_expression)


State 49

  111 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression
  133 const_postfix_expression: LB const_logical_or_expression . RB

    OR  shift, and go to state 50
    RB  shift, and go to state 68


State 50

  111 const_logical_or_expression: const_logical_or_expression OR . const_logical_and_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_logical_and_expression     go to state 69
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 51

  113 const_logical_and_expression: const_logical_and_expression AND . const_equality_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_equality_expression        go to state 70
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 52

  115 const_equality_expression: const_equality_expression EQ . const_relational_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_relational_expression      go to state 71
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 53

  116 const_equality_expression: const_equality_expression NE . const_relational_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_relational_expression      go to state 72
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 54

  118 const_relational_expression: const_relational_expression MT . const_additive_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 73
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 55

  119 const_relational_expression: const_relational_expression LT . const_additive_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 74
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 56

  120 const_relational_expression: const_relational_expression MTE . const_additive_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 75
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 57

  121 const_relational_expression: const_relational_expression LTE . const_additive_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 76
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 58

  123 const_additive_expression: const_additive_expression ADD . const_multiplicative_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_multiplicative_expression  go to state 77
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 59

  124 const_additive_expression: const_additive_expression SUB . const_multiplicative_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_multiplicative_expression  go to state 78
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 60

  126 const_multiplicative_expression: const_multiplicative_expression MUL . const_prefix_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 79
    const_postfix_expression  go to state 41


State 61

  127 const_multiplicative_expression: const_multiplicative_expression DIV . const_prefix_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 80
    const_postfix_expression  go to state 41


State 62

  128 const_multiplicative_expression: const_multiplicative_expression MOD . const_prefix_expression

    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    LB       shift, and go to state 26
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 81
    const_postfix_expression  go to state 41


State 63

   23 function: type ID LB RB SEMICOLON .

    $default  reduce using rule 23 (function)


State 64

   26 function: type ID LB RB $@1 . compound_statement

    LCB  shift, and go to state 82

    compound_statement  go to state 83


State 65

   29 function_parameter_list: type ID .

    $default  reduce using rule 29 (function_parameter_list)


State 66

   24 function: type ID LB function_parameter_list RB . SEMICOLON
   28         | type ID LB function_parameter_list RB . $@2 compound_statement

    SEMICOLON  shift, and go to state 84

    $default  reduce using rule 27 ($@2)

    $@2  go to state 85


State 67

   30 function_parameter_list: function_parameter_list COMMA . type ID

    VOID    shift, and go to state 3
    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    type  go to state 86


State 68

  133 const_postfix_expression: LB const_logical_or_expression RB .

    $default  reduce using rule 133 (const_postfix_expression)


State 69

  111 const_logical_or_expression: const_logical_or_expression OR const_logical_and_expression .
  113 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 51

    $default  reduce using rule 111 (const_logical_or_expression)


State 70

  113 const_logical_and_expression: const_logical_and_expression AND const_equality_expression .
  115 const_equality_expression: const_equality_expression . EQ const_relational_expression
  116                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 52
    NE  shift, and go to state 53

    $default  reduce using rule 113 (const_logical_and_expression)


State 71

  115 const_equality_expression: const_equality_expression EQ const_relational_expression .
  118 const_relational_expression: const_relational_expression . MT const_additive_expression
  119                            | const_relational_expression . LT const_additive_expression
  120                            | const_relational_expression . MTE const_additive_expression
  121                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57

    $default  reduce using rule 115 (const_equality_expression)


State 72

  116 const_equality_expression: const_equality_expression NE const_relational_expression .
  118 const_relational_expression: const_relational_expression . MT const_additive_expression
  119                            | const_relational_expression . LT const_additive_expression
  120                            | const_relational_expression . MTE const_additive_expression
  121                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57

    $default  reduce using rule 116 (const_equality_expression)


State 73

  118 const_relational_expression: const_relational_expression MT const_additive_expression .
  123 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  124                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 118 (const_relational_expression)


State 74

  119 const_relational_expression: const_relational_expression LT const_additive_expression .
  123 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  124                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 119 (const_relational_expression)


State 75

  120 const_relational_expression: const_relational_expression MTE const_additive_expression .
  123 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  124                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 120 (const_relational_expression)


State 76

  121 const_relational_expression: const_relational_expression LTE const_additive_expression .
  123 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  124                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 121 (const_relational_expression)


State 77

  123 const_additive_expression: const_additive_expression ADD const_multiplicative_expression .
  126 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  127                                | const_multiplicative_expression . DIV const_prefix_expression
  128                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 123 (const_additive_expression)


State 78

  124 const_additive_expression: const_additive_expression SUB const_multiplicative_expression .
  126 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  127                                | const_multiplicative_expression . DIV const_prefix_expression
  128                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 124 (const_additive_expression)


State 79

  126 const_multiplicative_expression: const_multiplicative_expression MUL const_prefix_expression .

    $default  reduce using rule 126 (const_multiplicative_expression)


State 80

  127 const_multiplicative_expression: const_multiplicative_expression DIV const_prefix_expression .

    $default  reduce using rule 127 (const_multiplicative_expression)


State 81

  128 const_multiplicative_expression: const_multiplicative_expression MOD const_prefix_expression .

    $default  reduce using rule 128 (const_multiplicative_expression)


State 82

   47 compound_statement: LCB . $@4 RCB
   49                   | LCB . $@5 block_item_list RCB

    RCB       reduce using rule 46 ($@4)
    $default  reduce using rule 48 ($@5)

    $@4  go to state 87
    $@5  go to state 88


State 83

   26 function: type ID LB RB $@1 compound_statement .

    $default  reduce using rule 26 (function)


State 84

   24 function: type ID LB function_parameter_list RB SEMICOLON .

    $default  reduce using rule 24 (function)


State 85

   28 function: type ID LB function_parameter_list RB $@2 . compound_statement

    LCB  shift, and go to state 82

    compound_statement  go to state 89


State 86

   30 function_parameter_list: function_parameter_list COMMA type . ID

    ID  shift, and go to state 90


State 87

   47 compound_statement: LCB $@4 . RCB

    RCB  shift, and go to state 91


State 88

   49 compound_statement: LCB $@5 . block_item_list RCB

    ADD          shift, and go to state 92
    SUB          shift, and go to state 93
    LB           shift, and go to state 94
    LCB          shift, and go to state 82
    PRINT        shift, and go to state 95
    IF           shift, and go to state 96
    WHILE        shift, and go to state 97
    RET          shift, and go to state 98
    TRUE         shift, and go to state 27
    FALSE        shift, and go to state 28
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 99
    ID           shift, and go to state 100
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 101
    type                       go to state 102
    function                   go to state 103
    statement                  go to state 104
    statement_with_return      go to state 105
    print_statement            go to state 106
    comment                    go to state 107
    jump_statement             go to state 108
    compound_statement         go to state 109
    block_item_list            go to state 110
    block_item                 go to state 111
    local_declaration          go to state 112
    expression_statement       go to state 113
    expression_list            go to state 114
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124
    selection_statement        go to state 125
    iteration_statement        go to state 126


State 89

   28 function: type ID LB function_parameter_list RB $@2 compound_statement .

    $default  reduce using rule 28 (function)


State 90

   30 function_parameter_list: function_parameter_list COMMA type ID .

    $default  reduce using rule 30 (function_parameter_list)


State 91

   47 compound_statement: LCB $@4 RCB .

    $default  reduce using rule 47 (compound_statement)


State 92

   97 prefix_expression: ADD . prefix_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str   go to state 101
    prefix_expression   go to state 128
    postfix_expression  go to state 123
    bra_expression      go to state 124


State 93

   98 prefix_expression: SUB . prefix_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str   go to state 101
    prefix_expression   go to state 129
    postfix_expression  go to state 123
    bra_expression      go to state 124


State 94

  105 postfix_expression: LB . expression_list RB
  109 bra_expression: LB . bra_expression RB

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str          go to state 101
    expression_list            go to state 130
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 131


State 95

   40 print_statement: PRINT . LB ID $@3 RB SEMICOLON
   41                | PRINT . LB STR_CONST RB SEMICOLON

    LB  shift, and go to state 132


State 96

  134 selection_statement: IF . LB expression_list RB compound_statement
  135                    | IF . LB expression_list RB compound_statement ELSE selection_statement
  136                    | IF . LB expression_list RB compound_statement ELSE compound_statement

    LB  shift, and go to state 133


State 97

  137 iteration_statement: WHILE . LB expression_list RB loop_compound_statement

    LB  shift, and go to state 134


State 98

   44 jump_statement: RET . SEMICOLON
   45               | RET . statement_with_return

    ADD        shift, and go to state 92
    SUB        shift, and go to state 93
    LB         shift, and go to state 94
    PRINT      shift, and go to state 95
    TRUE       shift, and go to state 27
    FALSE      shift, and go to state 28
    I_CONST    shift, and go to state 30
    F_CONST    shift, and go to state 31
    SEMICOLON  shift, and go to state 135
    ID         shift, and go to state 100

    const_without_str          go to state 101
    statement_with_return      go to state 136
    print_statement            go to state 106
    expression_statement       go to state 113
    expression_list            go to state 114
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 99

   62 expression_statement: SEMICOLON .

    $default  reduce using rule 62 (expression_statement)


State 100

   68 assignment_expression: ID . assignment_operator $@6 assignment_expression
   70                      | ID . ASGN $@7 STR_CONST
   99 postfix_expression: ID .
  101                   | ID . LB $@8 RB
  103                   | ID . LB $@9 expression_list RB
  108 bra_expression: ID .

    ASGN     shift, and go to state 137
    ADDASGN  shift, and go to state 138
    SUBASGN  shift, and go to state 139
    MULASGN  shift, and go to state 140
    DIVASGN  shift, and go to state 141
    MODASGN  shift, and go to state 142
    LB       shift, and go to state 143

    INC       reduce using rule 108 (bra_expression)
    DEC       reduce using rule 108 (bra_expression)
    RB        reduce using rule 99 (postfix_expression)
    RB        [reduce using rule 108 (bra_expression)]
    $default  reduce using rule 99 (postfix_expression)

    assignment_operator  go to state 144


State 101

  104 postfix_expression: const_without_str .

    $default  reduce using rule 104 (postfix_expression)


State 102

   23 function: type . ID LB RB SEMICOLON
   24         | type . ID LB function_parameter_list RB SEMICOLON
   26         | type . ID LB RB $@1 compound_statement
   28         | type . ID LB function_parameter_list RB $@2 compound_statement
   55 local_declaration: type . SEMICOLON
   56                  | type . local_declarator_list SEMICOLON

    SEMICOLON  shift, and go to state 145
    ID         shift, and go to state 146

    local_declarator_list  go to state 147
    local_declarator       go to state 148


State 103

   54 block_item: function .

    $default  reduce using rule 54 (block_item)


State 104

   52 block_item: statement .

    $default  reduce using rule 52 (block_item)


State 105

   32 statement: statement_with_return .

    $default  reduce using rule 32 (statement)


State 106

   38 statement_with_return: print_statement .

    $default  reduce using rule 38 (statement_with_return)


State 107

   35 statement: comment .

    $default  reduce using rule 35 (statement)


State 108

   36 statement: jump_statement .

    $default  reduce using rule 36 (statement)


State 109

   31 statement: compound_statement .

    $default  reduce using rule 31 (statement)


State 110

   49 compound_statement: LCB $@5 block_item_list . RCB
   51 block_item_list: block_item_list . block_item

    ADD          shift, and go to state 92
    SUB          shift, and go to state 93
    LB           shift, and go to state 94
    LCB          shift, and go to state 82
    RCB          shift, and go to state 149
    PRINT        shift, and go to state 95
    IF           shift, and go to state 96
    WHILE        shift, and go to state 97
    RET          shift, and go to state 98
    TRUE         shift, and go to state 27
    FALSE        shift, and go to state 28
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 99
    ID           shift, and go to state 100
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 101
    type                       go to state 102
    function                   go to state 103
    statement                  go to state 104
    statement_with_return      go to state 105
    print_statement            go to state 106
    comment                    go to state 107
    jump_statement             go to state 108
    compound_statement         go to state 109
    block_item                 go to state 150
    local_declaration          go to state 112
    expression_statement       go to state 113
    expression_list            go to state 114
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124
    selection_statement        go to state 125
    iteration_statement        go to state 126


State 111

   50 block_item_list: block_item .

    $default  reduce using rule 50 (block_item_list)


State 112

   53 block_item: local_declaration .

    $default  reduce using rule 53 (block_item)


State 113

   37 statement_with_return: expression_statement .

    $default  reduce using rule 37 (statement_with_return)


State 114

   63 expression_statement: expression_list . SEMICOLON
   65 expression_list: expression_list . COMMA assignment_expression

    COMMA      shift, and go to state 151
    SEMICOLON  shift, and go to state 152


State 115

   64 expression_list: assignment_expression .

    $default  reduce using rule 64 (expression_list)


State 116

   66 assignment_expression: logical_or_expression .
   78 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 153

    $default  reduce using rule 66 (assignment_expression)


State 117

   77 logical_or_expression: logical_and_expression .
   80 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 154

    $default  reduce using rule 77 (logical_or_expression)


State 118

   79 logical_and_expression: equality_expression .
   82 equality_expression: equality_expression . EQ relational_expression
   83                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 155
    NE  shift, and go to state 156

    $default  reduce using rule 79 (logical_and_expression)


State 119

   81 equality_expression: relational_expression .
   85 relational_expression: relational_expression . MT additive_expression
   86                      | relational_expression . LT additive_expression
   87                      | relational_expression . MTE additive_expression
   88                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 157
    LT   shift, and go to state 158
    MTE  shift, and go to state 159
    LTE  shift, and go to state 160

    $default  reduce using rule 81 (equality_expression)


State 120

   84 relational_expression: additive_expression .
   90 additive_expression: additive_expression . ADD multiplicative_expression
   91                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 84 (relational_expression)


State 121

   89 additive_expression: multiplicative_expression .
   93 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   94                          | multiplicative_expression . DIV prefix_expression
   95                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 163
    DIV  shift, and go to state 164
    MOD  shift, and go to state 165

    $default  reduce using rule 89 (additive_expression)


State 122

   92 multiplicative_expression: prefix_expression .

    $default  reduce using rule 92 (multiplicative_expression)


State 123

   96 prefix_expression: postfix_expression .

    $default  reduce using rule 96 (prefix_expression)


State 124

  106 postfix_expression: bra_expression . INC
  107                   | bra_expression . DEC

    INC  shift, and go to state 166
    DEC  shift, and go to state 167


State 125

   33 statement: selection_statement .

    $default  reduce using rule 33 (statement)


State 126

   34 statement: iteration_statement .

    $default  reduce using rule 34 (statement)


State 127

   99 postfix_expression: ID .
  101                   | ID . LB $@8 RB
  103                   | ID . LB $@9 expression_list RB
  108 bra_expression: ID .

    LB  shift, and go to state 143

    INC       reduce using rule 108 (bra_expression)
    DEC       reduce using rule 108 (bra_expression)
    $default  reduce using rule 99 (postfix_expression)


State 128

   97 prefix_expression: ADD prefix_expression .

    $default  reduce using rule 97 (prefix_expression)


State 129

   98 prefix_expression: SUB prefix_expression .

    $default  reduce using rule 98 (prefix_expression)


State 130

   65 expression_list: expression_list . COMMA assignment_expression
  105 postfix_expression: LB expression_list . RB

    RB     shift, and go to state 168
    COMMA  shift, and go to state 151


State 131

  106 postfix_expression: bra_expression . INC
  107                   | bra_expression . DEC
  109 bra_expression: LB bra_expression . RB

    INC  shift, and go to state 166
    DEC  shift, and go to state 167
    RB   shift, and go to state 169


State 132

   40 print_statement: PRINT LB . ID $@3 RB SEMICOLON
   41                | PRINT LB . STR_CONST RB SEMICOLON

    STR_CONST  shift, and go to state 170
    ID         shift, and go to state 171


State 133

  134 selection_statement: IF LB . expression_list RB compound_statement
  135                    | IF LB . expression_list RB compound_statement ELSE selection_statement
  136                    | IF LB . expression_list RB compound_statement ELSE compound_statement

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str          go to state 101
    expression_list            go to state 172
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 134

  137 iteration_statement: WHILE LB . expression_list RB loop_compound_statement

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str          go to state 101
    expression_list            go to state 173
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 135

   44 jump_statement: RET SEMICOLON .
   62 expression_statement: SEMICOLON .

    ADD          reduce using rule 44 (jump_statement)
    ADD          [reduce using rule 62 (expression_statement)]
    SUB          reduce using rule 44 (jump_statement)
    SUB          [reduce using rule 62 (expression_statement)]
    LB           reduce using rule 44 (jump_statement)
    LB           [reduce using rule 62 (expression_statement)]
    LCB          reduce using rule 44 (jump_statement)
    LCB          [reduce using rule 62 (expression_statement)]
    RCB          reduce using rule 44 (jump_statement)
    RCB          [reduce using rule 62 (expression_statement)]
    PRINT        reduce using rule 44 (jump_statement)
    PRINT        [reduce using rule 62 (expression_statement)]
    IF           reduce using rule 44 (jump_statement)
    IF           [reduce using rule 62 (expression_statement)]
    WHILE        reduce using rule 44 (jump_statement)
    WHILE        [reduce using rule 62 (expression_statement)]
    RET          reduce using rule 44 (jump_statement)
    RET          [reduce using rule 62 (expression_statement)]
    CONT         reduce using rule 44 (jump_statement)
    CONT         [reduce using rule 62 (expression_statement)]
    BREAK        reduce using rule 44 (jump_statement)
    BREAK        [reduce using rule 62 (expression_statement)]
    TRUE         reduce using rule 44 (jump_statement)
    TRUE         [reduce using rule 62 (expression_statement)]
    FALSE        reduce using rule 44 (jump_statement)
    FALSE        [reduce using rule 62 (expression_statement)]
    I_CONST      reduce using rule 44 (jump_statement)
    I_CONST      [reduce using rule 62 (expression_statement)]
    F_CONST      reduce using rule 44 (jump_statement)
    F_CONST      [reduce using rule 62 (expression_statement)]
    C_COMMENT    reduce using rule 44 (jump_statement)
    C_COMMENT    [reduce using rule 62 (expression_statement)]
    CPP_COMMENT  reduce using rule 44 (jump_statement)
    CPP_COMMENT  [reduce using rule 62 (expression_statement)]
    SEMICOLON    reduce using rule 44 (jump_statement)
    SEMICOLON    [reduce using rule 62 (expression_statement)]
    ID           reduce using rule 44 (jump_statement)
    ID           [reduce using rule 62 (expression_statement)]
    VOID         reduce using rule 44 (jump_statement)
    VOID         [reduce using rule 62 (expression_statement)]
    INT          reduce using rule 44 (jump_statement)
    INT          [reduce using rule 62 (expression_statement)]
    FLOAT        reduce using rule 44 (jump_statement)
    FLOAT        [reduce using rule 62 (expression_statement)]
    STRING       reduce using rule 44 (jump_statement)
    STRING       [reduce using rule 62 (expression_statement)]
    BOOL         reduce using rule 44 (jump_statement)
    BOOL         [reduce using rule 62 (expression_statement)]
    $default     reduce using rule 44 (jump_statement)


State 136

   45 jump_statement: RET statement_with_return .

    $default  reduce using rule 45 (jump_statement)


State 137

   70 assignment_expression: ID ASGN . $@7 STR_CONST
   71 assignment_operator: ASGN .

    STR_CONST  reduce using rule 69 ($@7)
    $default   reduce using rule 71 (assignment_operator)

    $@7  go to state 174


State 138

   72 assignment_operator: ADDASGN .

    $default  reduce using rule 72 (assignment_operator)


State 139

   73 assignment_operator: SUBASGN .

    $default  reduce using rule 73 (assignment_operator)


State 140

   74 assignment_operator: MULASGN .

    $default  reduce using rule 74 (assignment_operator)


State 141

   75 assignment_operator: DIVASGN .

    $default  reduce using rule 75 (assignment_operator)


State 142

   76 assignment_operator: MODASGN .

    $default  reduce using rule 76 (assignment_operator)


State 143

  101 postfix_expression: ID LB . $@8 RB
  103                   | ID LB . $@9 expression_list RB

    RB        reduce using rule 100 ($@8)
    $default  reduce using rule 102 ($@9)

    $@8  go to state 175
    $@9  go to state 176


State 144

   68 assignment_expression: ID assignment_operator . $@6 assignment_expression

    $default  reduce using rule 67 ($@6)

    $@6  go to state 177


State 145

   55 local_declaration: type SEMICOLON .

    $default  reduce using rule 55 (local_declaration)


State 146

   23 function: type ID . LB RB SEMICOLON
   24         | type ID . LB function_parameter_list RB SEMICOLON
   26         | type ID . LB RB $@1 compound_statement
   28         | type ID . LB function_parameter_list RB $@2 compound_statement
   59 local_declarator: ID .
   60                 | ID . ASGN assignment_expression
   61                 | ID . ASGN only_const_operation

    ASGN  shift, and go to state 178
    LB    shift, and go to state 21

    $default  reduce using rule 59 (local_declarator)


State 147

   56 local_declaration: type local_declarator_list . SEMICOLON
   58 local_declarator_list: local_declarator_list . COMMA local_declarator

    COMMA      shift, and go to state 179
    SEMICOLON  shift, and go to state 180


State 148

   57 local_declarator_list: local_declarator .

    $default  reduce using rule 57 (local_declarator_list)


State 149

   49 compound_statement: LCB $@5 block_item_list RCB .

    $default  reduce using rule 49 (compound_statement)


State 150

   51 block_item_list: block_item_list block_item .

    $default  reduce using rule 51 (block_item_list)


State 151

   65 expression_list: expression_list COMMA . assignment_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str          go to state 101
    assignment_expression      go to state 181
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 152

   63 expression_statement: expression_list SEMICOLON .

    $default  reduce using rule 63 (expression_statement)


State 153

   78 logical_or_expression: logical_or_expression OR . logical_and_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    logical_and_expression     go to state 182
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 154

   80 logical_and_expression: logical_and_expression AND . equality_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    equality_expression        go to state 183
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 155

   82 equality_expression: equality_expression EQ . relational_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    relational_expression      go to state 184
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 156

   83 equality_expression: equality_expression NE . relational_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    relational_expression      go to state 185
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 157

   85 relational_expression: relational_expression MT . additive_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    additive_expression        go to state 186
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 158

   86 relational_expression: relational_expression LT . additive_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    additive_expression        go to state 187
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 159

   87 relational_expression: relational_expression MTE . additive_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    additive_expression        go to state 188
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 160

   88 relational_expression: relational_expression LTE . additive_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    additive_expression        go to state 189
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 161

   90 additive_expression: additive_expression ADD . multiplicative_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    multiplicative_expression  go to state 190
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 162

   91 additive_expression: additive_expression SUB . multiplicative_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str          go to state 101
    multiplicative_expression  go to state 191
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 163

   93 multiplicative_expression: multiplicative_expression MUL . prefix_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str   go to state 101
    prefix_expression   go to state 192
    postfix_expression  go to state 123
    bra_expression      go to state 124


State 164

   94 multiplicative_expression: multiplicative_expression DIV . prefix_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str   go to state 101
    prefix_expression   go to state 193
    postfix_expression  go to state 123
    bra_expression      go to state 124


State 165

   95 multiplicative_expression: multiplicative_expression MOD . prefix_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str   go to state 101
    prefix_expression   go to state 194
    postfix_expression  go to state 123
    bra_expression      go to state 124


State 166

  106 postfix_expression: bra_expression INC .

    $default  reduce using rule 106 (postfix_expression)


State 167

  107 postfix_expression: bra_expression DEC .

    $default  reduce using rule 107 (postfix_expression)


State 168

  105 postfix_expression: LB expression_list RB .

    $default  reduce using rule 105 (postfix_expression)


State 169

  109 bra_expression: LB bra_expression RB .

    $default  reduce using rule 109 (bra_expression)


State 170

   41 print_statement: PRINT LB STR_CONST . RB SEMICOLON

    RB  shift, and go to state 195


State 171

   40 print_statement: PRINT LB ID . $@3 RB SEMICOLON

    $default  reduce using rule 39 ($@3)

    $@3  go to state 196


State 172

   65 expression_list: expression_list . COMMA assignment_expression
  134 selection_statement: IF LB expression_list . RB compound_statement
  135                    | IF LB expression_list . RB compound_statement ELSE selection_statement
  136                    | IF LB expression_list . RB compound_statement ELSE compound_statement

    RB     shift, and go to state 197
    COMMA  shift, and go to state 151


State 173

   65 expression_list: expression_list . COMMA assignment_expression
  137 iteration_statement: WHILE LB expression_list . RB loop_compound_statement

    RB     shift, and go to state 198
    COMMA  shift, and go to state 151


State 174

   70 assignment_expression: ID ASGN $@7 . STR_CONST

    STR_CONST  shift, and go to state 199


State 175

  101 postfix_expression: ID LB $@8 . RB

    RB  shift, and go to state 200


State 176

  103 postfix_expression: ID LB $@9 . expression_list RB

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str          go to state 101
    expression_list            go to state 201
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 177

   68 assignment_expression: ID assignment_operator $@6 . assignment_expression

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str          go to state 101
    assignment_expression      go to state 202
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 178

   60 local_declarator: ID ASGN . assignment_expression
   61                 | ID ASGN . only_const_operation

    ADD      shift, and go to state 203
    SUB      shift, and go to state 204
    LB       shift, and go to state 205
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    only_const_operation             go to state 206
    const_without_str                go to state 207
    assignment_expression            go to state 208
    logical_or_expression            go to state 116
    logical_and_expression           go to state 117
    equality_expression              go to state 118
    relational_expression            go to state 119
    additive_expression              go to state 120
    multiplicative_expression        go to state 121
    prefix_expression                go to state 122
    postfix_expression               go to state 123
    bra_expression                   go to state 124
    const_logical_or_expression      go to state 34
    const_logical_and_expression     go to state 35
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 179

   58 local_declarator_list: local_declarator_list COMMA . local_declarator

    ID  shift, and go to state 209

    local_declarator  go to state 210


State 180

   56 local_declaration: type local_declarator_list SEMICOLON .

    $default  reduce using rule 56 (local_declaration)


State 181

   65 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 65 (expression_list)


State 182

   78 logical_or_expression: logical_or_expression OR logical_and_expression .
   80 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 154

    $default  reduce using rule 78 (logical_or_expression)


State 183

   80 logical_and_expression: logical_and_expression AND equality_expression .
   82 equality_expression: equality_expression . EQ relational_expression
   83                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 155
    NE  shift, and go to state 156

    $default  reduce using rule 80 (logical_and_expression)


State 184

   82 equality_expression: equality_expression EQ relational_expression .
   85 relational_expression: relational_expression . MT additive_expression
   86                      | relational_expression . LT additive_expression
   87                      | relational_expression . MTE additive_expression
   88                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 157
    LT   shift, and go to state 158
    MTE  shift, and go to state 159
    LTE  shift, and go to state 160

    $default  reduce using rule 82 (equality_expression)


State 185

   83 equality_expression: equality_expression NE relational_expression .
   85 relational_expression: relational_expression . MT additive_expression
   86                      | relational_expression . LT additive_expression
   87                      | relational_expression . MTE additive_expression
   88                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 157
    LT   shift, and go to state 158
    MTE  shift, and go to state 159
    LTE  shift, and go to state 160

    $default  reduce using rule 83 (equality_expression)


State 186

   85 relational_expression: relational_expression MT additive_expression .
   90 additive_expression: additive_expression . ADD multiplicative_expression
   91                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 85 (relational_expression)


State 187

   86 relational_expression: relational_expression LT additive_expression .
   90 additive_expression: additive_expression . ADD multiplicative_expression
   91                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 86 (relational_expression)


State 188

   87 relational_expression: relational_expression MTE additive_expression .
   90 additive_expression: additive_expression . ADD multiplicative_expression
   91                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 87 (relational_expression)


State 189

   88 relational_expression: relational_expression LTE additive_expression .
   90 additive_expression: additive_expression . ADD multiplicative_expression
   91                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 161
    SUB  shift, and go to state 162

    $default  reduce using rule 88 (relational_expression)


State 190

   90 additive_expression: additive_expression ADD multiplicative_expression .
   93 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   94                          | multiplicative_expression . DIV prefix_expression
   95                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 163
    DIV  shift, and go to state 164
    MOD  shift, and go to state 165

    $default  reduce using rule 90 (additive_expression)


State 191

   91 additive_expression: additive_expression SUB multiplicative_expression .
   93 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   94                          | multiplicative_expression . DIV prefix_expression
   95                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 163
    DIV  shift, and go to state 164
    MOD  shift, and go to state 165

    $default  reduce using rule 91 (additive_expression)


State 192

   93 multiplicative_expression: multiplicative_expression MUL prefix_expression .

    $default  reduce using rule 93 (multiplicative_expression)


State 193

   94 multiplicative_expression: multiplicative_expression DIV prefix_expression .

    $default  reduce using rule 94 (multiplicative_expression)


State 194

   95 multiplicative_expression: multiplicative_expression MOD prefix_expression .

    $default  reduce using rule 95 (multiplicative_expression)


State 195

   41 print_statement: PRINT LB STR_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 211


State 196

   40 print_statement: PRINT LB ID $@3 . RB SEMICOLON

    RB  shift, and go to state 212


State 197

  134 selection_statement: IF LB expression_list RB . compound_statement
  135                    | IF LB expression_list RB . compound_statement ELSE selection_statement
  136                    | IF LB expression_list RB . compound_statement ELSE compound_statement

    LCB  shift, and go to state 82

    compound_statement  go to state 213


State 198

  137 iteration_statement: WHILE LB expression_list RB . loop_compound_statement

    LCB  shift, and go to state 214

    loop_compound_statement  go to state 215


State 199

   70 assignment_expression: ID ASGN $@7 STR_CONST .

    $default  reduce using rule 70 (assignment_expression)


State 200

  101 postfix_expression: ID LB $@8 RB .

    $default  reduce using rule 101 (postfix_expression)


State 201

   65 expression_list: expression_list . COMMA assignment_expression
  103 postfix_expression: ID LB $@9 expression_list . RB

    RB     shift, and go to state 216
    COMMA  shift, and go to state 151


State 202

   68 assignment_expression: ID assignment_operator $@6 assignment_expression .

    $default  reduce using rule 68 (assignment_expression)


State 203

   97 prefix_expression: ADD . prefix_expression
  130 const_prefix_expression: ADD . const_prefix_expression

    ADD      shift, and go to state 203
    SUB      shift, and go to state 204
    LB       shift, and go to state 205
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str         go to state 207
    prefix_expression         go to state 128
    postfix_expression        go to state 123
    bra_expression            go to state 124
    const_prefix_expression   go to state 47
    const_postfix_expression  go to state 41


State 204

   98 prefix_expression: SUB . prefix_expression
  131 const_prefix_expression: SUB . const_prefix_expression

    ADD      shift, and go to state 203
    SUB      shift, and go to state 204
    LB       shift, and go to state 205
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 127

    const_without_str         go to state 207
    prefix_expression         go to state 129
    postfix_expression        go to state 123
    bra_expression            go to state 124
    const_prefix_expression   go to state 48
    const_postfix_expression  go to state 41


State 205

  105 postfix_expression: LB . expression_list RB
  109 bra_expression: LB . bra_expression RB
  133 const_postfix_expression: LB . const_logical_or_expression RB

    ADD      shift, and go to state 203
    SUB      shift, and go to state 204
    LB       shift, and go to state 205
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str                go to state 207
    expression_list                  go to state 130
    assignment_expression            go to state 115
    logical_or_expression            go to state 116
    logical_and_expression           go to state 117
    equality_expression              go to state 118
    relational_expression            go to state 119
    additive_expression              go to state 120
    multiplicative_expression        go to state 121
    prefix_expression                go to state 122
    postfix_expression               go to state 123
    bra_expression                   go to state 131
    const_logical_or_expression      go to state 49
    const_logical_and_expression     go to state 35
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 206

   61 local_declarator: ID ASGN only_const_operation .

    $default  reduce using rule 61 (local_declarator)


State 207

  104 postfix_expression: const_without_str .
  132 const_postfix_expression: const_without_str .

    ADD        reduce using rule 104 (postfix_expression)
    ADD        [reduce using rule 132 (const_postfix_expression)]
    SUB        reduce using rule 104 (postfix_expression)
    SUB        [reduce using rule 132 (const_postfix_expression)]
    MUL        reduce using rule 104 (postfix_expression)
    MUL        [reduce using rule 132 (const_postfix_expression)]
    DIV        reduce using rule 104 (postfix_expression)
    DIV        [reduce using rule 132 (const_postfix_expression)]
    MOD        reduce using rule 104 (postfix_expression)
    MOD        [reduce using rule 132 (const_postfix_expression)]
    MT         reduce using rule 104 (postfix_expression)
    MT         [reduce using rule 132 (const_postfix_expression)]
    LT         reduce using rule 104 (postfix_expression)
    LT         [reduce using rule 132 (const_postfix_expression)]
    MTE        reduce using rule 104 (postfix_expression)
    MTE        [reduce using rule 132 (const_postfix_expression)]
    LTE        reduce using rule 104 (postfix_expression)
    LTE        [reduce using rule 132 (const_postfix_expression)]
    EQ         reduce using rule 104 (postfix_expression)
    EQ         [reduce using rule 132 (const_postfix_expression)]
    NE         reduce using rule 104 (postfix_expression)
    NE         [reduce using rule 132 (const_postfix_expression)]
    AND        reduce using rule 104 (postfix_expression)
    AND        [reduce using rule 132 (const_postfix_expression)]
    OR         reduce using rule 104 (postfix_expression)
    OR         [reduce using rule 132 (const_postfix_expression)]
    RB         reduce using rule 104 (postfix_expression)
    RB         [reduce using rule 132 (const_postfix_expression)]
    COMMA      reduce using rule 104 (postfix_expression)
    COMMA      [reduce using rule 132 (const_postfix_expression)]
    SEMICOLON  reduce using rule 104 (postfix_expression)
    SEMICOLON  [reduce using rule 132 (const_postfix_expression)]
    $default   reduce using rule 104 (postfix_expression)


State 208

   60 local_declarator: ID ASGN assignment_expression .

    $default  reduce using rule 60 (local_declarator)


State 209

   59 local_declarator: ID .
   60                 | ID . ASGN assignment_expression
   61                 | ID . ASGN only_const_operation

    ASGN  shift, and go to state 178

    $default  reduce using rule 59 (local_declarator)


State 210

   58 local_declarator_list: local_declarator_list COMMA local_declarator .

    $default  reduce using rule 58 (local_declarator_list)


State 211

   41 print_statement: PRINT LB STR_CONST RB SEMICOLON .

    $default  reduce using rule 41 (print_statement)


State 212

   40 print_statement: PRINT LB ID $@3 RB . SEMICOLON

    SEMICOLON  shift, and go to state 217


State 213

  134 selection_statement: IF LB expression_list RB compound_statement .
  135                    | IF LB expression_list RB compound_statement . ELSE selection_statement
  136                    | IF LB expression_list RB compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 218

    $default  reduce using rule 134 (selection_statement)


State 214

  149 loop_compound_statement: LCB . $@10 RCB
  151                        | LCB . $@11 loop_block_item_list RCB

    RCB       reduce using rule 148 ($@10)
    $default  reduce using rule 150 ($@11)

    $@10  go to state 219
    $@11  go to state 220


State 215

  137 iteration_statement: WHILE LB expression_list RB loop_compound_statement .

    $default  reduce using rule 137 (iteration_statement)


State 216

  103 postfix_expression: ID LB $@9 expression_list RB .

    $default  reduce using rule 103 (postfix_expression)


State 217

   40 print_statement: PRINT LB ID $@3 RB SEMICOLON .

    $default  reduce using rule 40 (print_statement)


State 218

  135 selection_statement: IF LB expression_list RB compound_statement ELSE . selection_statement
  136                    | IF LB expression_list RB compound_statement ELSE . compound_statement

    LCB  shift, and go to state 82
    IF   shift, and go to state 96

    compound_statement   go to state 221
    selection_statement  go to state 222


State 219

  149 loop_compound_statement: LCB $@10 . RCB

    RCB  shift, and go to state 223


State 220

  151 loop_compound_statement: LCB $@11 . loop_block_item_list RCB

    ADD          shift, and go to state 92
    SUB          shift, and go to state 93
    LB           shift, and go to state 94
    LCB          shift, and go to state 214
    PRINT        shift, and go to state 95
    IF           shift, and go to state 224
    WHILE        shift, and go to state 97
    RET          shift, and go to state 98
    CONT         shift, and go to state 225
    BREAK        shift, and go to state 226
    TRUE         shift, and go to state 27
    FALSE        shift, and go to state 28
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 99
    ID           shift, and go to state 100
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 101
    type                       go to state 102
    function                   go to state 227
    print_statement            go to state 228
    comment                    go to state 229
    jump_statement             go to state 230
    local_declaration          go to state 231
    expression_statement       go to state 232
    expression_list            go to state 114
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124
    iteration_statement        go to state 233
    loop_statement             go to state 234
    loop_selection_statement   go to state 235
    loop_compound_statement    go to state 236
    loop_block_item_list       go to state 237
    loop_block_item            go to state 238
    loop_jump_statement        go to state 239


State 221

  136 selection_statement: IF LB expression_list RB compound_statement ELSE compound_statement .

    $default  reduce using rule 136 (selection_statement)


State 222

  135 selection_statement: IF LB expression_list RB compound_statement ELSE selection_statement .

    $default  reduce using rule 135 (selection_statement)


State 223

  149 loop_compound_statement: LCB $@10 RCB .

    $default  reduce using rule 149 (loop_compound_statement)


State 224

  145 loop_selection_statement: IF . LB expression_list RB loop_compound_statement
  146                         | IF . LB expression_list RB loop_compound_statement ELSE loop_selection_statement
  147                         | IF . LB expression_list RB loop_compound_statement ELSE loop_compound_statement

    LB  shift, and go to state 240


State 225

  157 loop_jump_statement: CONT . SEMICOLON

    SEMICOLON  shift, and go to state 241


State 226

  158 loop_jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 242


State 227

  156 loop_block_item: function .

    $default  reduce using rule 156 (loop_block_item)


State 228

  142 loop_statement: print_statement .

    $default  reduce using rule 142 (loop_statement)


State 229

  143 loop_statement: comment .

    $default  reduce using rule 143 (loop_statement)


State 230

  159 loop_jump_statement: jump_statement .

    $default  reduce using rule 159 (loop_jump_statement)


State 231

  155 loop_block_item: local_declaration .

    $default  reduce using rule 155 (loop_block_item)


State 232

  139 loop_statement: expression_statement .

    $default  reduce using rule 139 (loop_statement)


State 233

  141 loop_statement: iteration_statement .

    $default  reduce using rule 141 (loop_statement)


State 234

  154 loop_block_item: loop_statement .

    $default  reduce using rule 154 (loop_block_item)


State 235

  140 loop_statement: loop_selection_statement .

    $default  reduce using rule 140 (loop_statement)


State 236

  138 loop_statement: loop_compound_statement .

    $default  reduce using rule 138 (loop_statement)


State 237

  151 loop_compound_statement: LCB $@11 loop_block_item_list . RCB
  153 loop_block_item_list: loop_block_item_list . loop_block_item

    ADD          shift, and go to state 92
    SUB          shift, and go to state 93
    LB           shift, and go to state 94
    LCB          shift, and go to state 214
    RCB          shift, and go to state 243
    PRINT        shift, and go to state 95
    IF           shift, and go to state 224
    WHILE        shift, and go to state 97
    RET          shift, and go to state 98
    CONT         shift, and go to state 225
    BREAK        shift, and go to state 226
    TRUE         shift, and go to state 27
    FALSE        shift, and go to state 28
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 99
    ID           shift, and go to state 100
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 101
    type                       go to state 102
    function                   go to state 227
    print_statement            go to state 228
    comment                    go to state 229
    jump_statement             go to state 230
    local_declaration          go to state 231
    expression_statement       go to state 232
    expression_list            go to state 114
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124
    iteration_statement        go to state 233
    loop_statement             go to state 234
    loop_selection_statement   go to state 235
    loop_compound_statement    go to state 236
    loop_block_item            go to state 244
    loop_jump_statement        go to state 239


State 238

  152 loop_block_item_list: loop_block_item .

    $default  reduce using rule 152 (loop_block_item_list)


State 239

  144 loop_statement: loop_jump_statement .

    $default  reduce using rule 144 (loop_statement)


State 240

  145 loop_selection_statement: IF LB . expression_list RB loop_compound_statement
  146                         | IF LB . expression_list RB loop_compound_statement ELSE loop_selection_statement
  147                         | IF LB . expression_list RB loop_compound_statement ELSE loop_compound_statement

    ADD      shift, and go to state 92
    SUB      shift, and go to state 93
    LB       shift, and go to state 94
    TRUE     shift, and go to state 27
    FALSE    shift, and go to state 28
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 100

    const_without_str          go to state 101
    expression_list            go to state 245
    assignment_expression      go to state 115
    logical_or_expression      go to state 116
    logical_and_expression     go to state 117
    equality_expression        go to state 118
    relational_expression      go to state 119
    additive_expression        go to state 120
    multiplicative_expression  go to state 121
    prefix_expression          go to state 122
    postfix_expression         go to state 123
    bra_expression             go to state 124


State 241

  157 loop_jump_statement: CONT SEMICOLON .

    $default  reduce using rule 157 (loop_jump_statement)


State 242

  158 loop_jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 158 (loop_jump_statement)


State 243

  151 loop_compound_statement: LCB $@11 loop_block_item_list RCB .

    $default  reduce using rule 151 (loop_compound_statement)


State 244

  153 loop_block_item_list: loop_block_item_list loop_block_item .

    $default  reduce using rule 153 (loop_block_item_list)


State 245

   65 expression_list: expression_list . COMMA assignment_expression
  145 loop_selection_statement: IF LB expression_list . RB loop_compound_statement
  146                         | IF LB expression_list . RB loop_compound_statement ELSE loop_selection_statement
  147                         | IF LB expression_list . RB loop_compound_statement ELSE loop_compound_statement

    RB     shift, and go to state 246
    COMMA  shift, and go to state 151


State 246

  145 loop_selection_statement: IF LB expression_list RB . loop_compound_statement
  146                         | IF LB expression_list RB . loop_compound_statement ELSE loop_selection_statement
  147                         | IF LB expression_list RB . loop_compound_statement ELSE loop_compound_statement

    LCB  shift, and go to state 214

    loop_compound_statement  go to state 247


State 247

  145 loop_selection_statement: IF LB expression_list RB loop_compound_statement .
  146                         | IF LB expression_list RB loop_compound_statement . ELSE loop_selection_statement
  147                         | IF LB expression_list RB loop_compound_statement . ELSE loop_compound_statement

    ELSE  shift, and go to state 248

    $default  reduce using rule 145 (loop_selection_statement)


State 248

  146 loop_selection_statement: IF LB expression_list RB loop_compound_statement ELSE . loop_selection_statement
  147                         | IF LB expression_list RB loop_compound_statement ELSE . loop_compound_statement

    LCB  shift, and go to state 214
    IF   shift, and go to state 224

    loop_selection_statement  go to state 249
    loop_compound_statement   go to state 250


State 249

  146 loop_selection_statement: IF LB expression_list RB loop_compound_statement ELSE loop_selection_statement .

    $default  reduce using rule 146 (loop_selection_statement)


State 250

  147 loop_selection_statement: IF LB expression_list RB loop_compound_statement ELSE loop_compound_statement .

    $default  reduce using rule 147 (loop_selection_statement)
