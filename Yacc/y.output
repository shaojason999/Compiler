Terminals unused in grammar

   NOT
   LSB
   RSB
   FOR


State 94 conflicts: 1 reduce/reduce
State 132 conflicts: 24 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration

    3 external_declaration: function_declaration
    4                     | function_definition
    5                     | global_declaration
    6                     | comment

    7 $@1: %empty

    8 global_declaration: type $@1 SEMICOLON
    9                   | type global_declarator_list SEMICOLON

   10 global_declarator_list: global_declarator
   11                       | global_declarator_list COMMA global_declarator

   12 global_declarator: ID
   13                  | ID ASGN only_const_operation
   14                  | ID ASGN STR_CONST

   15 only_const_operation: const_logical_or_expression

   16 const_without_str: I_CONST
   17                  | F_CONST
   18                  | TRUE
   19                  | FALSE

   20 type: VOID
   21     | INT
   22     | FLOAT
   23     | STRING
   24     | BOOL

   25 function_declaration: type ID LB RB SEMICOLON
   26                     | type ID LB function_parameter_list RB SEMICOLON

   27 function_definition: type ID LB RB compound_statement
   28                    | type ID LB function_parameter_list RB compound_statement

   29 function_parameter_list: type ID
   30                        | function_parameter_list COMMA type ID

   31 statement: compound_statement
   32          | statement_with_return
   33          | selection_statement
   34          | iteration_statement
   35          | comment
   36          | jump_statement

   37 statement_with_return: expression_statement
   38                      | print_statement

   39 print_statement: PRINT LB ID RB SEMICOLON
   40                | PRINT LB STR_CONST RB SEMICOLON

   41 comment: C_COMMENT
   42        | CPP_COMMENT

   43 jump_statement: RET SEMICOLON
   44               | RET statement_with_return

   45 compound_statement: LCB RCB
   46                   | LCB block_item_list RCB

   47 block_item_list: block_item
   48                | block_item_list block_item

   49 block_item: statement
   50           | local_declaration
   51           | function_definition

   52 local_declaration: type SEMICOLON
   53                  | type local_declarator_list SEMICOLON

   54 local_declarator_list: local_declarator
   55                      | local_declarator_list COMMA local_declarator

   56 local_declarator: ID
   57                 | ID ASGN assignment_expression
   58                 | ID ASGN STR_CONST

   59 expression_statement: SEMICOLON
   60                     | expression_list SEMICOLON

   61 expression_list: assignment_expression
   62                | expression_list COMMA assignment_expression

   63 assignment_expression: logical_or_expression
   64                      | ID assignment_operator assignment_expression
   65                      | ID ASGN STR_CONST

   66 assignment_operator: ASGN
   67                    | ADDASGN
   68                    | SUBASGN
   69                    | MULASGN
   70                    | DIVASGN
   71                    | MODASGN

   72 logical_or_expression: logical_and_expression
   73                      | logical_or_expression OR logical_and_expression

   74 logical_and_expression: equality_expression
   75                       | logical_and_expression AND equality_expression

   76 equality_expression: relational_expression
   77                    | equality_expression EQ relational_expression
   78                    | equality_expression NE relational_expression

   79 relational_expression: additive_expression
   80                      | relational_expression MT additive_expression
   81                      | relational_expression LT additive_expression
   82                      | relational_expression MTE additive_expression
   83                      | relational_expression LTE additive_expression

   84 additive_expression: multiplicative_expression
   85                    | additive_expression ADD multiplicative_expression
   86                    | additive_expression SUB multiplicative_expression

   87 multiplicative_expression: prefix_expression
   88                          | multiplicative_expression MUL prefix_expression
   89                          | multiplicative_expression DIV prefix_expression
   90                          | multiplicative_expression MOD prefix_expression

   91 prefix_expression: postfix_expression
   92                  | ADD prefix_expression
   93                  | SUB prefix_expression

   94 postfix_expression: ID
   95                   | ID LB RB
   96                   | ID LB expression_list RB
   97                   | const_without_str
   98                   | LB expression_list RB
   99                   | bra_expression INC
  100                   | bra_expression DEC

  101 bra_expression: ID
  102               | LB bra_expression RB

  103 const_logical_or_expression: const_logical_and_expression
  104                            | const_logical_or_expression OR const_logical_and_expression

  105 const_logical_and_expression: const_equality_expression
  106                             | const_logical_and_expression AND const_equality_expression

  107 const_equality_expression: const_relational_expression
  108                          | const_equality_expression EQ const_relational_expression
  109                          | const_equality_expression NE const_relational_expression

  110 const_relational_expression: const_additive_expression
  111                            | const_relational_expression MT const_additive_expression
  112                            | const_relational_expression LT const_additive_expression
  113                            | const_relational_expression MTE const_additive_expression
  114                            | const_relational_expression LTE const_additive_expression

  115 const_additive_expression: const_multiplicative_expression
  116                          | const_additive_expression ADD const_multiplicative_expression
  117                          | const_additive_expression SUB const_multiplicative_expression

  118 const_multiplicative_expression: const_prefix_expression
  119                                | const_multiplicative_expression MUL const_prefix_expression
  120                                | const_multiplicative_expression DIV const_prefix_expression
  121                                | const_multiplicative_expression MOD const_prefix_expression

  122 const_prefix_expression: const_postfix_expression
  123                        | ADD const_prefix_expression
  124                        | SUB const_prefix_expression

  125 const_postfix_expression: const_without_str
  126                         | LB const_logical_or_expression RB

  127 selection_statement: IF LB expression_list RB compound_statement
  128                    | IF LB expression_list RB compound_statement ELSE selection_statement
  129                    | IF LB expression_list RB compound_statement ELSE compound_statement

  130 iteration_statement: WHILE LB expression_list RB loop_compound_statement

  131 loop_statement: compound_statement
  132               | expression_statement
  133               | selection_statement
  134               | iteration_statement
  135               | print_statement
  136               | comment
  137               | loop_jump_statement

  138 loop_compound_statement: LCB RCB
  139                        | LCB loop_block_item_list RCB

  140 loop_block_item_list: loop_block_item
  141                     | loop_block_item_list loop_block_item

  142 loop_block_item: loop_statement
  143                | local_declaration
  144                | function_definition

  145 loop_jump_statement: CONT SEMICOLON
  146                    | BREAK SEMICOLON
  147                    | jump_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 85 92 116 123
SUB (259) 86 93 117 124
MUL (260) 88 119
DIV (261) 89 120
MOD (262) 90 121
INC (263) 99
DEC (264) 100
MT (265) 80 111
LT (266) 81 112
MTE (267) 82 113
LTE (268) 83 114
EQ (269) 77 108
NE (270) 78 109
ASGN (271) 13 14 57 58 65 66
ADDASGN (272) 67
SUBASGN (273) 68
MULASGN (274) 69
DIVASGN (275) 70
MODASGN (276) 71
AND (277) 75 106
OR (278) 73 104
NOT (279)
LB (280) 25 26 27 28 39 40 95 96 98 102 126 127 128 129 130
RB (281) 25 26 27 28 39 40 95 96 98 102 126 127 128 129 130
LCB (282) 45 46 138 139
RCB (283) 45 46 138 139
LSB (284)
RSB (285)
COMMA (286) 11 30 55 62
PRINT (287) 39 40
IF (288) 127 128 129
ELSE (289) 128 129
FOR (290)
WHILE (291) 130
RET (292) 43 44
CONT (293) 145
BREAK (294) 146
TRUE (295) 18
FALSE (296) 19
STR_CONST (297) 14 40 58 65
I_CONST (298) 16
F_CONST (299) 17
C_COMMENT (300) 41
CPP_COMMENT (301) 42
SEMICOLON (302) 8 9 25 26 39 40 43 52 53 59 60 145 146
ID (303) 12 13 14 25 26 27 28 29 30 39 56 57 58 64 65 94 95 96 101
VOID (304) 20
INT (305) 21
FLOAT (306) 22
STRING (307) 23
BOOL (308) 24


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0 2
external_declaration (56)
    on left: 3 4 5 6, on right: 1 2
global_declaration (57)
    on left: 8 9, on right: 5
$@1 (58)
    on left: 7, on right: 8
global_declarator_list (59)
    on left: 10 11, on right: 9 11
global_declarator (60)
    on left: 12 13 14, on right: 10 11
only_const_operation (61)
    on left: 15, on right: 13
const_without_str (62)
    on left: 16 17 18 19, on right: 97 125
type (63)
    on left: 20 21 22 23 24, on right: 8 9 25 26 27 28 29 30 52 53
function_declaration (64)
    on left: 25 26, on right: 3
function_definition (65)
    on left: 27 28, on right: 4 51 144
function_parameter_list (66)
    on left: 29 30, on right: 26 28 30
statement (67)
    on left: 31 32 33 34 35 36, on right: 49
statement_with_return (68)
    on left: 37 38, on right: 32 44
print_statement (69)
    on left: 39 40, on right: 38 135
comment (70)
    on left: 41 42, on right: 6 35 136
jump_statement (71)
    on left: 43 44, on right: 36 147
compound_statement (72)
    on left: 45 46, on right: 27 28 31 127 128 129 131
block_item_list (73)
    on left: 47 48, on right: 46 48
block_item (74)
    on left: 49 50 51, on right: 47 48
local_declaration (75)
    on left: 52 53, on right: 50 143
local_declarator_list (76)
    on left: 54 55, on right: 53 55
local_declarator (77)
    on left: 56 57 58, on right: 54 55
expression_statement (78)
    on left: 59 60, on right: 37 132
expression_list (79)
    on left: 61 62, on right: 60 62 96 98 127 128 129 130
assignment_expression (80)
    on left: 63 64 65, on right: 57 61 62 64
assignment_operator (81)
    on left: 66 67 68 69 70 71, on right: 64
logical_or_expression (82)
    on left: 72 73, on right: 63 73
logical_and_expression (83)
    on left: 74 75, on right: 72 73 75
equality_expression (84)
    on left: 76 77 78, on right: 74 75 77 78
relational_expression (85)
    on left: 79 80 81 82 83, on right: 76 77 78 80 81 82 83
additive_expression (86)
    on left: 84 85 86, on right: 79 80 81 82 83 85 86
multiplicative_expression (87)
    on left: 87 88 89 90, on right: 84 85 86 88 89 90
prefix_expression (88)
    on left: 91 92 93, on right: 87 88 89 90 92 93
postfix_expression (89)
    on left: 94 95 96 97 98 99 100, on right: 91
bra_expression (90)
    on left: 101 102, on right: 99 100 102
const_logical_or_expression (91)
    on left: 103 104, on right: 15 104 126
const_logical_and_expression (92)
    on left: 105 106, on right: 103 104 106
const_equality_expression (93)
    on left: 107 108 109, on right: 105 106 108 109
const_relational_expression (94)
    on left: 110 111 112 113 114, on right: 107 108 109 111 112 113
    114
const_additive_expression (95)
    on left: 115 116 117, on right: 110 111 112 113 114 116 117
const_multiplicative_expression (96)
    on left: 118 119 120 121, on right: 115 116 117 119 120 121
const_prefix_expression (97)
    on left: 122 123 124, on right: 118 119 120 121 123 124
const_postfix_expression (98)
    on left: 125 126, on right: 122
selection_statement (99)
    on left: 127 128 129, on right: 33 128 133
iteration_statement (100)
    on left: 130, on right: 34 134
loop_statement (101)
    on left: 131 132 133 134 135 136 137, on right: 142
loop_compound_statement (102)
    on left: 138 139, on right: 130
loop_block_item_list (103)
    on left: 140 141, on right: 139 141
loop_block_item (104)
    on left: 142 143 144, on right: 140 141
loop_jump_statement (105)
    on left: 145 146 147, on right: 137


State 0

    0 $accept: . program $end

    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    program               go to state 8
    external_declaration  go to state 9
    global_declaration    go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 1

   41 comment: C_COMMENT .

    $default  reduce using rule 41 (comment)


State 2

   42 comment: CPP_COMMENT .

    $default  reduce using rule 42 (comment)


State 3

   20 type: VOID .

    $default  reduce using rule 20 (type)


State 4

   21 type: INT .

    $default  reduce using rule 21 (type)


State 5

   22 type: FLOAT .

    $default  reduce using rule 22 (type)


State 6

   23 type: STRING .

    $default  reduce using rule 23 (type)


State 7

   24 type: BOOL .

    $default  reduce using rule 24 (type)


State 8

    0 $accept: program . $end
    2 program: program . external_declaration

    $end         shift, and go to state 15
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    external_declaration  go to state 16
    global_declaration    go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 9

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 10

    5 external_declaration: global_declaration .

    $default  reduce using rule 5 (external_declaration)


State 11

    8 global_declaration: type . $@1 SEMICOLON
    9                   | type . global_declarator_list SEMICOLON
   25 function_declaration: type . ID LB RB SEMICOLON
   26                     | type . ID LB function_parameter_list RB SEMICOLON
   27 function_definition: type . ID LB RB compound_statement
   28                    | type . ID LB function_parameter_list RB compound_statement

    ID  shift, and go to state 17

    $default  reduce using rule 7 ($@1)

    $@1                     go to state 18
    global_declarator_list  go to state 19
    global_declarator       go to state 20


State 12

    3 external_declaration: function_declaration .

    $default  reduce using rule 3 (external_declaration)


State 13

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 14

    6 external_declaration: comment .

    $default  reduce using rule 6 (external_declaration)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 17

   12 global_declarator: ID .
   13                  | ID . ASGN only_const_operation
   14                  | ID . ASGN STR_CONST
   25 function_declaration: type ID . LB RB SEMICOLON
   26                     | type ID . LB function_parameter_list RB SEMICOLON
   27 function_definition: type ID . LB RB compound_statement
   28                    | type ID . LB function_parameter_list RB compound_statement

    ASGN  shift, and go to state 21
    LB    shift, and go to state 22

    $default  reduce using rule 12 (global_declarator)


State 18

    8 global_declaration: type $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 23


State 19

    9 global_declaration: type global_declarator_list . SEMICOLON
   11 global_declarator_list: global_declarator_list . COMMA global_declarator

    COMMA      shift, and go to state 24
    SEMICOLON  shift, and go to state 25


State 20

   10 global_declarator_list: global_declarator .

    $default  reduce using rule 10 (global_declarator_list)


State 21

   13 global_declarator: ID ASGN . only_const_operation
   14                  | ID ASGN . STR_CONST

    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    LB         shift, and go to state 28
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    STR_CONST  shift, and go to state 31
    I_CONST    shift, and go to state 32
    F_CONST    shift, and go to state 33

    only_const_operation             go to state 34
    const_without_str                go to state 35
    const_logical_or_expression      go to state 36
    const_logical_and_expression     go to state 37
    const_equality_expression        go to state 38
    const_relational_expression      go to state 39
    const_additive_expression        go to state 40
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 22

   25 function_declaration: type ID LB . RB SEMICOLON
   26                     | type ID LB . function_parameter_list RB SEMICOLON
   27 function_definition: type ID LB . RB compound_statement
   28                    | type ID LB . function_parameter_list RB compound_statement

    RB      shift, and go to state 44
    VOID    shift, and go to state 3
    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    type                     go to state 45
    function_parameter_list  go to state 46


State 23

    8 global_declaration: type $@1 SEMICOLON .

    $default  reduce using rule 8 (global_declaration)


State 24

   11 global_declarator_list: global_declarator_list COMMA . global_declarator

    ID  shift, and go to state 47

    global_declarator  go to state 48


State 25

    9 global_declaration: type global_declarator_list SEMICOLON .

    $default  reduce using rule 9 (global_declaration)


State 26

  123 const_prefix_expression: ADD . const_prefix_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str         go to state 35
    const_prefix_expression   go to state 49
    const_postfix_expression  go to state 43


State 27

  124 const_prefix_expression: SUB . const_prefix_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str         go to state 35
    const_prefix_expression   go to state 50
    const_postfix_expression  go to state 43


State 28

  126 const_postfix_expression: LB . const_logical_or_expression RB

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_logical_or_expression      go to state 51
    const_logical_and_expression     go to state 37
    const_equality_expression        go to state 38
    const_relational_expression      go to state 39
    const_additive_expression        go to state 40
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 29

   18 const_without_str: TRUE .

    $default  reduce using rule 18 (const_without_str)


State 30

   19 const_without_str: FALSE .

    $default  reduce using rule 19 (const_without_str)


State 31

   14 global_declarator: ID ASGN STR_CONST .

    $default  reduce using rule 14 (global_declarator)


State 32

   16 const_without_str: I_CONST .

    $default  reduce using rule 16 (const_without_str)


State 33

   17 const_without_str: F_CONST .

    $default  reduce using rule 17 (const_without_str)


State 34

   13 global_declarator: ID ASGN only_const_operation .

    $default  reduce using rule 13 (global_declarator)


State 35

  125 const_postfix_expression: const_without_str .

    $default  reduce using rule 125 (const_postfix_expression)


State 36

   15 only_const_operation: const_logical_or_expression .
  104 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression

    OR  shift, and go to state 52

    $default  reduce using rule 15 (only_const_operation)


State 37

  103 const_logical_or_expression: const_logical_and_expression .
  106 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 53

    $default  reduce using rule 103 (const_logical_or_expression)


State 38

  105 const_logical_and_expression: const_equality_expression .
  108 const_equality_expression: const_equality_expression . EQ const_relational_expression
  109                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 54
    NE  shift, and go to state 55

    $default  reduce using rule 105 (const_logical_and_expression)


State 39

  107 const_equality_expression: const_relational_expression .
  111 const_relational_expression: const_relational_expression . MT const_additive_expression
  112                            | const_relational_expression . LT const_additive_expression
  113                            | const_relational_expression . MTE const_additive_expression
  114                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 56
    LT   shift, and go to state 57
    MTE  shift, and go to state 58
    LTE  shift, and go to state 59

    $default  reduce using rule 107 (const_equality_expression)


State 40

  110 const_relational_expression: const_additive_expression .
  116 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  117                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 110 (const_relational_expression)


State 41

  115 const_additive_expression: const_multiplicative_expression .
  119 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  120                                | const_multiplicative_expression . DIV const_prefix_expression
  121                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 115 (const_additive_expression)


State 42

  118 const_multiplicative_expression: const_prefix_expression .

    $default  reduce using rule 118 (const_multiplicative_expression)


State 43

  122 const_prefix_expression: const_postfix_expression .

    $default  reduce using rule 122 (const_prefix_expression)


State 44

   25 function_declaration: type ID LB RB . SEMICOLON
   27 function_definition: type ID LB RB . compound_statement

    LCB        shift, and go to state 65
    SEMICOLON  shift, and go to state 66

    compound_statement  go to state 67


State 45

   29 function_parameter_list: type . ID

    ID  shift, and go to state 68


State 46

   26 function_declaration: type ID LB function_parameter_list . RB SEMICOLON
   28 function_definition: type ID LB function_parameter_list . RB compound_statement
   30 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 69
    COMMA  shift, and go to state 70


State 47

   12 global_declarator: ID .
   13                  | ID . ASGN only_const_operation
   14                  | ID . ASGN STR_CONST

    ASGN  shift, and go to state 21

    $default  reduce using rule 12 (global_declarator)


State 48

   11 global_declarator_list: global_declarator_list COMMA global_declarator .

    $default  reduce using rule 11 (global_declarator_list)


State 49

  123 const_prefix_expression: ADD const_prefix_expression .

    $default  reduce using rule 123 (const_prefix_expression)


State 50

  124 const_prefix_expression: SUB const_prefix_expression .

    $default  reduce using rule 124 (const_prefix_expression)


State 51

  104 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression
  126 const_postfix_expression: LB const_logical_or_expression . RB

    OR  shift, and go to state 52
    RB  shift, and go to state 71


State 52

  104 const_logical_or_expression: const_logical_or_expression OR . const_logical_and_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_logical_and_expression     go to state 72
    const_equality_expression        go to state 38
    const_relational_expression      go to state 39
    const_additive_expression        go to state 40
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 53

  106 const_logical_and_expression: const_logical_and_expression AND . const_equality_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_equality_expression        go to state 73
    const_relational_expression      go to state 39
    const_additive_expression        go to state 40
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 54

  108 const_equality_expression: const_equality_expression EQ . const_relational_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_relational_expression      go to state 74
    const_additive_expression        go to state 40
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 55

  109 const_equality_expression: const_equality_expression NE . const_relational_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_relational_expression      go to state 75
    const_additive_expression        go to state 40
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 56

  111 const_relational_expression: const_relational_expression MT . const_additive_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_additive_expression        go to state 76
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 57

  112 const_relational_expression: const_relational_expression LT . const_additive_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_additive_expression        go to state 77
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 58

  113 const_relational_expression: const_relational_expression MTE . const_additive_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_additive_expression        go to state 78
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 59

  114 const_relational_expression: const_relational_expression LTE . const_additive_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_additive_expression        go to state 79
    const_multiplicative_expression  go to state 41
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 60

  116 const_additive_expression: const_additive_expression ADD . const_multiplicative_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_multiplicative_expression  go to state 80
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 61

  117 const_additive_expression: const_additive_expression SUB . const_multiplicative_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str                go to state 35
    const_multiplicative_expression  go to state 81
    const_prefix_expression          go to state 42
    const_postfix_expression         go to state 43


State 62

  119 const_multiplicative_expression: const_multiplicative_expression MUL . const_prefix_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str         go to state 35
    const_prefix_expression   go to state 82
    const_postfix_expression  go to state 43


State 63

  120 const_multiplicative_expression: const_multiplicative_expression DIV . const_prefix_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str         go to state 35
    const_prefix_expression   go to state 83
    const_postfix_expression  go to state 43


State 64

  121 const_multiplicative_expression: const_multiplicative_expression MOD . const_prefix_expression

    ADD      shift, and go to state 26
    SUB      shift, and go to state 27
    LB       shift, and go to state 28
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33

    const_without_str         go to state 35
    const_prefix_expression   go to state 84
    const_postfix_expression  go to state 43


State 65

   45 compound_statement: LCB . RCB
   46                   | LCB . block_item_list RCB

    ADD          shift, and go to state 85
    SUB          shift, and go to state 86
    LB           shift, and go to state 87
    LCB          shift, and go to state 65
    RCB          shift, and go to state 88
    PRINT        shift, and go to state 89
    IF           shift, and go to state 90
    WHILE        shift, and go to state 91
    RET          shift, and go to state 92
    TRUE         shift, and go to state 29
    FALSE        shift, and go to state 30
    I_CONST      shift, and go to state 32
    F_CONST      shift, and go to state 33
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 93
    ID           shift, and go to state 94
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 95
    type                       go to state 96
    function_definition        go to state 97
    statement                  go to state 98
    statement_with_return      go to state 99
    print_statement            go to state 100
    comment                    go to state 101
    jump_statement             go to state 102
    compound_statement         go to state 103
    block_item_list            go to state 104
    block_item                 go to state 105
    local_declaration          go to state 106
    expression_statement       go to state 107
    expression_list            go to state 108
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118
    selection_statement        go to state 119
    iteration_statement        go to state 120


State 66

   25 function_declaration: type ID LB RB SEMICOLON .

    $default  reduce using rule 25 (function_declaration)


State 67

   27 function_definition: type ID LB RB compound_statement .

    $default  reduce using rule 27 (function_definition)


State 68

   29 function_parameter_list: type ID .

    $default  reduce using rule 29 (function_parameter_list)


State 69

   26 function_declaration: type ID LB function_parameter_list RB . SEMICOLON
   28 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB        shift, and go to state 65
    SEMICOLON  shift, and go to state 121

    compound_statement  go to state 122


State 70

   30 function_parameter_list: function_parameter_list COMMA . type ID

    VOID    shift, and go to state 3
    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    type  go to state 123


State 71

  126 const_postfix_expression: LB const_logical_or_expression RB .

    $default  reduce using rule 126 (const_postfix_expression)


State 72

  104 const_logical_or_expression: const_logical_or_expression OR const_logical_and_expression .
  106 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 53

    $default  reduce using rule 104 (const_logical_or_expression)


State 73

  106 const_logical_and_expression: const_logical_and_expression AND const_equality_expression .
  108 const_equality_expression: const_equality_expression . EQ const_relational_expression
  109                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 54
    NE  shift, and go to state 55

    $default  reduce using rule 106 (const_logical_and_expression)


State 74

  108 const_equality_expression: const_equality_expression EQ const_relational_expression .
  111 const_relational_expression: const_relational_expression . MT const_additive_expression
  112                            | const_relational_expression . LT const_additive_expression
  113                            | const_relational_expression . MTE const_additive_expression
  114                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 56
    LT   shift, and go to state 57
    MTE  shift, and go to state 58
    LTE  shift, and go to state 59

    $default  reduce using rule 108 (const_equality_expression)


State 75

  109 const_equality_expression: const_equality_expression NE const_relational_expression .
  111 const_relational_expression: const_relational_expression . MT const_additive_expression
  112                            | const_relational_expression . LT const_additive_expression
  113                            | const_relational_expression . MTE const_additive_expression
  114                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 56
    LT   shift, and go to state 57
    MTE  shift, and go to state 58
    LTE  shift, and go to state 59

    $default  reduce using rule 109 (const_equality_expression)


State 76

  111 const_relational_expression: const_relational_expression MT const_additive_expression .
  116 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  117                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 111 (const_relational_expression)


State 77

  112 const_relational_expression: const_relational_expression LT const_additive_expression .
  116 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  117                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 112 (const_relational_expression)


State 78

  113 const_relational_expression: const_relational_expression MTE const_additive_expression .
  116 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  117                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 113 (const_relational_expression)


State 79

  114 const_relational_expression: const_relational_expression LTE const_additive_expression .
  116 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  117                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 114 (const_relational_expression)


State 80

  116 const_additive_expression: const_additive_expression ADD const_multiplicative_expression .
  119 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  120                                | const_multiplicative_expression . DIV const_prefix_expression
  121                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 116 (const_additive_expression)


State 81

  117 const_additive_expression: const_additive_expression SUB const_multiplicative_expression .
  119 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  120                                | const_multiplicative_expression . DIV const_prefix_expression
  121                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63
    MOD  shift, and go to state 64

    $default  reduce using rule 117 (const_additive_expression)


State 82

  119 const_multiplicative_expression: const_multiplicative_expression MUL const_prefix_expression .

    $default  reduce using rule 119 (const_multiplicative_expression)


State 83

  120 const_multiplicative_expression: const_multiplicative_expression DIV const_prefix_expression .

    $default  reduce using rule 120 (const_multiplicative_expression)


State 84

  121 const_multiplicative_expression: const_multiplicative_expression MOD const_prefix_expression .

    $default  reduce using rule 121 (const_multiplicative_expression)


State 85

   92 prefix_expression: ADD . prefix_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str   go to state 95
    prefix_expression   go to state 125
    postfix_expression  go to state 117
    bra_expression      go to state 118


State 86

   93 prefix_expression: SUB . prefix_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str   go to state 95
    prefix_expression   go to state 126
    postfix_expression  go to state 117
    bra_expression      go to state 118


State 87

   98 postfix_expression: LB . expression_list RB
  102 bra_expression: LB . bra_expression RB

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 94

    const_without_str          go to state 95
    expression_list            go to state 127
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 128


State 88

   45 compound_statement: LCB RCB .

    $default  reduce using rule 45 (compound_statement)


State 89

   39 print_statement: PRINT . LB ID RB SEMICOLON
   40                | PRINT . LB STR_CONST RB SEMICOLON

    LB  shift, and go to state 129


State 90

  127 selection_statement: IF . LB expression_list RB compound_statement
  128                    | IF . LB expression_list RB compound_statement ELSE selection_statement
  129                    | IF . LB expression_list RB compound_statement ELSE compound_statement

    LB  shift, and go to state 130


State 91

  130 iteration_statement: WHILE . LB expression_list RB loop_compound_statement

    LB  shift, and go to state 131


State 92

   43 jump_statement: RET . SEMICOLON
   44               | RET . statement_with_return

    ADD        shift, and go to state 85
    SUB        shift, and go to state 86
    LB         shift, and go to state 87
    PRINT      shift, and go to state 89
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    I_CONST    shift, and go to state 32
    F_CONST    shift, and go to state 33
    SEMICOLON  shift, and go to state 132
    ID         shift, and go to state 94

    const_without_str          go to state 95
    statement_with_return      go to state 133
    print_statement            go to state 100
    expression_statement       go to state 107
    expression_list            go to state 108
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 93

   59 expression_statement: SEMICOLON .

    $default  reduce using rule 59 (expression_statement)


State 94

   64 assignment_expression: ID . assignment_operator assignment_expression
   65                      | ID . ASGN STR_CONST
   94 postfix_expression: ID .
   95                   | ID . LB RB
   96                   | ID . LB expression_list RB
  101 bra_expression: ID .

    ASGN     shift, and go to state 134
    ADDASGN  shift, and go to state 135
    SUBASGN  shift, and go to state 136
    MULASGN  shift, and go to state 137
    DIVASGN  shift, and go to state 138
    MODASGN  shift, and go to state 139
    LB       shift, and go to state 140

    INC       reduce using rule 101 (bra_expression)
    DEC       reduce using rule 101 (bra_expression)
    RB        reduce using rule 94 (postfix_expression)
    RB        [reduce using rule 101 (bra_expression)]
    $default  reduce using rule 94 (postfix_expression)

    assignment_operator  go to state 141


State 95

   97 postfix_expression: const_without_str .

    $default  reduce using rule 97 (postfix_expression)


State 96

   27 function_definition: type . ID LB RB compound_statement
   28                    | type . ID LB function_parameter_list RB compound_statement
   52 local_declaration: type . SEMICOLON
   53                  | type . local_declarator_list SEMICOLON

    SEMICOLON  shift, and go to state 142
    ID         shift, and go to state 143

    local_declarator_list  go to state 144
    local_declarator       go to state 145


State 97

   51 block_item: function_definition .

    $default  reduce using rule 51 (block_item)


State 98

   49 block_item: statement .

    $default  reduce using rule 49 (block_item)


State 99

   32 statement: statement_with_return .

    $default  reduce using rule 32 (statement)


State 100

   38 statement_with_return: print_statement .

    $default  reduce using rule 38 (statement_with_return)


State 101

   35 statement: comment .

    $default  reduce using rule 35 (statement)


State 102

   36 statement: jump_statement .

    $default  reduce using rule 36 (statement)


State 103

   31 statement: compound_statement .

    $default  reduce using rule 31 (statement)


State 104

   46 compound_statement: LCB block_item_list . RCB
   48 block_item_list: block_item_list . block_item

    ADD          shift, and go to state 85
    SUB          shift, and go to state 86
    LB           shift, and go to state 87
    LCB          shift, and go to state 65
    RCB          shift, and go to state 146
    PRINT        shift, and go to state 89
    IF           shift, and go to state 90
    WHILE        shift, and go to state 91
    RET          shift, and go to state 92
    TRUE         shift, and go to state 29
    FALSE        shift, and go to state 30
    I_CONST      shift, and go to state 32
    F_CONST      shift, and go to state 33
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 93
    ID           shift, and go to state 94
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 95
    type                       go to state 96
    function_definition        go to state 97
    statement                  go to state 98
    statement_with_return      go to state 99
    print_statement            go to state 100
    comment                    go to state 101
    jump_statement             go to state 102
    compound_statement         go to state 103
    block_item                 go to state 147
    local_declaration          go to state 106
    expression_statement       go to state 107
    expression_list            go to state 108
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118
    selection_statement        go to state 119
    iteration_statement        go to state 120


State 105

   47 block_item_list: block_item .

    $default  reduce using rule 47 (block_item_list)


State 106

   50 block_item: local_declaration .

    $default  reduce using rule 50 (block_item)


State 107

   37 statement_with_return: expression_statement .

    $default  reduce using rule 37 (statement_with_return)


State 108

   60 expression_statement: expression_list . SEMICOLON
   62 expression_list: expression_list . COMMA assignment_expression

    COMMA      shift, and go to state 148
    SEMICOLON  shift, and go to state 149


State 109

   61 expression_list: assignment_expression .

    $default  reduce using rule 61 (expression_list)


State 110

   63 assignment_expression: logical_or_expression .
   73 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 150

    $default  reduce using rule 63 (assignment_expression)


State 111

   72 logical_or_expression: logical_and_expression .
   75 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 151

    $default  reduce using rule 72 (logical_or_expression)


State 112

   74 logical_and_expression: equality_expression .
   77 equality_expression: equality_expression . EQ relational_expression
   78                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 152
    NE  shift, and go to state 153

    $default  reduce using rule 74 (logical_and_expression)


State 113

   76 equality_expression: relational_expression .
   80 relational_expression: relational_expression . MT additive_expression
   81                      | relational_expression . LT additive_expression
   82                      | relational_expression . MTE additive_expression
   83                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 154
    LT   shift, and go to state 155
    MTE  shift, and go to state 156
    LTE  shift, and go to state 157

    $default  reduce using rule 76 (equality_expression)


State 114

   79 relational_expression: additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 79 (relational_expression)


State 115

   84 additive_expression: multiplicative_expression .
   88 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   89                          | multiplicative_expression . DIV prefix_expression
   90                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 160
    DIV  shift, and go to state 161
    MOD  shift, and go to state 162

    $default  reduce using rule 84 (additive_expression)


State 116

   87 multiplicative_expression: prefix_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 117

   91 prefix_expression: postfix_expression .

    $default  reduce using rule 91 (prefix_expression)


State 118

   99 postfix_expression: bra_expression . INC
  100                   | bra_expression . DEC

    INC  shift, and go to state 163
    DEC  shift, and go to state 164


State 119

   33 statement: selection_statement .

    $default  reduce using rule 33 (statement)


State 120

   34 statement: iteration_statement .

    $default  reduce using rule 34 (statement)


State 121

   26 function_declaration: type ID LB function_parameter_list RB SEMICOLON .

    $default  reduce using rule 26 (function_declaration)


State 122

   28 function_definition: type ID LB function_parameter_list RB compound_statement .

    $default  reduce using rule 28 (function_definition)


State 123

   30 function_parameter_list: function_parameter_list COMMA type . ID

    ID  shift, and go to state 165


State 124

   94 postfix_expression: ID .
   95                   | ID . LB RB
   96                   | ID . LB expression_list RB
  101 bra_expression: ID .

    LB  shift, and go to state 140

    INC       reduce using rule 101 (bra_expression)
    DEC       reduce using rule 101 (bra_expression)
    $default  reduce using rule 94 (postfix_expression)


State 125

   92 prefix_expression: ADD prefix_expression .

    $default  reduce using rule 92 (prefix_expression)


State 126

   93 prefix_expression: SUB prefix_expression .

    $default  reduce using rule 93 (prefix_expression)


State 127

   62 expression_list: expression_list . COMMA assignment_expression
   98 postfix_expression: LB expression_list . RB

    RB     shift, and go to state 166
    COMMA  shift, and go to state 148


State 128

   99 postfix_expression: bra_expression . INC
  100                   | bra_expression . DEC
  102 bra_expression: LB bra_expression . RB

    INC  shift, and go to state 163
    DEC  shift, and go to state 164
    RB   shift, and go to state 167


State 129

   39 print_statement: PRINT LB . ID RB SEMICOLON
   40                | PRINT LB . STR_CONST RB SEMICOLON

    STR_CONST  shift, and go to state 168
    ID         shift, and go to state 169


State 130

  127 selection_statement: IF LB . expression_list RB compound_statement
  128                    | IF LB . expression_list RB compound_statement ELSE selection_statement
  129                    | IF LB . expression_list RB compound_statement ELSE compound_statement

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 94

    const_without_str          go to state 95
    expression_list            go to state 170
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 131

  130 iteration_statement: WHILE LB . expression_list RB loop_compound_statement

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 94

    const_without_str          go to state 95
    expression_list            go to state 171
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 132

   43 jump_statement: RET SEMICOLON .
   59 expression_statement: SEMICOLON .

    ADD          reduce using rule 43 (jump_statement)
    ADD          [reduce using rule 59 (expression_statement)]
    SUB          reduce using rule 43 (jump_statement)
    SUB          [reduce using rule 59 (expression_statement)]
    LB           reduce using rule 43 (jump_statement)
    LB           [reduce using rule 59 (expression_statement)]
    LCB          reduce using rule 43 (jump_statement)
    LCB          [reduce using rule 59 (expression_statement)]
    RCB          reduce using rule 43 (jump_statement)
    RCB          [reduce using rule 59 (expression_statement)]
    PRINT        reduce using rule 43 (jump_statement)
    PRINT        [reduce using rule 59 (expression_statement)]
    IF           reduce using rule 43 (jump_statement)
    IF           [reduce using rule 59 (expression_statement)]
    WHILE        reduce using rule 43 (jump_statement)
    WHILE        [reduce using rule 59 (expression_statement)]
    RET          reduce using rule 43 (jump_statement)
    RET          [reduce using rule 59 (expression_statement)]
    CONT         reduce using rule 43 (jump_statement)
    CONT         [reduce using rule 59 (expression_statement)]
    BREAK        reduce using rule 43 (jump_statement)
    BREAK        [reduce using rule 59 (expression_statement)]
    TRUE         reduce using rule 43 (jump_statement)
    TRUE         [reduce using rule 59 (expression_statement)]
    FALSE        reduce using rule 43 (jump_statement)
    FALSE        [reduce using rule 59 (expression_statement)]
    I_CONST      reduce using rule 43 (jump_statement)
    I_CONST      [reduce using rule 59 (expression_statement)]
    F_CONST      reduce using rule 43 (jump_statement)
    F_CONST      [reduce using rule 59 (expression_statement)]
    C_COMMENT    reduce using rule 43 (jump_statement)
    C_COMMENT    [reduce using rule 59 (expression_statement)]
    CPP_COMMENT  reduce using rule 43 (jump_statement)
    CPP_COMMENT  [reduce using rule 59 (expression_statement)]
    SEMICOLON    reduce using rule 43 (jump_statement)
    SEMICOLON    [reduce using rule 59 (expression_statement)]
    ID           reduce using rule 43 (jump_statement)
    ID           [reduce using rule 59 (expression_statement)]
    VOID         reduce using rule 43 (jump_statement)
    VOID         [reduce using rule 59 (expression_statement)]
    INT          reduce using rule 43 (jump_statement)
    INT          [reduce using rule 59 (expression_statement)]
    FLOAT        reduce using rule 43 (jump_statement)
    FLOAT        [reduce using rule 59 (expression_statement)]
    STRING       reduce using rule 43 (jump_statement)
    STRING       [reduce using rule 59 (expression_statement)]
    BOOL         reduce using rule 43 (jump_statement)
    BOOL         [reduce using rule 59 (expression_statement)]
    $default     reduce using rule 43 (jump_statement)


State 133

   44 jump_statement: RET statement_with_return .

    $default  reduce using rule 44 (jump_statement)


State 134

   65 assignment_expression: ID ASGN . STR_CONST
   66 assignment_operator: ASGN .

    STR_CONST  shift, and go to state 172

    $default  reduce using rule 66 (assignment_operator)


State 135

   67 assignment_operator: ADDASGN .

    $default  reduce using rule 67 (assignment_operator)


State 136

   68 assignment_operator: SUBASGN .

    $default  reduce using rule 68 (assignment_operator)


State 137

   69 assignment_operator: MULASGN .

    $default  reduce using rule 69 (assignment_operator)


State 138

   70 assignment_operator: DIVASGN .

    $default  reduce using rule 70 (assignment_operator)


State 139

   71 assignment_operator: MODASGN .

    $default  reduce using rule 71 (assignment_operator)


State 140

   95 postfix_expression: ID LB . RB
   96                   | ID LB . expression_list RB

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    RB       shift, and go to state 173
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 94

    const_without_str          go to state 95
    expression_list            go to state 174
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 141

   64 assignment_expression: ID assignment_operator . assignment_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 94

    const_without_str          go to state 95
    assignment_expression      go to state 175
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 142

   52 local_declaration: type SEMICOLON .

    $default  reduce using rule 52 (local_declaration)


State 143

   27 function_definition: type ID . LB RB compound_statement
   28                    | type ID . LB function_parameter_list RB compound_statement
   56 local_declarator: ID .
   57                 | ID . ASGN assignment_expression
   58                 | ID . ASGN STR_CONST

    ASGN  shift, and go to state 176
    LB    shift, and go to state 177

    $default  reduce using rule 56 (local_declarator)


State 144

   53 local_declaration: type local_declarator_list . SEMICOLON
   55 local_declarator_list: local_declarator_list . COMMA local_declarator

    COMMA      shift, and go to state 178
    SEMICOLON  shift, and go to state 179


State 145

   54 local_declarator_list: local_declarator .

    $default  reduce using rule 54 (local_declarator_list)


State 146

   46 compound_statement: LCB block_item_list RCB .

    $default  reduce using rule 46 (compound_statement)


State 147

   48 block_item_list: block_item_list block_item .

    $default  reduce using rule 48 (block_item_list)


State 148

   62 expression_list: expression_list COMMA . assignment_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 94

    const_without_str          go to state 95
    assignment_expression      go to state 180
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 149

   60 expression_statement: expression_list SEMICOLON .

    $default  reduce using rule 60 (expression_statement)


State 150

   73 logical_or_expression: logical_or_expression OR . logical_and_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    logical_and_expression     go to state 181
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 151

   75 logical_and_expression: logical_and_expression AND . equality_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    equality_expression        go to state 182
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 152

   77 equality_expression: equality_expression EQ . relational_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    relational_expression      go to state 183
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 153

   78 equality_expression: equality_expression NE . relational_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    relational_expression      go to state 184
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 154

   80 relational_expression: relational_expression MT . additive_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    additive_expression        go to state 185
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 155

   81 relational_expression: relational_expression LT . additive_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    additive_expression        go to state 186
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 156

   82 relational_expression: relational_expression MTE . additive_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    additive_expression        go to state 187
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 157

   83 relational_expression: relational_expression LTE . additive_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    additive_expression        go to state 188
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 158

   85 additive_expression: additive_expression ADD . multiplicative_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    multiplicative_expression  go to state 189
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 159

   86 additive_expression: additive_expression SUB . multiplicative_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str          go to state 95
    multiplicative_expression  go to state 190
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 160

   88 multiplicative_expression: multiplicative_expression MUL . prefix_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str   go to state 95
    prefix_expression   go to state 191
    postfix_expression  go to state 117
    bra_expression      go to state 118


State 161

   89 multiplicative_expression: multiplicative_expression DIV . prefix_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str   go to state 95
    prefix_expression   go to state 192
    postfix_expression  go to state 117
    bra_expression      go to state 118


State 162

   90 multiplicative_expression: multiplicative_expression MOD . prefix_expression

    ADD      shift, and go to state 85
    SUB      shift, and go to state 86
    LB       shift, and go to state 87
    TRUE     shift, and go to state 29
    FALSE    shift, and go to state 30
    I_CONST  shift, and go to state 32
    F_CONST  shift, and go to state 33
    ID       shift, and go to state 124

    const_without_str   go to state 95
    prefix_expression   go to state 193
    postfix_expression  go to state 117
    bra_expression      go to state 118


State 163

   99 postfix_expression: bra_expression INC .

    $default  reduce using rule 99 (postfix_expression)


State 164

  100 postfix_expression: bra_expression DEC .

    $default  reduce using rule 100 (postfix_expression)


State 165

   30 function_parameter_list: function_parameter_list COMMA type ID .

    $default  reduce using rule 30 (function_parameter_list)


State 166

   98 postfix_expression: LB expression_list RB .

    $default  reduce using rule 98 (postfix_expression)


State 167

  102 bra_expression: LB bra_expression RB .

    $default  reduce using rule 102 (bra_expression)


State 168

   40 print_statement: PRINT LB STR_CONST . RB SEMICOLON

    RB  shift, and go to state 194


State 169

   39 print_statement: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 195


State 170

   62 expression_list: expression_list . COMMA assignment_expression
  127 selection_statement: IF LB expression_list . RB compound_statement
  128                    | IF LB expression_list . RB compound_statement ELSE selection_statement
  129                    | IF LB expression_list . RB compound_statement ELSE compound_statement

    RB     shift, and go to state 196
    COMMA  shift, and go to state 148


State 171

   62 expression_list: expression_list . COMMA assignment_expression
  130 iteration_statement: WHILE LB expression_list . RB loop_compound_statement

    RB     shift, and go to state 197
    COMMA  shift, and go to state 148


State 172

   65 assignment_expression: ID ASGN STR_CONST .

    $default  reduce using rule 65 (assignment_expression)


State 173

   95 postfix_expression: ID LB RB .

    $default  reduce using rule 95 (postfix_expression)


State 174

   62 expression_list: expression_list . COMMA assignment_expression
   96 postfix_expression: ID LB expression_list . RB

    RB     shift, and go to state 198
    COMMA  shift, and go to state 148


State 175

   64 assignment_expression: ID assignment_operator assignment_expression .

    $default  reduce using rule 64 (assignment_expression)


State 176

   57 local_declarator: ID ASGN . assignment_expression
   58                 | ID ASGN . STR_CONST

    ADD        shift, and go to state 85
    SUB        shift, and go to state 86
    LB         shift, and go to state 87
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    STR_CONST  shift, and go to state 199
    I_CONST    shift, and go to state 32
    F_CONST    shift, and go to state 33
    ID         shift, and go to state 94

    const_without_str          go to state 95
    assignment_expression      go to state 200
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118


State 177

   27 function_definition: type ID LB . RB compound_statement
   28                    | type ID LB . function_parameter_list RB compound_statement

    RB      shift, and go to state 201
    VOID    shift, and go to state 3
    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    type                     go to state 45
    function_parameter_list  go to state 202


State 178

   55 local_declarator_list: local_declarator_list COMMA . local_declarator

    ID  shift, and go to state 203

    local_declarator  go to state 204


State 179

   53 local_declaration: type local_declarator_list SEMICOLON .

    $default  reduce using rule 53 (local_declaration)


State 180

   62 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 62 (expression_list)


State 181

   73 logical_or_expression: logical_or_expression OR logical_and_expression .
   75 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 151

    $default  reduce using rule 73 (logical_or_expression)


State 182

   75 logical_and_expression: logical_and_expression AND equality_expression .
   77 equality_expression: equality_expression . EQ relational_expression
   78                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 152
    NE  shift, and go to state 153

    $default  reduce using rule 75 (logical_and_expression)


State 183

   77 equality_expression: equality_expression EQ relational_expression .
   80 relational_expression: relational_expression . MT additive_expression
   81                      | relational_expression . LT additive_expression
   82                      | relational_expression . MTE additive_expression
   83                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 154
    LT   shift, and go to state 155
    MTE  shift, and go to state 156
    LTE  shift, and go to state 157

    $default  reduce using rule 77 (equality_expression)


State 184

   78 equality_expression: equality_expression NE relational_expression .
   80 relational_expression: relational_expression . MT additive_expression
   81                      | relational_expression . LT additive_expression
   82                      | relational_expression . MTE additive_expression
   83                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 154
    LT   shift, and go to state 155
    MTE  shift, and go to state 156
    LTE  shift, and go to state 157

    $default  reduce using rule 78 (equality_expression)


State 185

   80 relational_expression: relational_expression MT additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 80 (relational_expression)


State 186

   81 relational_expression: relational_expression LT additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 81 (relational_expression)


State 187

   82 relational_expression: relational_expression MTE additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 82 (relational_expression)


State 188

   83 relational_expression: relational_expression LTE additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 83 (relational_expression)


State 189

   85 additive_expression: additive_expression ADD multiplicative_expression .
   88 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   89                          | multiplicative_expression . DIV prefix_expression
   90                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 160
    DIV  shift, and go to state 161
    MOD  shift, and go to state 162

    $default  reduce using rule 85 (additive_expression)


State 190

   86 additive_expression: additive_expression SUB multiplicative_expression .
   88 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   89                          | multiplicative_expression . DIV prefix_expression
   90                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 160
    DIV  shift, and go to state 161
    MOD  shift, and go to state 162

    $default  reduce using rule 86 (additive_expression)


State 191

   88 multiplicative_expression: multiplicative_expression MUL prefix_expression .

    $default  reduce using rule 88 (multiplicative_expression)


State 192

   89 multiplicative_expression: multiplicative_expression DIV prefix_expression .

    $default  reduce using rule 89 (multiplicative_expression)


State 193

   90 multiplicative_expression: multiplicative_expression MOD prefix_expression .

    $default  reduce using rule 90 (multiplicative_expression)


State 194

   40 print_statement: PRINT LB STR_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 205


State 195

   39 print_statement: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 206


State 196

  127 selection_statement: IF LB expression_list RB . compound_statement
  128                    | IF LB expression_list RB . compound_statement ELSE selection_statement
  129                    | IF LB expression_list RB . compound_statement ELSE compound_statement

    LCB  shift, and go to state 65

    compound_statement  go to state 207


State 197

  130 iteration_statement: WHILE LB expression_list RB . loop_compound_statement

    LCB  shift, and go to state 208

    loop_compound_statement  go to state 209


State 198

   96 postfix_expression: ID LB expression_list RB .

    $default  reduce using rule 96 (postfix_expression)


State 199

   58 local_declarator: ID ASGN STR_CONST .

    $default  reduce using rule 58 (local_declarator)


State 200

   57 local_declarator: ID ASGN assignment_expression .

    $default  reduce using rule 57 (local_declarator)


State 201

   27 function_definition: type ID LB RB . compound_statement

    LCB  shift, and go to state 65

    compound_statement  go to state 67


State 202

   28 function_definition: type ID LB function_parameter_list . RB compound_statement
   30 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 210
    COMMA  shift, and go to state 70


State 203

   56 local_declarator: ID .
   57                 | ID . ASGN assignment_expression
   58                 | ID . ASGN STR_CONST

    ASGN  shift, and go to state 176

    $default  reduce using rule 56 (local_declarator)


State 204

   55 local_declarator_list: local_declarator_list COMMA local_declarator .

    $default  reduce using rule 55 (local_declarator_list)


State 205

   40 print_statement: PRINT LB STR_CONST RB SEMICOLON .

    $default  reduce using rule 40 (print_statement)


State 206

   39 print_statement: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 39 (print_statement)


State 207

  127 selection_statement: IF LB expression_list RB compound_statement .
  128                    | IF LB expression_list RB compound_statement . ELSE selection_statement
  129                    | IF LB expression_list RB compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 211

    $default  reduce using rule 127 (selection_statement)


State 208

  138 loop_compound_statement: LCB . RCB
  139                        | LCB . loop_block_item_list RCB

    ADD          shift, and go to state 85
    SUB          shift, and go to state 86
    LB           shift, and go to state 87
    LCB          shift, and go to state 65
    RCB          shift, and go to state 212
    PRINT        shift, and go to state 89
    IF           shift, and go to state 90
    WHILE        shift, and go to state 91
    RET          shift, and go to state 92
    CONT         shift, and go to state 213
    BREAK        shift, and go to state 214
    TRUE         shift, and go to state 29
    FALSE        shift, and go to state 30
    I_CONST      shift, and go to state 32
    F_CONST      shift, and go to state 33
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 93
    ID           shift, and go to state 94
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 95
    type                       go to state 96
    function_definition        go to state 215
    print_statement            go to state 216
    comment                    go to state 217
    jump_statement             go to state 218
    compound_statement         go to state 219
    local_declaration          go to state 220
    expression_statement       go to state 221
    expression_list            go to state 108
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118
    selection_statement        go to state 222
    iteration_statement        go to state 223
    loop_statement             go to state 224
    loop_block_item_list       go to state 225
    loop_block_item            go to state 226
    loop_jump_statement        go to state 227


State 209

  130 iteration_statement: WHILE LB expression_list RB loop_compound_statement .

    $default  reduce using rule 130 (iteration_statement)


State 210

   28 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB  shift, and go to state 65

    compound_statement  go to state 122


State 211

  128 selection_statement: IF LB expression_list RB compound_statement ELSE . selection_statement
  129                    | IF LB expression_list RB compound_statement ELSE . compound_statement

    LCB  shift, and go to state 65
    IF   shift, and go to state 90

    compound_statement   go to state 228
    selection_statement  go to state 229


State 212

  138 loop_compound_statement: LCB RCB .

    $default  reduce using rule 138 (loop_compound_statement)


State 213

  145 loop_jump_statement: CONT . SEMICOLON

    SEMICOLON  shift, and go to state 230


State 214

  146 loop_jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 231


State 215

  144 loop_block_item: function_definition .

    $default  reduce using rule 144 (loop_block_item)


State 216

  135 loop_statement: print_statement .

    $default  reduce using rule 135 (loop_statement)


State 217

  136 loop_statement: comment .

    $default  reduce using rule 136 (loop_statement)


State 218

  147 loop_jump_statement: jump_statement .

    $default  reduce using rule 147 (loop_jump_statement)


State 219

  131 loop_statement: compound_statement .

    $default  reduce using rule 131 (loop_statement)


State 220

  143 loop_block_item: local_declaration .

    $default  reduce using rule 143 (loop_block_item)


State 221

  132 loop_statement: expression_statement .

    $default  reduce using rule 132 (loop_statement)


State 222

  133 loop_statement: selection_statement .

    $default  reduce using rule 133 (loop_statement)


State 223

  134 loop_statement: iteration_statement .

    $default  reduce using rule 134 (loop_statement)


State 224

  142 loop_block_item: loop_statement .

    $default  reduce using rule 142 (loop_block_item)


State 225

  139 loop_compound_statement: LCB loop_block_item_list . RCB
  141 loop_block_item_list: loop_block_item_list . loop_block_item

    ADD          shift, and go to state 85
    SUB          shift, and go to state 86
    LB           shift, and go to state 87
    LCB          shift, and go to state 65
    RCB          shift, and go to state 232
    PRINT        shift, and go to state 89
    IF           shift, and go to state 90
    WHILE        shift, and go to state 91
    RET          shift, and go to state 92
    CONT         shift, and go to state 213
    BREAK        shift, and go to state 214
    TRUE         shift, and go to state 29
    FALSE        shift, and go to state 30
    I_CONST      shift, and go to state 32
    F_CONST      shift, and go to state 33
    C_COMMENT    shift, and go to state 1
    CPP_COMMENT  shift, and go to state 2
    SEMICOLON    shift, and go to state 93
    ID           shift, and go to state 94
    VOID         shift, and go to state 3
    INT          shift, and go to state 4
    FLOAT        shift, and go to state 5
    STRING       shift, and go to state 6
    BOOL         shift, and go to state 7

    const_without_str          go to state 95
    type                       go to state 96
    function_definition        go to state 215
    print_statement            go to state 216
    comment                    go to state 217
    jump_statement             go to state 218
    compound_statement         go to state 219
    local_declaration          go to state 220
    expression_statement       go to state 221
    expression_list            go to state 108
    assignment_expression      go to state 109
    logical_or_expression      go to state 110
    logical_and_expression     go to state 111
    equality_expression        go to state 112
    relational_expression      go to state 113
    additive_expression        go to state 114
    multiplicative_expression  go to state 115
    prefix_expression          go to state 116
    postfix_expression         go to state 117
    bra_expression             go to state 118
    selection_statement        go to state 222
    iteration_statement        go to state 223
    loop_statement             go to state 224
    loop_block_item            go to state 233
    loop_jump_statement        go to state 227


State 226

  140 loop_block_item_list: loop_block_item .

    $default  reduce using rule 140 (loop_block_item_list)


State 227

  137 loop_statement: loop_jump_statement .

    $default  reduce using rule 137 (loop_statement)


State 228

  129 selection_statement: IF LB expression_list RB compound_statement ELSE compound_statement .

    $default  reduce using rule 129 (selection_statement)


State 229

  128 selection_statement: IF LB expression_list RB compound_statement ELSE selection_statement .

    $default  reduce using rule 128 (selection_statement)


State 230

  145 loop_jump_statement: CONT SEMICOLON .

    $default  reduce using rule 145 (loop_jump_statement)


State 231

  146 loop_jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 146 (loop_jump_statement)


State 232

  139 loop_compound_statement: LCB loop_block_item_list RCB .

    $default  reduce using rule 139 (loop_compound_statement)


State 233

  141 loop_block_item_list: loop_block_item_list loop_block_item .

    $default  reduce using rule 141 (loop_block_item_list)
