Terminals unused in grammar

   NOT
   LSB
   RSB
   FOR


State 50 conflicts: 1 reduce/reduce
State 91 conflicts: 25 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration

    3 external_declaration: function_declaration
    4                     | function_definition
    5                     | declaration
    6                     | comment

    7 declaration: type SEMICOLON
    8            | type declarator_list SEMICOLON

    9 declarator_list: declarator
   10                | declarator_list COMMA declarator

   11 declarator: ID
   12           | ID ASGN const

   13 const: I_CONST
   14      | F_CONST
   15      | STR_CONST
   16      | TRUE
   17      | FALSE

   18 type: VOID
   19     | INT
   20     | FLOAT
   21     | STRING
   22     | BOOL

   23 function_declaration: type ID LB RB SEMICOLON
   24                     | type ID LB function_parameter_list RB SEMICOLON

   25 function_definition: type ID LB RB compound_statement
   26                    | type ID LB function_parameter_list RB compound_statement

   27 function_parameter_list: type ID
   28                        | function_parameter_list COMMA type ID

   29 statement: compound_statement
   30          | statement_with_return
   31          | selection_statement
   32          | iteration_statement
   33          | comment
   34          | jump_statement

   35 statement_with_return: expression_statement
   36                      | print_statement

   37 print_statement: PRINT LB ID RB SEMICOLON
   38                | PRINT LB STR_CONST RB SEMICOLON

   39 comment: C_COMMENT
   40        | CPP_COMMENT

   41 jump_statement: RET SEMICOLON
   42               | RET statement_with_return

   43 compound_statement: LCB RCB
   44                   | LCB block_item_list RCB

   45 block_item_list: block_item
   46                | block_item_list block_item

   47 block_item: statement
   48           | block_declaration
   49           | function_definition

   50 block_declaration: type SEMICOLON
   51                  | type block_declarator_list SEMICOLON

   52 block_declarator_list: block_declarator
   53                      | block_declarator ASGN const
   54                      | block_declarator_list COMMA block_declarator
   55                      | block_declarator_list COMMA block_declarator ASGN const

   56 block_declarator: ID
   57                 | block_declarator ASGN ID

   58 expression_statement: SEMICOLON
   59                     | LB RB SEMICOLON
   60                     | expression_list SEMICOLON

   61 expression_list: assignment_expression
   62                | expression_list COMMA assignment_expression

   63 assignment_expression: logical_or_expression
   64                      | ID assignment_operator assignment_expression

   65 assignment_operator: ASGN
   66                    | ADDASGN
   67                    | SUBASGN
   68                    | MULASGN
   69                    | DIVASGN
   70                    | MODASGN

   71 logical_or_expression: logical_and_expression
   72                      | logical_or_expression OR logical_and_expression

   73 logical_and_expression: equality_expression
   74                       | logical_and_expression AND equality_expression

   75 equality_expression: relational_expression
   76                    | equality_expression EQ relational_expression
   77                    | equality_expression NE relational_expression

   78 relational_expression: additive_expression
   79                      | relational_expression MT additive_expression
   80                      | relational_expression LT additive_expression
   81                      | relational_expression MTE additive_expression
   82                      | relational_expression LTE additive_expression

   83 additive_expression: multiplicative_expression
   84                    | additive_expression ADD multiplicative_expression
   85                    | additive_expression SUB multiplicative_expression

   86 multiplicative_expression: prefix_expression
   87                          | multiplicative_expression MUL prefix_expression
   88                          | multiplicative_expression DIV prefix_expression
   89                          | multiplicative_expression MOD prefix_expression

   90 prefix_expression: postfix_expression
   91                  | ADD prefix_expression
   92                  | SUB prefix_expression

   93 postfix_expression: ID
   94                   | ID LB RB
   95                   | ID LB expression_list RB
   96                   | const
   97                   | LB expression_list RB
   98                   | bra_expression INC
   99                   | bra_expression DEC

  100 bra_expression: ID
  101               | LB bra_expression RB

  102 selection_statement: IF LB expression_list RB compound_statement
  103                    | IF LB expression_list RB compound_statement ELSE selection_statement
  104                    | IF LB expression_list RB compound_statement ELSE compound_statement

  105 iteration_statement: WHILE LB expression_list RB loop_compound_statement

  106 loop_statement: compound_statement
  107               | expression_statement
  108               | selection_statement
  109               | iteration_statement
  110               | print_statement
  111               | comment
  112               | loop_jump_statement

  113 loop_compound_statement: LCB RCB
  114                        | LCB loop_block_item_list RCB

  115 loop_block_item_list: loop_block_item
  116                     | loop_block_item_list loop_block_item

  117 loop_block_item: loop_statement
  118                | block_declaration
  119                | function_definition

  120 loop_jump_statement: CONT SEMICOLON
  121                    | BREAK SEMICOLON
  122                    | jump_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 84 91
SUB (259) 85 92
MUL (260) 87
DIV (261) 88
MOD (262) 89
INC (263) 98
DEC (264) 99
MT (265) 79
LT (266) 80
MTE (267) 81
LTE (268) 82
EQ (269) 76
NE (270) 77
ASGN (271) 12 53 55 57 65
ADDASGN (272) 66
SUBASGN (273) 67
MULASGN (274) 68
DIVASGN (275) 69
MODASGN (276) 70
AND (277) 74
OR (278) 72
NOT (279)
LB (280) 23 24 25 26 37 38 59 94 95 97 101 102 103 104 105
RB (281) 23 24 25 26 37 38 59 94 95 97 101 102 103 104 105
LCB (282) 43 44 113 114
RCB (283) 43 44 113 114
LSB (284)
RSB (285)
COMMA (286) 10 28 54 55 62
PRINT (287) 37 38
IF (288) 102 103 104
ELSE (289) 103 104
FOR (290)
WHILE (291) 105
RET (292) 41 42
CONT (293) 120
BREAK (294) 121
VOID (295) 18
INT (296) 19
FLOAT (297) 20
STRING (298) 21
BOOL (299) 22
TRUE (300) 16
FALSE (301) 17
STR_CONST (302) 15 38
I_CONST (303) 13
F_CONST (304) 14
C_COMMENT (305) 39
CPP_COMMENT (306) 40
ID (307) 11 12 23 24 25 26 27 28 37 56 57 64 93 94 95 100
SEMICOLON (308) 7 8 23 24 37 38 41 50 51 58 59 60 120 121


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0 2
external_declaration (56)
    on left: 3 4 5 6, on right: 1 2
declaration (57)
    on left: 7 8, on right: 5
declarator_list (58)
    on left: 9 10, on right: 8 10
declarator (59)
    on left: 11 12, on right: 9 10
const (60)
    on left: 13 14 15 16 17, on right: 12 53 55 96
type (61)
    on left: 18 19 20 21 22, on right: 7 8 23 24 25 26 27 28 50 51
function_declaration (62)
    on left: 23 24, on right: 3
function_definition (63)
    on left: 25 26, on right: 4 49 119
function_parameter_list (64)
    on left: 27 28, on right: 24 26 28
statement (65)
    on left: 29 30 31 32 33 34, on right: 47
statement_with_return (66)
    on left: 35 36, on right: 30 42
print_statement (67)
    on left: 37 38, on right: 36 110
comment (68)
    on left: 39 40, on right: 6 33 111
jump_statement (69)
    on left: 41 42, on right: 34 122
compound_statement (70)
    on left: 43 44, on right: 25 26 29 102 103 104 106
block_item_list (71)
    on left: 45 46, on right: 44 46
block_item (72)
    on left: 47 48 49, on right: 45 46
block_declaration (73)
    on left: 50 51, on right: 48 118
block_declarator_list (74)
    on left: 52 53 54 55, on right: 51 54 55
block_declarator (75)
    on left: 56 57, on right: 52 53 54 55 57
expression_statement (76)
    on left: 58 59 60, on right: 35 107
expression_list (77)
    on left: 61 62, on right: 60 62 95 97 102 103 104 105
assignment_expression (78)
    on left: 63 64, on right: 61 62 64
assignment_operator (79)
    on left: 65 66 67 68 69 70, on right: 64
logical_or_expression (80)
    on left: 71 72, on right: 63 72
logical_and_expression (81)
    on left: 73 74, on right: 71 72 74
equality_expression (82)
    on left: 75 76 77, on right: 73 74 76 77
relational_expression (83)
    on left: 78 79 80 81 82, on right: 75 76 77 79 80 81 82
additive_expression (84)
    on left: 83 84 85, on right: 78 79 80 81 82 84 85
multiplicative_expression (85)
    on left: 86 87 88 89, on right: 83 84 85 87 88 89
prefix_expression (86)
    on left: 90 91 92, on right: 86 87 88 89 91 92
postfix_expression (87)
    on left: 93 94 95 96 97 98 99, on right: 90
bra_expression (88)
    on left: 100 101, on right: 98 99 101
selection_statement (89)
    on left: 102 103 104, on right: 31 103 108
iteration_statement (90)
    on left: 105, on right: 32 109
loop_statement (91)
    on left: 106 107 108 109 110 111 112, on right: 117
loop_compound_statement (92)
    on left: 113 114, on right: 105
loop_block_item_list (93)
    on left: 115 116, on right: 114 116
loop_block_item (94)
    on left: 117 118 119, on right: 115 116
loop_jump_statement (95)
    on left: 120 121 122, on right: 112


State 0

    0 $accept: . program $end

    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7

    program               go to state 8
    external_declaration  go to state 9
    declaration           go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 1

   18 type: VOID .

    $default  reduce using rule 18 (type)


State 2

   19 type: INT .

    $default  reduce using rule 19 (type)


State 3

   20 type: FLOAT .

    $default  reduce using rule 20 (type)


State 4

   21 type: STRING .

    $default  reduce using rule 21 (type)


State 5

   22 type: BOOL .

    $default  reduce using rule 22 (type)


State 6

   39 comment: C_COMMENT .

    $default  reduce using rule 39 (comment)


State 7

   40 comment: CPP_COMMENT .

    $default  reduce using rule 40 (comment)


State 8

    0 $accept: program . $end
    2 program: program . external_declaration

    $end         shift, and go to state 15
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7

    external_declaration  go to state 16
    declaration           go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 9

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 10

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


State 11

    7 declaration: type . SEMICOLON
    8            | type . declarator_list SEMICOLON
   23 function_declaration: type . ID LB RB SEMICOLON
   24                     | type . ID LB function_parameter_list RB SEMICOLON
   25 function_definition: type . ID LB RB compound_statement
   26                    | type . ID LB function_parameter_list RB compound_statement

    ID         shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    declarator_list  go to state 19
    declarator       go to state 20


State 12

    3 external_declaration: function_declaration .

    $default  reduce using rule 3 (external_declaration)


State 13

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 14

    6 external_declaration: comment .

    $default  reduce using rule 6 (external_declaration)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 17

   11 declarator: ID .
   12           | ID . ASGN const
   23 function_declaration: type ID . LB RB SEMICOLON
   24                     | type ID . LB function_parameter_list RB SEMICOLON
   25 function_definition: type ID . LB RB compound_statement
   26                    | type ID . LB function_parameter_list RB compound_statement

    ASGN  shift, and go to state 21
    LB    shift, and go to state 22

    $default  reduce using rule 11 (declarator)


State 18

    7 declaration: type SEMICOLON .

    $default  reduce using rule 7 (declaration)


State 19

    8 declaration: type declarator_list . SEMICOLON
   10 declarator_list: declarator_list . COMMA declarator

    COMMA      shift, and go to state 23
    SEMICOLON  shift, and go to state 24


State 20

    9 declarator_list: declarator .

    $default  reduce using rule 9 (declarator_list)


State 21

   12 declarator: ID ASGN . const

    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29

    const  go to state 30


State 22

   23 function_declaration: type ID LB . RB SEMICOLON
   24                     | type ID LB . function_parameter_list RB SEMICOLON
   25 function_definition: type ID LB . RB compound_statement
   26                    | type ID LB . function_parameter_list RB compound_statement

    RB      shift, and go to state 31
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type                     go to state 32
    function_parameter_list  go to state 33


State 23

   10 declarator_list: declarator_list COMMA . declarator

    ID  shift, and go to state 34

    declarator  go to state 35


State 24

    8 declaration: type declarator_list SEMICOLON .

    $default  reduce using rule 8 (declaration)


State 25

   16 const: TRUE .

    $default  reduce using rule 16 (const)


State 26

   17 const: FALSE .

    $default  reduce using rule 17 (const)


State 27

   15 const: STR_CONST .

    $default  reduce using rule 15 (const)


State 28

   13 const: I_CONST .

    $default  reduce using rule 13 (const)


State 29

   14 const: F_CONST .

    $default  reduce using rule 14 (const)


State 30

   12 declarator: ID ASGN const .

    $default  reduce using rule 12 (declarator)


State 31

   23 function_declaration: type ID LB RB . SEMICOLON
   25 function_definition: type ID LB RB . compound_statement

    LCB        shift, and go to state 36
    SEMICOLON  shift, and go to state 37

    compound_statement  go to state 38


State 32

   27 function_parameter_list: type . ID

    ID  shift, and go to state 39


State 33

   24 function_declaration: type ID LB function_parameter_list . RB SEMICOLON
   26 function_definition: type ID LB function_parameter_list . RB compound_statement
   28 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 40
    COMMA  shift, and go to state 41


State 34

   11 declarator: ID .
   12           | ID . ASGN const

    ASGN  shift, and go to state 21

    $default  reduce using rule 11 (declarator)


State 35

   10 declarator_list: declarator_list COMMA declarator .

    $default  reduce using rule 10 (declarator_list)


State 36

   43 compound_statement: LCB . RCB
   44                   | LCB . block_item_list RCB

    ADD          shift, and go to state 42
    SUB          shift, and go to state 43
    LB           shift, and go to state 44
    LCB          shift, and go to state 36
    RCB          shift, and go to state 45
    PRINT        shift, and go to state 46
    IF           shift, and go to state 47
    WHILE        shift, and go to state 48
    RET          shift, and go to state 49
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 25
    FALSE        shift, and go to state 26
    STR_CONST    shift, and go to state 27
    I_CONST      shift, and go to state 28
    F_CONST      shift, and go to state 29
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 50
    SEMICOLON    shift, and go to state 51

    const                      go to state 52
    type                       go to state 53
    function_definition        go to state 54
    statement                  go to state 55
    statement_with_return      go to state 56
    print_statement            go to state 57
    comment                    go to state 58
    jump_statement             go to state 59
    compound_statement         go to state 60
    block_item_list            go to state 61
    block_item                 go to state 62
    block_declaration          go to state 63
    expression_statement       go to state 64
    expression_list            go to state 65
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75
    selection_statement        go to state 76
    iteration_statement        go to state 77


State 37

   23 function_declaration: type ID LB RB SEMICOLON .

    $default  reduce using rule 23 (function_declaration)


State 38

   25 function_definition: type ID LB RB compound_statement .

    $default  reduce using rule 25 (function_definition)


State 39

   27 function_parameter_list: type ID .

    $default  reduce using rule 27 (function_parameter_list)


State 40

   24 function_declaration: type ID LB function_parameter_list RB . SEMICOLON
   26 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB        shift, and go to state 36
    SEMICOLON  shift, and go to state 78

    compound_statement  go to state 79


State 41

   28 function_parameter_list: function_parameter_list COMMA . type ID

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type  go to state 80


State 42

   91 prefix_expression: ADD . prefix_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const               go to state 52
    prefix_expression   go to state 83
    postfix_expression  go to state 74
    bra_expression      go to state 75


State 43

   92 prefix_expression: SUB . prefix_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const               go to state 52
    prefix_expression   go to state 84
    postfix_expression  go to state 74
    bra_expression      go to state 75


State 44

   59 expression_statement: LB . RB SEMICOLON
   97 postfix_expression: LB . expression_list RB
  101 bra_expression: LB . bra_expression RB

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    RB         shift, and go to state 85
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50

    const                      go to state 52
    expression_list            go to state 86
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 87


State 45

   43 compound_statement: LCB RCB .

    $default  reduce using rule 43 (compound_statement)


State 46

   37 print_statement: PRINT . LB ID RB SEMICOLON
   38                | PRINT . LB STR_CONST RB SEMICOLON

    LB  shift, and go to state 88


State 47

  102 selection_statement: IF . LB expression_list RB compound_statement
  103                    | IF . LB expression_list RB compound_statement ELSE selection_statement
  104                    | IF . LB expression_list RB compound_statement ELSE compound_statement

    LB  shift, and go to state 89


State 48

  105 iteration_statement: WHILE . LB expression_list RB loop_compound_statement

    LB  shift, and go to state 90


State 49

   41 jump_statement: RET . SEMICOLON
   42               | RET . statement_with_return

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 44
    PRINT      shift, and go to state 46
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50
    SEMICOLON  shift, and go to state 91

    const                      go to state 52
    statement_with_return      go to state 92
    print_statement            go to state 57
    expression_statement       go to state 64
    expression_list            go to state 65
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 50

   64 assignment_expression: ID . assignment_operator assignment_expression
   93 postfix_expression: ID .
   94                   | ID . LB RB
   95                   | ID . LB expression_list RB
  100 bra_expression: ID .

    ASGN     shift, and go to state 93
    ADDASGN  shift, and go to state 94
    SUBASGN  shift, and go to state 95
    MULASGN  shift, and go to state 96
    DIVASGN  shift, and go to state 97
    MODASGN  shift, and go to state 98
    LB       shift, and go to state 99

    INC       reduce using rule 100 (bra_expression)
    DEC       reduce using rule 100 (bra_expression)
    RB        reduce using rule 93 (postfix_expression)
    RB        [reduce using rule 100 (bra_expression)]
    $default  reduce using rule 93 (postfix_expression)

    assignment_operator  go to state 100


State 51

   58 expression_statement: SEMICOLON .

    $default  reduce using rule 58 (expression_statement)


State 52

   96 postfix_expression: const .

    $default  reduce using rule 96 (postfix_expression)


State 53

   25 function_definition: type . ID LB RB compound_statement
   26                    | type . ID LB function_parameter_list RB compound_statement
   50 block_declaration: type . SEMICOLON
   51                  | type . block_declarator_list SEMICOLON

    ID         shift, and go to state 101
    SEMICOLON  shift, and go to state 102

    block_declarator_list  go to state 103
    block_declarator       go to state 104


State 54

   49 block_item: function_definition .

    $default  reduce using rule 49 (block_item)


State 55

   47 block_item: statement .

    $default  reduce using rule 47 (block_item)


State 56

   30 statement: statement_with_return .

    $default  reduce using rule 30 (statement)


State 57

   36 statement_with_return: print_statement .

    $default  reduce using rule 36 (statement_with_return)


State 58

   33 statement: comment .

    $default  reduce using rule 33 (statement)


State 59

   34 statement: jump_statement .

    $default  reduce using rule 34 (statement)


State 60

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 61

   44 compound_statement: LCB block_item_list . RCB
   46 block_item_list: block_item_list . block_item

    ADD          shift, and go to state 42
    SUB          shift, and go to state 43
    LB           shift, and go to state 44
    LCB          shift, and go to state 36
    RCB          shift, and go to state 105
    PRINT        shift, and go to state 46
    IF           shift, and go to state 47
    WHILE        shift, and go to state 48
    RET          shift, and go to state 49
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 25
    FALSE        shift, and go to state 26
    STR_CONST    shift, and go to state 27
    I_CONST      shift, and go to state 28
    F_CONST      shift, and go to state 29
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 50
    SEMICOLON    shift, and go to state 51

    const                      go to state 52
    type                       go to state 53
    function_definition        go to state 54
    statement                  go to state 55
    statement_with_return      go to state 56
    print_statement            go to state 57
    comment                    go to state 58
    jump_statement             go to state 59
    compound_statement         go to state 60
    block_item                 go to state 106
    block_declaration          go to state 63
    expression_statement       go to state 64
    expression_list            go to state 65
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75
    selection_statement        go to state 76
    iteration_statement        go to state 77


State 62

   45 block_item_list: block_item .

    $default  reduce using rule 45 (block_item_list)


State 63

   48 block_item: block_declaration .

    $default  reduce using rule 48 (block_item)


State 64

   35 statement_with_return: expression_statement .

    $default  reduce using rule 35 (statement_with_return)


State 65

   60 expression_statement: expression_list . SEMICOLON
   62 expression_list: expression_list . COMMA assignment_expression

    COMMA      shift, and go to state 107
    SEMICOLON  shift, and go to state 108


State 66

   61 expression_list: assignment_expression .

    $default  reduce using rule 61 (expression_list)


State 67

   63 assignment_expression: logical_or_expression .
   72 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 109

    $default  reduce using rule 63 (assignment_expression)


State 68

   71 logical_or_expression: logical_and_expression .
   74 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 110

    $default  reduce using rule 71 (logical_or_expression)


State 69

   73 logical_and_expression: equality_expression .
   76 equality_expression: equality_expression . EQ relational_expression
   77                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 111
    NE  shift, and go to state 112

    $default  reduce using rule 73 (logical_and_expression)


State 70

   75 equality_expression: relational_expression .
   79 relational_expression: relational_expression . MT additive_expression
   80                      | relational_expression . LT additive_expression
   81                      | relational_expression . MTE additive_expression
   82                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 113
    LT   shift, and go to state 114
    MTE  shift, and go to state 115
    LTE  shift, and go to state 116

    $default  reduce using rule 75 (equality_expression)


State 71

   78 relational_expression: additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 117
    SUB  shift, and go to state 118

    $default  reduce using rule 78 (relational_expression)


State 72

   83 additive_expression: multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   88                          | multiplicative_expression . DIV prefix_expression
   89                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 119
    DIV  shift, and go to state 120
    MOD  shift, and go to state 121

    $default  reduce using rule 83 (additive_expression)


State 73

   86 multiplicative_expression: prefix_expression .

    $default  reduce using rule 86 (multiplicative_expression)


State 74

   90 prefix_expression: postfix_expression .

    $default  reduce using rule 90 (prefix_expression)


State 75

   98 postfix_expression: bra_expression . INC
   99                   | bra_expression . DEC

    INC  shift, and go to state 122
    DEC  shift, and go to state 123


State 76

   31 statement: selection_statement .

    $default  reduce using rule 31 (statement)


State 77

   32 statement: iteration_statement .

    $default  reduce using rule 32 (statement)


State 78

   24 function_declaration: type ID LB function_parameter_list RB SEMICOLON .

    $default  reduce using rule 24 (function_declaration)


State 79

   26 function_definition: type ID LB function_parameter_list RB compound_statement .

    $default  reduce using rule 26 (function_definition)


State 80

   28 function_parameter_list: function_parameter_list COMMA type . ID

    ID  shift, and go to state 124


State 81

   97 postfix_expression: LB . expression_list RB
  101 bra_expression: LB . bra_expression RB

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50

    const                      go to state 52
    expression_list            go to state 86
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 87


State 82

   93 postfix_expression: ID .
   94                   | ID . LB RB
   95                   | ID . LB expression_list RB
  100 bra_expression: ID .

    LB  shift, and go to state 99

    INC       reduce using rule 100 (bra_expression)
    DEC       reduce using rule 100 (bra_expression)
    $default  reduce using rule 93 (postfix_expression)


State 83

   91 prefix_expression: ADD prefix_expression .

    $default  reduce using rule 91 (prefix_expression)


State 84

   92 prefix_expression: SUB prefix_expression .

    $default  reduce using rule 92 (prefix_expression)


State 85

   59 expression_statement: LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 86

   62 expression_list: expression_list . COMMA assignment_expression
   97 postfix_expression: LB expression_list . RB

    RB     shift, and go to state 126
    COMMA  shift, and go to state 107


State 87

   98 postfix_expression: bra_expression . INC
   99                   | bra_expression . DEC
  101 bra_expression: LB bra_expression . RB

    INC  shift, and go to state 122
    DEC  shift, and go to state 123
    RB   shift, and go to state 127


State 88

   37 print_statement: PRINT LB . ID RB SEMICOLON
   38                | PRINT LB . STR_CONST RB SEMICOLON

    STR_CONST  shift, and go to state 128
    ID         shift, and go to state 129


State 89

  102 selection_statement: IF LB . expression_list RB compound_statement
  103                    | IF LB . expression_list RB compound_statement ELSE selection_statement
  104                    | IF LB . expression_list RB compound_statement ELSE compound_statement

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50

    const                      go to state 52
    expression_list            go to state 130
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 90

  105 iteration_statement: WHILE LB . expression_list RB loop_compound_statement

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50

    const                      go to state 52
    expression_list            go to state 131
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 91

   41 jump_statement: RET SEMICOLON .
   58 expression_statement: SEMICOLON .

    ADD          reduce using rule 41 (jump_statement)
    ADD          [reduce using rule 58 (expression_statement)]
    SUB          reduce using rule 41 (jump_statement)
    SUB          [reduce using rule 58 (expression_statement)]
    LB           reduce using rule 41 (jump_statement)
    LB           [reduce using rule 58 (expression_statement)]
    LCB          reduce using rule 41 (jump_statement)
    LCB          [reduce using rule 58 (expression_statement)]
    RCB          reduce using rule 41 (jump_statement)
    RCB          [reduce using rule 58 (expression_statement)]
    PRINT        reduce using rule 41 (jump_statement)
    PRINT        [reduce using rule 58 (expression_statement)]
    IF           reduce using rule 41 (jump_statement)
    IF           [reduce using rule 58 (expression_statement)]
    WHILE        reduce using rule 41 (jump_statement)
    WHILE        [reduce using rule 58 (expression_statement)]
    RET          reduce using rule 41 (jump_statement)
    RET          [reduce using rule 58 (expression_statement)]
    CONT         reduce using rule 41 (jump_statement)
    CONT         [reduce using rule 58 (expression_statement)]
    BREAK        reduce using rule 41 (jump_statement)
    BREAK        [reduce using rule 58 (expression_statement)]
    VOID         reduce using rule 41 (jump_statement)
    VOID         [reduce using rule 58 (expression_statement)]
    INT          reduce using rule 41 (jump_statement)
    INT          [reduce using rule 58 (expression_statement)]
    FLOAT        reduce using rule 41 (jump_statement)
    FLOAT        [reduce using rule 58 (expression_statement)]
    STRING       reduce using rule 41 (jump_statement)
    STRING       [reduce using rule 58 (expression_statement)]
    BOOL         reduce using rule 41 (jump_statement)
    BOOL         [reduce using rule 58 (expression_statement)]
    TRUE         reduce using rule 41 (jump_statement)
    TRUE         [reduce using rule 58 (expression_statement)]
    FALSE        reduce using rule 41 (jump_statement)
    FALSE        [reduce using rule 58 (expression_statement)]
    STR_CONST    reduce using rule 41 (jump_statement)
    STR_CONST    [reduce using rule 58 (expression_statement)]
    I_CONST      reduce using rule 41 (jump_statement)
    I_CONST      [reduce using rule 58 (expression_statement)]
    F_CONST      reduce using rule 41 (jump_statement)
    F_CONST      [reduce using rule 58 (expression_statement)]
    C_COMMENT    reduce using rule 41 (jump_statement)
    C_COMMENT    [reduce using rule 58 (expression_statement)]
    CPP_COMMENT  reduce using rule 41 (jump_statement)
    CPP_COMMENT  [reduce using rule 58 (expression_statement)]
    ID           reduce using rule 41 (jump_statement)
    ID           [reduce using rule 58 (expression_statement)]
    SEMICOLON    reduce using rule 41 (jump_statement)
    SEMICOLON    [reduce using rule 58 (expression_statement)]
    $default     reduce using rule 41 (jump_statement)


State 92

   42 jump_statement: RET statement_with_return .

    $default  reduce using rule 42 (jump_statement)


State 93

   65 assignment_operator: ASGN .

    $default  reduce using rule 65 (assignment_operator)


State 94

   66 assignment_operator: ADDASGN .

    $default  reduce using rule 66 (assignment_operator)


State 95

   67 assignment_operator: SUBASGN .

    $default  reduce using rule 67 (assignment_operator)


State 96

   68 assignment_operator: MULASGN .

    $default  reduce using rule 68 (assignment_operator)


State 97

   69 assignment_operator: DIVASGN .

    $default  reduce using rule 69 (assignment_operator)


State 98

   70 assignment_operator: MODASGN .

    $default  reduce using rule 70 (assignment_operator)


State 99

   94 postfix_expression: ID LB . RB
   95                   | ID LB . expression_list RB

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    RB         shift, and go to state 132
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50

    const                      go to state 52
    expression_list            go to state 133
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 100

   64 assignment_expression: ID assignment_operator . assignment_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50

    const                      go to state 52
    assignment_expression      go to state 134
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 101

   25 function_definition: type ID . LB RB compound_statement
   26                    | type ID . LB function_parameter_list RB compound_statement
   56 block_declarator: ID .

    LB  shift, and go to state 135

    $default  reduce using rule 56 (block_declarator)


State 102

   50 block_declaration: type SEMICOLON .

    $default  reduce using rule 50 (block_declaration)


State 103

   51 block_declaration: type block_declarator_list . SEMICOLON
   54 block_declarator_list: block_declarator_list . COMMA block_declarator
   55                      | block_declarator_list . COMMA block_declarator ASGN const

    COMMA      shift, and go to state 136
    SEMICOLON  shift, and go to state 137


State 104

   52 block_declarator_list: block_declarator .
   53                      | block_declarator . ASGN const
   57 block_declarator: block_declarator . ASGN ID

    ASGN  shift, and go to state 138

    $default  reduce using rule 52 (block_declarator_list)


State 105

   44 compound_statement: LCB block_item_list RCB .

    $default  reduce using rule 44 (compound_statement)


State 106

   46 block_item_list: block_item_list block_item .

    $default  reduce using rule 46 (block_item_list)


State 107

   62 expression_list: expression_list COMMA . assignment_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 50

    const                      go to state 52
    assignment_expression      go to state 139
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 108

   60 expression_statement: expression_list SEMICOLON .

    $default  reduce using rule 60 (expression_statement)


State 109

   72 logical_or_expression: logical_or_expression OR . logical_and_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    logical_and_expression     go to state 140
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 110

   74 logical_and_expression: logical_and_expression AND . equality_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    equality_expression        go to state 141
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 111

   76 equality_expression: equality_expression EQ . relational_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    relational_expression      go to state 142
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 112

   77 equality_expression: equality_expression NE . relational_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    relational_expression      go to state 143
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 113

   79 relational_expression: relational_expression MT . additive_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    additive_expression        go to state 144
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 114

   80 relational_expression: relational_expression LT . additive_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    additive_expression        go to state 145
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 115

   81 relational_expression: relational_expression MTE . additive_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    additive_expression        go to state 146
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 116

   82 relational_expression: relational_expression LTE . additive_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    additive_expression        go to state 147
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 117

   84 additive_expression: additive_expression ADD . multiplicative_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    multiplicative_expression  go to state 148
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 118

   85 additive_expression: additive_expression SUB . multiplicative_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const                      go to state 52
    multiplicative_expression  go to state 149
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75


State 119

   87 multiplicative_expression: multiplicative_expression MUL . prefix_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const               go to state 52
    prefix_expression   go to state 150
    postfix_expression  go to state 74
    bra_expression      go to state 75


State 120

   88 multiplicative_expression: multiplicative_expression DIV . prefix_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const               go to state 52
    prefix_expression   go to state 151
    postfix_expression  go to state 74
    bra_expression      go to state 75


State 121

   89 multiplicative_expression: multiplicative_expression MOD . prefix_expression

    ADD        shift, and go to state 42
    SUB        shift, and go to state 43
    LB         shift, and go to state 81
    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 82

    const               go to state 52
    prefix_expression   go to state 152
    postfix_expression  go to state 74
    bra_expression      go to state 75


State 122

   98 postfix_expression: bra_expression INC .

    $default  reduce using rule 98 (postfix_expression)


State 123

   99 postfix_expression: bra_expression DEC .

    $default  reduce using rule 99 (postfix_expression)


State 124

   28 function_parameter_list: function_parameter_list COMMA type ID .

    $default  reduce using rule 28 (function_parameter_list)


State 125

   59 expression_statement: LB RB SEMICOLON .

    $default  reduce using rule 59 (expression_statement)


State 126

   97 postfix_expression: LB expression_list RB .

    $default  reduce using rule 97 (postfix_expression)


State 127

  101 bra_expression: LB bra_expression RB .

    $default  reduce using rule 101 (bra_expression)


State 128

   38 print_statement: PRINT LB STR_CONST . RB SEMICOLON

    RB  shift, and go to state 153


State 129

   37 print_statement: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 154


State 130

   62 expression_list: expression_list . COMMA assignment_expression
  102 selection_statement: IF LB expression_list . RB compound_statement
  103                    | IF LB expression_list . RB compound_statement ELSE selection_statement
  104                    | IF LB expression_list . RB compound_statement ELSE compound_statement

    RB     shift, and go to state 155
    COMMA  shift, and go to state 107


State 131

   62 expression_list: expression_list . COMMA assignment_expression
  105 iteration_statement: WHILE LB expression_list . RB loop_compound_statement

    RB     shift, and go to state 156
    COMMA  shift, and go to state 107


State 132

   94 postfix_expression: ID LB RB .

    $default  reduce using rule 94 (postfix_expression)


State 133

   62 expression_list: expression_list . COMMA assignment_expression
   95 postfix_expression: ID LB expression_list . RB

    RB     shift, and go to state 157
    COMMA  shift, and go to state 107


State 134

   64 assignment_expression: ID assignment_operator assignment_expression .

    $default  reduce using rule 64 (assignment_expression)


State 135

   25 function_definition: type ID LB . RB compound_statement
   26                    | type ID LB . function_parameter_list RB compound_statement

    RB      shift, and go to state 158
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type                     go to state 32
    function_parameter_list  go to state 159


State 136

   54 block_declarator_list: block_declarator_list COMMA . block_declarator
   55                      | block_declarator_list COMMA . block_declarator ASGN const

    ID  shift, and go to state 160

    block_declarator  go to state 161


State 137

   51 block_declaration: type block_declarator_list SEMICOLON .

    $default  reduce using rule 51 (block_declaration)


State 138

   53 block_declarator_list: block_declarator ASGN . const
   57 block_declarator: block_declarator ASGN . ID

    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 162

    const  go to state 163


State 139

   62 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 62 (expression_list)


State 140

   72 logical_or_expression: logical_or_expression OR logical_and_expression .
   74 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 110

    $default  reduce using rule 72 (logical_or_expression)


State 141

   74 logical_and_expression: logical_and_expression AND equality_expression .
   76 equality_expression: equality_expression . EQ relational_expression
   77                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 111
    NE  shift, and go to state 112

    $default  reduce using rule 74 (logical_and_expression)


State 142

   76 equality_expression: equality_expression EQ relational_expression .
   79 relational_expression: relational_expression . MT additive_expression
   80                      | relational_expression . LT additive_expression
   81                      | relational_expression . MTE additive_expression
   82                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 113
    LT   shift, and go to state 114
    MTE  shift, and go to state 115
    LTE  shift, and go to state 116

    $default  reduce using rule 76 (equality_expression)


State 143

   77 equality_expression: equality_expression NE relational_expression .
   79 relational_expression: relational_expression . MT additive_expression
   80                      | relational_expression . LT additive_expression
   81                      | relational_expression . MTE additive_expression
   82                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 113
    LT   shift, and go to state 114
    MTE  shift, and go to state 115
    LTE  shift, and go to state 116

    $default  reduce using rule 77 (equality_expression)


State 144

   79 relational_expression: relational_expression MT additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 117
    SUB  shift, and go to state 118

    $default  reduce using rule 79 (relational_expression)


State 145

   80 relational_expression: relational_expression LT additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 117
    SUB  shift, and go to state 118

    $default  reduce using rule 80 (relational_expression)


State 146

   81 relational_expression: relational_expression MTE additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 117
    SUB  shift, and go to state 118

    $default  reduce using rule 81 (relational_expression)


State 147

   82 relational_expression: relational_expression LTE additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 117
    SUB  shift, and go to state 118

    $default  reduce using rule 82 (relational_expression)


State 148

   84 additive_expression: additive_expression ADD multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   88                          | multiplicative_expression . DIV prefix_expression
   89                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 119
    DIV  shift, and go to state 120
    MOD  shift, and go to state 121

    $default  reduce using rule 84 (additive_expression)


State 149

   85 additive_expression: additive_expression SUB multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   88                          | multiplicative_expression . DIV prefix_expression
   89                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 119
    DIV  shift, and go to state 120
    MOD  shift, and go to state 121

    $default  reduce using rule 85 (additive_expression)


State 150

   87 multiplicative_expression: multiplicative_expression MUL prefix_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 151

   88 multiplicative_expression: multiplicative_expression DIV prefix_expression .

    $default  reduce using rule 88 (multiplicative_expression)


State 152

   89 multiplicative_expression: multiplicative_expression MOD prefix_expression .

    $default  reduce using rule 89 (multiplicative_expression)


State 153

   38 print_statement: PRINT LB STR_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 164


State 154

   37 print_statement: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 165


State 155

  102 selection_statement: IF LB expression_list RB . compound_statement
  103                    | IF LB expression_list RB . compound_statement ELSE selection_statement
  104                    | IF LB expression_list RB . compound_statement ELSE compound_statement

    LCB  shift, and go to state 36

    compound_statement  go to state 166


State 156

  105 iteration_statement: WHILE LB expression_list RB . loop_compound_statement

    LCB  shift, and go to state 167

    loop_compound_statement  go to state 168


State 157

   95 postfix_expression: ID LB expression_list RB .

    $default  reduce using rule 95 (postfix_expression)


State 158

   25 function_definition: type ID LB RB . compound_statement

    LCB  shift, and go to state 36

    compound_statement  go to state 38


State 159

   26 function_definition: type ID LB function_parameter_list . RB compound_statement
   28 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 169
    COMMA  shift, and go to state 41


State 160

   56 block_declarator: ID .

    $default  reduce using rule 56 (block_declarator)


State 161

   54 block_declarator_list: block_declarator_list COMMA block_declarator .
   55                      | block_declarator_list COMMA block_declarator . ASGN const
   57 block_declarator: block_declarator . ASGN ID

    ASGN  shift, and go to state 170

    $default  reduce using rule 54 (block_declarator_list)


State 162

   57 block_declarator: block_declarator ASGN ID .

    $default  reduce using rule 57 (block_declarator)


State 163

   53 block_declarator_list: block_declarator ASGN const .

    $default  reduce using rule 53 (block_declarator_list)


State 164

   38 print_statement: PRINT LB STR_CONST RB SEMICOLON .

    $default  reduce using rule 38 (print_statement)


State 165

   37 print_statement: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 37 (print_statement)


State 166

  102 selection_statement: IF LB expression_list RB compound_statement .
  103                    | IF LB expression_list RB compound_statement . ELSE selection_statement
  104                    | IF LB expression_list RB compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 171

    $default  reduce using rule 102 (selection_statement)


State 167

  113 loop_compound_statement: LCB . RCB
  114                        | LCB . loop_block_item_list RCB

    ADD          shift, and go to state 42
    SUB          shift, and go to state 43
    LB           shift, and go to state 44
    LCB          shift, and go to state 36
    RCB          shift, and go to state 172
    PRINT        shift, and go to state 46
    IF           shift, and go to state 47
    WHILE        shift, and go to state 48
    RET          shift, and go to state 49
    CONT         shift, and go to state 173
    BREAK        shift, and go to state 174
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 25
    FALSE        shift, and go to state 26
    STR_CONST    shift, and go to state 27
    I_CONST      shift, and go to state 28
    F_CONST      shift, and go to state 29
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 50
    SEMICOLON    shift, and go to state 51

    const                      go to state 52
    type                       go to state 53
    function_definition        go to state 175
    print_statement            go to state 176
    comment                    go to state 177
    jump_statement             go to state 178
    compound_statement         go to state 179
    block_declaration          go to state 180
    expression_statement       go to state 181
    expression_list            go to state 65
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75
    selection_statement        go to state 182
    iteration_statement        go to state 183
    loop_statement             go to state 184
    loop_block_item_list       go to state 185
    loop_block_item            go to state 186
    loop_jump_statement        go to state 187


State 168

  105 iteration_statement: WHILE LB expression_list RB loop_compound_statement .

    $default  reduce using rule 105 (iteration_statement)


State 169

   26 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB  shift, and go to state 36

    compound_statement  go to state 79


State 170

   55 block_declarator_list: block_declarator_list COMMA block_declarator ASGN . const
   57 block_declarator: block_declarator ASGN . ID

    TRUE       shift, and go to state 25
    FALSE      shift, and go to state 26
    STR_CONST  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    ID         shift, and go to state 162

    const  go to state 188


State 171

  103 selection_statement: IF LB expression_list RB compound_statement ELSE . selection_statement
  104                    | IF LB expression_list RB compound_statement ELSE . compound_statement

    LCB  shift, and go to state 36
    IF   shift, and go to state 47

    compound_statement   go to state 189
    selection_statement  go to state 190


State 172

  113 loop_compound_statement: LCB RCB .

    $default  reduce using rule 113 (loop_compound_statement)


State 173

  120 loop_jump_statement: CONT . SEMICOLON

    SEMICOLON  shift, and go to state 191


State 174

  121 loop_jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 192


State 175

  119 loop_block_item: function_definition .

    $default  reduce using rule 119 (loop_block_item)


State 176

  110 loop_statement: print_statement .

    $default  reduce using rule 110 (loop_statement)


State 177

  111 loop_statement: comment .

    $default  reduce using rule 111 (loop_statement)


State 178

  122 loop_jump_statement: jump_statement .

    $default  reduce using rule 122 (loop_jump_statement)


State 179

  106 loop_statement: compound_statement .

    $default  reduce using rule 106 (loop_statement)


State 180

  118 loop_block_item: block_declaration .

    $default  reduce using rule 118 (loop_block_item)


State 181

  107 loop_statement: expression_statement .

    $default  reduce using rule 107 (loop_statement)


State 182

  108 loop_statement: selection_statement .

    $default  reduce using rule 108 (loop_statement)


State 183

  109 loop_statement: iteration_statement .

    $default  reduce using rule 109 (loop_statement)


State 184

  117 loop_block_item: loop_statement .

    $default  reduce using rule 117 (loop_block_item)


State 185

  114 loop_compound_statement: LCB loop_block_item_list . RCB
  116 loop_block_item_list: loop_block_item_list . loop_block_item

    ADD          shift, and go to state 42
    SUB          shift, and go to state 43
    LB           shift, and go to state 44
    LCB          shift, and go to state 36
    RCB          shift, and go to state 193
    PRINT        shift, and go to state 46
    IF           shift, and go to state 47
    WHILE        shift, and go to state 48
    RET          shift, and go to state 49
    CONT         shift, and go to state 173
    BREAK        shift, and go to state 174
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 25
    FALSE        shift, and go to state 26
    STR_CONST    shift, and go to state 27
    I_CONST      shift, and go to state 28
    F_CONST      shift, and go to state 29
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 50
    SEMICOLON    shift, and go to state 51

    const                      go to state 52
    type                       go to state 53
    function_definition        go to state 175
    print_statement            go to state 176
    comment                    go to state 177
    jump_statement             go to state 178
    compound_statement         go to state 179
    block_declaration          go to state 180
    expression_statement       go to state 181
    expression_list            go to state 65
    assignment_expression      go to state 66
    logical_or_expression      go to state 67
    logical_and_expression     go to state 68
    equality_expression        go to state 69
    relational_expression      go to state 70
    additive_expression        go to state 71
    multiplicative_expression  go to state 72
    prefix_expression          go to state 73
    postfix_expression         go to state 74
    bra_expression             go to state 75
    selection_statement        go to state 182
    iteration_statement        go to state 183
    loop_statement             go to state 184
    loop_block_item            go to state 194
    loop_jump_statement        go to state 187


State 186

  115 loop_block_item_list: loop_block_item .

    $default  reduce using rule 115 (loop_block_item_list)


State 187

  112 loop_statement: loop_jump_statement .

    $default  reduce using rule 112 (loop_statement)


State 188

   55 block_declarator_list: block_declarator_list COMMA block_declarator ASGN const .

    $default  reduce using rule 55 (block_declarator_list)


State 189

  104 selection_statement: IF LB expression_list RB compound_statement ELSE compound_statement .

    $default  reduce using rule 104 (selection_statement)


State 190

  103 selection_statement: IF LB expression_list RB compound_statement ELSE selection_statement .

    $default  reduce using rule 103 (selection_statement)


State 191

  120 loop_jump_statement: CONT SEMICOLON .

    $default  reduce using rule 120 (loop_jump_statement)


State 192

  121 loop_jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 121 (loop_jump_statement)


State 193

  114 loop_compound_statement: LCB loop_block_item_list RCB .

    $default  reduce using rule 114 (loop_compound_statement)


State 194

  116 loop_block_item_list: loop_block_item_list loop_block_item .

    $default  reduce using rule 116 (loop_block_item_list)
