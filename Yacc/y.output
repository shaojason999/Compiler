Terminals unused in grammar

   NOT
   LSB
   RSB
   FOR


State 92 conflicts: 1 reduce/reduce
State 131 conflicts: 24 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration

    3 external_declaration: function_declaration
    4                     | function_definition
    5                     | global_declaration
    6                     | comment

    7 global_declaration: type SEMICOLON
    8                   | type global_declarator_list SEMICOLON

    9 global_declarator_list: global_declarator
   10                       | global_declarator_list COMMA global_declarator

   11 global_declarator: ID
   12                  | ID ASGN only_const_operation
   13                  | ID ASGN STR_CONST

   14 only_const_operation: const_logical_or_expression

   15 const_without_str: I_CONST
   16                  | F_CONST
   17                  | TRUE
   18                  | FALSE

   19 type: VOID
   20     | INT
   21     | FLOAT
   22     | STRING
   23     | BOOL

   24 function_declaration: type ID LB RB SEMICOLON
   25                     | type ID LB function_parameter_list RB SEMICOLON

   26 function_definition: type ID LB RB compound_statement
   27                    | type ID LB function_parameter_list RB compound_statement

   28 function_parameter_list: type ID
   29                        | function_parameter_list COMMA type ID

   30 statement: compound_statement
   31          | statement_with_return
   32          | selection_statement
   33          | iteration_statement
   34          | comment
   35          | jump_statement

   36 statement_with_return: expression_statement
   37                      | print_statement

   38 print_statement: PRINT LB ID RB SEMICOLON
   39                | PRINT LB STR_CONST RB SEMICOLON

   40 comment: C_COMMENT
   41        | CPP_COMMENT

   42 jump_statement: RET SEMICOLON
   43               | RET statement_with_return

   44 compound_statement: LCB RCB
   45                   | LCB block_item_list RCB

   46 block_item_list: block_item
   47                | block_item_list block_item

   48 block_item: statement
   49           | local_declaration
   50           | function_definition

   51 local_declaration: type SEMICOLON
   52                  | type local_declarator_list SEMICOLON

   53 local_declarator_list: local_declarator
   54                      | local_declarator_list COMMA local_declarator

   55 local_declarator: ID
   56                 | ID ASGN assignment_expression
   57                 | ID ASGN STR_CONST

   58 expression_statement: SEMICOLON
   59                     | expression_list SEMICOLON

   60 expression_list: assignment_expression
   61                | expression_list COMMA assignment_expression

   62 assignment_expression: logical_or_expression
   63                      | ID assignment_operator assignment_expression
   64                      | ID ASGN STR_CONST

   65 assignment_operator: ASGN
   66                    | ADDASGN
   67                    | SUBASGN
   68                    | MULASGN
   69                    | DIVASGN
   70                    | MODASGN

   71 logical_or_expression: logical_and_expression
   72                      | logical_or_expression OR logical_and_expression

   73 logical_and_expression: equality_expression
   74                       | logical_and_expression AND equality_expression

   75 equality_expression: relational_expression
   76                    | equality_expression EQ relational_expression
   77                    | equality_expression NE relational_expression

   78 relational_expression: additive_expression
   79                      | relational_expression MT additive_expression
   80                      | relational_expression LT additive_expression
   81                      | relational_expression MTE additive_expression
   82                      | relational_expression LTE additive_expression

   83 additive_expression: multiplicative_expression
   84                    | additive_expression ADD multiplicative_expression
   85                    | additive_expression SUB multiplicative_expression

   86 multiplicative_expression: prefix_expression
   87                          | multiplicative_expression MUL prefix_expression
   88                          | multiplicative_expression DIV prefix_expression
   89                          | multiplicative_expression MOD prefix_expression

   90 prefix_expression: postfix_expression
   91                  | ADD prefix_expression
   92                  | SUB prefix_expression

   93 postfix_expression: ID
   94                   | ID LB RB
   95                   | ID LB expression_list RB
   96                   | const_without_str
   97                   | LB expression_list RB
   98                   | bra_expression INC
   99                   | bra_expression DEC

  100 bra_expression: ID
  101               | LB bra_expression RB

  102 const_logical_or_expression: const_logical_and_expression
  103                            | const_logical_or_expression OR const_logical_and_expression

  104 const_logical_and_expression: const_equality_expression
  105                             | const_logical_and_expression AND const_equality_expression

  106 const_equality_expression: const_relational_expression
  107                          | const_equality_expression EQ const_relational_expression
  108                          | const_equality_expression NE const_relational_expression

  109 const_relational_expression: const_additive_expression
  110                            | const_relational_expression MT const_additive_expression
  111                            | const_relational_expression LT const_additive_expression
  112                            | const_relational_expression MTE const_additive_expression
  113                            | const_relational_expression LTE const_additive_expression

  114 const_additive_expression: const_multiplicative_expression
  115                          | const_additive_expression ADD const_multiplicative_expression
  116                          | const_additive_expression SUB const_multiplicative_expression

  117 const_multiplicative_expression: const_prefix_expression
  118                                | const_multiplicative_expression MUL const_prefix_expression
  119                                | const_multiplicative_expression DIV const_prefix_expression
  120                                | const_multiplicative_expression MOD const_prefix_expression

  121 const_prefix_expression: const_postfix_expression
  122                        | ADD const_prefix_expression
  123                        | SUB const_prefix_expression

  124 const_postfix_expression: const_without_str
  125                         | LB const_logical_or_expression RB

  126 selection_statement: IF LB expression_list RB compound_statement
  127                    | IF LB expression_list RB compound_statement ELSE selection_statement
  128                    | IF LB expression_list RB compound_statement ELSE compound_statement

  129 iteration_statement: WHILE LB expression_list RB loop_compound_statement

  130 loop_statement: compound_statement
  131               | expression_statement
  132               | selection_statement
  133               | iteration_statement
  134               | print_statement
  135               | comment
  136               | loop_jump_statement

  137 loop_compound_statement: LCB RCB
  138                        | LCB loop_block_item_list RCB

  139 loop_block_item_list: loop_block_item
  140                     | loop_block_item_list loop_block_item

  141 loop_block_item: loop_statement
  142                | local_declaration
  143                | function_definition

  144 loop_jump_statement: CONT SEMICOLON
  145                    | BREAK SEMICOLON
  146                    | jump_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 84 91 115 122
SUB (259) 85 92 116 123
MUL (260) 87 118
DIV (261) 88 119
MOD (262) 89 120
INC (263) 98
DEC (264) 99
MT (265) 79 110
LT (266) 80 111
MTE (267) 81 112
LTE (268) 82 113
EQ (269) 76 107
NE (270) 77 108
ASGN (271) 12 13 56 57 64 65
ADDASGN (272) 66
SUBASGN (273) 67
MULASGN (274) 68
DIVASGN (275) 69
MODASGN (276) 70
AND (277) 74 105
OR (278) 72 103
NOT (279)
LB (280) 24 25 26 27 38 39 94 95 97 101 125 126 127 128 129
RB (281) 24 25 26 27 38 39 94 95 97 101 125 126 127 128 129
LCB (282) 44 45 137 138
RCB (283) 44 45 137 138
LSB (284)
RSB (285)
COMMA (286) 10 29 54 61
PRINT (287) 38 39
IF (288) 126 127 128
ELSE (289) 127 128
FOR (290)
WHILE (291) 129
RET (292) 42 43
CONT (293) 144
BREAK (294) 145
VOID (295) 19
INT (296) 20
FLOAT (297) 21
STRING (298) 22
BOOL (299) 23
TRUE (300) 17
FALSE (301) 18
STR_CONST (302) 13 39 57 64
I_CONST (303) 15
F_CONST (304) 16
C_COMMENT (305) 40
CPP_COMMENT (306) 41
ID (307) 11 12 13 24 25 26 27 28 29 38 55 56 57 63 64 93 94 95 100
SEMICOLON (308) 7 8 24 25 38 39 42 51 52 58 59 144 145


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0 2
external_declaration (56)
    on left: 3 4 5 6, on right: 1 2
global_declaration (57)
    on left: 7 8, on right: 5
global_declarator_list (58)
    on left: 9 10, on right: 8 10
global_declarator (59)
    on left: 11 12 13, on right: 9 10
only_const_operation (60)
    on left: 14, on right: 12
const_without_str (61)
    on left: 15 16 17 18, on right: 96 124
type (62)
    on left: 19 20 21 22 23, on right: 7 8 24 25 26 27 28 29 51 52
function_declaration (63)
    on left: 24 25, on right: 3
function_definition (64)
    on left: 26 27, on right: 4 50 143
function_parameter_list (65)
    on left: 28 29, on right: 25 27 29
statement (66)
    on left: 30 31 32 33 34 35, on right: 48
statement_with_return (67)
    on left: 36 37, on right: 31 43
print_statement (68)
    on left: 38 39, on right: 37 134
comment (69)
    on left: 40 41, on right: 6 34 135
jump_statement (70)
    on left: 42 43, on right: 35 146
compound_statement (71)
    on left: 44 45, on right: 26 27 30 126 127 128 130
block_item_list (72)
    on left: 46 47, on right: 45 47
block_item (73)
    on left: 48 49 50, on right: 46 47
local_declaration (74)
    on left: 51 52, on right: 49 142
local_declarator_list (75)
    on left: 53 54, on right: 52 54
local_declarator (76)
    on left: 55 56 57, on right: 53 54
expression_statement (77)
    on left: 58 59, on right: 36 131
expression_list (78)
    on left: 60 61, on right: 59 61 95 97 126 127 128 129
assignment_expression (79)
    on left: 62 63 64, on right: 56 60 61 63
assignment_operator (80)
    on left: 65 66 67 68 69 70, on right: 63
logical_or_expression (81)
    on left: 71 72, on right: 62 72
logical_and_expression (82)
    on left: 73 74, on right: 71 72 74
equality_expression (83)
    on left: 75 76 77, on right: 73 74 76 77
relational_expression (84)
    on left: 78 79 80 81 82, on right: 75 76 77 79 80 81 82
additive_expression (85)
    on left: 83 84 85, on right: 78 79 80 81 82 84 85
multiplicative_expression (86)
    on left: 86 87 88 89, on right: 83 84 85 87 88 89
prefix_expression (87)
    on left: 90 91 92, on right: 86 87 88 89 91 92
postfix_expression (88)
    on left: 93 94 95 96 97 98 99, on right: 90
bra_expression (89)
    on left: 100 101, on right: 98 99 101
const_logical_or_expression (90)
    on left: 102 103, on right: 14 103 125
const_logical_and_expression (91)
    on left: 104 105, on right: 102 103 105
const_equality_expression (92)
    on left: 106 107 108, on right: 104 105 107 108
const_relational_expression (93)
    on left: 109 110 111 112 113, on right: 106 107 108 110 111 112
    113
const_additive_expression (94)
    on left: 114 115 116, on right: 109 110 111 112 113 115 116
const_multiplicative_expression (95)
    on left: 117 118 119 120, on right: 114 115 116 118 119 120
const_prefix_expression (96)
    on left: 121 122 123, on right: 117 118 119 120 122 123
const_postfix_expression (97)
    on left: 124 125, on right: 121
selection_statement (98)
    on left: 126 127 128, on right: 32 127 132
iteration_statement (99)
    on left: 129, on right: 33 133
loop_statement (100)
    on left: 130 131 132 133 134 135 136, on right: 141
loop_compound_statement (101)
    on left: 137 138, on right: 129
loop_block_item_list (102)
    on left: 139 140, on right: 138 140
loop_block_item (103)
    on left: 141 142 143, on right: 139 140
loop_jump_statement (104)
    on left: 144 145 146, on right: 136


State 0

    0 $accept: . program $end

    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7

    program               go to state 8
    external_declaration  go to state 9
    global_declaration    go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 1

   19 type: VOID .

    $default  reduce using rule 19 (type)


State 2

   20 type: INT .

    $default  reduce using rule 20 (type)


State 3

   21 type: FLOAT .

    $default  reduce using rule 21 (type)


State 4

   22 type: STRING .

    $default  reduce using rule 22 (type)


State 5

   23 type: BOOL .

    $default  reduce using rule 23 (type)


State 6

   40 comment: C_COMMENT .

    $default  reduce using rule 40 (comment)


State 7

   41 comment: CPP_COMMENT .

    $default  reduce using rule 41 (comment)


State 8

    0 $accept: program . $end
    2 program: program . external_declaration

    $end         shift, and go to state 15
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7

    external_declaration  go to state 16
    global_declaration    go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 9

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 10

    5 external_declaration: global_declaration .

    $default  reduce using rule 5 (external_declaration)


State 11

    7 global_declaration: type . SEMICOLON
    8                   | type . global_declarator_list SEMICOLON
   24 function_declaration: type . ID LB RB SEMICOLON
   25                     | type . ID LB function_parameter_list RB SEMICOLON
   26 function_definition: type . ID LB RB compound_statement
   27                    | type . ID LB function_parameter_list RB compound_statement

    ID         shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    global_declarator_list  go to state 19
    global_declarator       go to state 20


State 12

    3 external_declaration: function_declaration .

    $default  reduce using rule 3 (external_declaration)


State 13

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 14

    6 external_declaration: comment .

    $default  reduce using rule 6 (external_declaration)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 17

   11 global_declarator: ID .
   12                  | ID . ASGN only_const_operation
   13                  | ID . ASGN STR_CONST
   24 function_declaration: type ID . LB RB SEMICOLON
   25                     | type ID . LB function_parameter_list RB SEMICOLON
   26 function_definition: type ID . LB RB compound_statement
   27                    | type ID . LB function_parameter_list RB compound_statement

    ASGN  shift, and go to state 21
    LB    shift, and go to state 22

    $default  reduce using rule 11 (global_declarator)


State 18

    7 global_declaration: type SEMICOLON .

    $default  reduce using rule 7 (global_declaration)


State 19

    8 global_declaration: type global_declarator_list . SEMICOLON
   10 global_declarator_list: global_declarator_list . COMMA global_declarator

    COMMA      shift, and go to state 23
    SEMICOLON  shift, and go to state 24


State 20

    9 global_declarator_list: global_declarator .

    $default  reduce using rule 9 (global_declarator_list)


State 21

   12 global_declarator: ID ASGN . only_const_operation
   13                  | ID ASGN . STR_CONST

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    LB         shift, and go to state 27
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    STR_CONST  shift, and go to state 30
    I_CONST    shift, and go to state 31
    F_CONST    shift, and go to state 32

    only_const_operation             go to state 33
    const_without_str                go to state 34
    const_logical_or_expression      go to state 35
    const_logical_and_expression     go to state 36
    const_equality_expression        go to state 37
    const_relational_expression      go to state 38
    const_additive_expression        go to state 39
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 22

   24 function_declaration: type ID LB . RB SEMICOLON
   25                     | type ID LB . function_parameter_list RB SEMICOLON
   26 function_definition: type ID LB . RB compound_statement
   27                    | type ID LB . function_parameter_list RB compound_statement

    RB      shift, and go to state 43
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type                     go to state 44
    function_parameter_list  go to state 45


State 23

   10 global_declarator_list: global_declarator_list COMMA . global_declarator

    ID  shift, and go to state 46

    global_declarator  go to state 47


State 24

    8 global_declaration: type global_declarator_list SEMICOLON .

    $default  reduce using rule 8 (global_declaration)


State 25

  122 const_prefix_expression: ADD . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str         go to state 34
    const_prefix_expression   go to state 48
    const_postfix_expression  go to state 42


State 26

  123 const_prefix_expression: SUB . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str         go to state 34
    const_prefix_expression   go to state 49
    const_postfix_expression  go to state 42


State 27

  125 const_postfix_expression: LB . const_logical_or_expression RB

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_logical_or_expression      go to state 50
    const_logical_and_expression     go to state 36
    const_equality_expression        go to state 37
    const_relational_expression      go to state 38
    const_additive_expression        go to state 39
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 28

   17 const_without_str: TRUE .

    $default  reduce using rule 17 (const_without_str)


State 29

   18 const_without_str: FALSE .

    $default  reduce using rule 18 (const_without_str)


State 30

   13 global_declarator: ID ASGN STR_CONST .

    $default  reduce using rule 13 (global_declarator)


State 31

   15 const_without_str: I_CONST .

    $default  reduce using rule 15 (const_without_str)


State 32

   16 const_without_str: F_CONST .

    $default  reduce using rule 16 (const_without_str)


State 33

   12 global_declarator: ID ASGN only_const_operation .

    $default  reduce using rule 12 (global_declarator)


State 34

  124 const_postfix_expression: const_without_str .

    $default  reduce using rule 124 (const_postfix_expression)


State 35

   14 only_const_operation: const_logical_or_expression .
  103 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression

    OR  shift, and go to state 51

    $default  reduce using rule 14 (only_const_operation)


State 36

  102 const_logical_or_expression: const_logical_and_expression .
  105 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 52

    $default  reduce using rule 102 (const_logical_or_expression)


State 37

  104 const_logical_and_expression: const_equality_expression .
  107 const_equality_expression: const_equality_expression . EQ const_relational_expression
  108                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 53
    NE  shift, and go to state 54

    $default  reduce using rule 104 (const_logical_and_expression)


State 38

  106 const_equality_expression: const_relational_expression .
  110 const_relational_expression: const_relational_expression . MT const_additive_expression
  111                            | const_relational_expression . LT const_additive_expression
  112                            | const_relational_expression . MTE const_additive_expression
  113                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 55
    LT   shift, and go to state 56
    MTE  shift, and go to state 57
    LTE  shift, and go to state 58

    $default  reduce using rule 106 (const_equality_expression)


State 39

  109 const_relational_expression: const_additive_expression .
  115 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  116                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 109 (const_relational_expression)


State 40

  114 const_additive_expression: const_multiplicative_expression .
  118 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  119                                | const_multiplicative_expression . DIV const_prefix_expression
  120                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 114 (const_additive_expression)


State 41

  117 const_multiplicative_expression: const_prefix_expression .

    $default  reduce using rule 117 (const_multiplicative_expression)


State 42

  121 const_prefix_expression: const_postfix_expression .

    $default  reduce using rule 121 (const_prefix_expression)


State 43

   24 function_declaration: type ID LB RB . SEMICOLON
   26 function_definition: type ID LB RB . compound_statement

    LCB        shift, and go to state 64
    SEMICOLON  shift, and go to state 65

    compound_statement  go to state 66


State 44

   28 function_parameter_list: type . ID

    ID  shift, and go to state 67


State 45

   25 function_declaration: type ID LB function_parameter_list . RB SEMICOLON
   27 function_definition: type ID LB function_parameter_list . RB compound_statement
   29 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 68
    COMMA  shift, and go to state 69


State 46

   11 global_declarator: ID .
   12                  | ID . ASGN only_const_operation
   13                  | ID . ASGN STR_CONST

    ASGN  shift, and go to state 21

    $default  reduce using rule 11 (global_declarator)


State 47

   10 global_declarator_list: global_declarator_list COMMA global_declarator .

    $default  reduce using rule 10 (global_declarator_list)


State 48

  122 const_prefix_expression: ADD const_prefix_expression .

    $default  reduce using rule 122 (const_prefix_expression)


State 49

  123 const_prefix_expression: SUB const_prefix_expression .

    $default  reduce using rule 123 (const_prefix_expression)


State 50

  103 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression
  125 const_postfix_expression: LB const_logical_or_expression . RB

    OR  shift, and go to state 51
    RB  shift, and go to state 70


State 51

  103 const_logical_or_expression: const_logical_or_expression OR . const_logical_and_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_logical_and_expression     go to state 71
    const_equality_expression        go to state 37
    const_relational_expression      go to state 38
    const_additive_expression        go to state 39
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 52

  105 const_logical_and_expression: const_logical_and_expression AND . const_equality_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_equality_expression        go to state 72
    const_relational_expression      go to state 38
    const_additive_expression        go to state 39
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 53

  107 const_equality_expression: const_equality_expression EQ . const_relational_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_relational_expression      go to state 73
    const_additive_expression        go to state 39
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 54

  108 const_equality_expression: const_equality_expression NE . const_relational_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_relational_expression      go to state 74
    const_additive_expression        go to state 39
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 55

  110 const_relational_expression: const_relational_expression MT . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_additive_expression        go to state 75
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 56

  111 const_relational_expression: const_relational_expression LT . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_additive_expression        go to state 76
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 57

  112 const_relational_expression: const_relational_expression MTE . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_additive_expression        go to state 77
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 58

  113 const_relational_expression: const_relational_expression LTE . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_additive_expression        go to state 78
    const_multiplicative_expression  go to state 40
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 59

  115 const_additive_expression: const_additive_expression ADD . const_multiplicative_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_multiplicative_expression  go to state 79
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 60

  116 const_additive_expression: const_additive_expression SUB . const_multiplicative_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str                go to state 34
    const_multiplicative_expression  go to state 80
    const_prefix_expression          go to state 41
    const_postfix_expression         go to state 42


State 61

  118 const_multiplicative_expression: const_multiplicative_expression MUL . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str         go to state 34
    const_prefix_expression   go to state 81
    const_postfix_expression  go to state 42


State 62

  119 const_multiplicative_expression: const_multiplicative_expression DIV . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str         go to state 34
    const_prefix_expression   go to state 82
    const_postfix_expression  go to state 42


State 63

  120 const_multiplicative_expression: const_multiplicative_expression MOD . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32

    const_without_str         go to state 34
    const_prefix_expression   go to state 83
    const_postfix_expression  go to state 42


State 64

   44 compound_statement: LCB . RCB
   45                   | LCB . block_item_list RCB

    ADD          shift, and go to state 84
    SUB          shift, and go to state 85
    LB           shift, and go to state 86
    LCB          shift, and go to state 64
    RCB          shift, and go to state 87
    PRINT        shift, and go to state 88
    IF           shift, and go to state 89
    WHILE        shift, and go to state 90
    RET          shift, and go to state 91
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 31
    F_CONST      shift, and go to state 32
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 92
    SEMICOLON    shift, and go to state 93

    const_without_str          go to state 94
    type                       go to state 95
    function_definition        go to state 96
    statement                  go to state 97
    statement_with_return      go to state 98
    print_statement            go to state 99
    comment                    go to state 100
    jump_statement             go to state 101
    compound_statement         go to state 102
    block_item_list            go to state 103
    block_item                 go to state 104
    local_declaration          go to state 105
    expression_statement       go to state 106
    expression_list            go to state 107
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117
    selection_statement        go to state 118
    iteration_statement        go to state 119


State 65

   24 function_declaration: type ID LB RB SEMICOLON .

    $default  reduce using rule 24 (function_declaration)


State 66

   26 function_definition: type ID LB RB compound_statement .

    $default  reduce using rule 26 (function_definition)


State 67

   28 function_parameter_list: type ID .

    $default  reduce using rule 28 (function_parameter_list)


State 68

   25 function_declaration: type ID LB function_parameter_list RB . SEMICOLON
   27 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB        shift, and go to state 64
    SEMICOLON  shift, and go to state 120

    compound_statement  go to state 121


State 69

   29 function_parameter_list: function_parameter_list COMMA . type ID

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type  go to state 122


State 70

  125 const_postfix_expression: LB const_logical_or_expression RB .

    $default  reduce using rule 125 (const_postfix_expression)


State 71

  103 const_logical_or_expression: const_logical_or_expression OR const_logical_and_expression .
  105 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 52

    $default  reduce using rule 103 (const_logical_or_expression)


State 72

  105 const_logical_and_expression: const_logical_and_expression AND const_equality_expression .
  107 const_equality_expression: const_equality_expression . EQ const_relational_expression
  108                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 53
    NE  shift, and go to state 54

    $default  reduce using rule 105 (const_logical_and_expression)


State 73

  107 const_equality_expression: const_equality_expression EQ const_relational_expression .
  110 const_relational_expression: const_relational_expression . MT const_additive_expression
  111                            | const_relational_expression . LT const_additive_expression
  112                            | const_relational_expression . MTE const_additive_expression
  113                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 55
    LT   shift, and go to state 56
    MTE  shift, and go to state 57
    LTE  shift, and go to state 58

    $default  reduce using rule 107 (const_equality_expression)


State 74

  108 const_equality_expression: const_equality_expression NE const_relational_expression .
  110 const_relational_expression: const_relational_expression . MT const_additive_expression
  111                            | const_relational_expression . LT const_additive_expression
  112                            | const_relational_expression . MTE const_additive_expression
  113                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 55
    LT   shift, and go to state 56
    MTE  shift, and go to state 57
    LTE  shift, and go to state 58

    $default  reduce using rule 108 (const_equality_expression)


State 75

  110 const_relational_expression: const_relational_expression MT const_additive_expression .
  115 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  116                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 110 (const_relational_expression)


State 76

  111 const_relational_expression: const_relational_expression LT const_additive_expression .
  115 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  116                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 111 (const_relational_expression)


State 77

  112 const_relational_expression: const_relational_expression MTE const_additive_expression .
  115 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  116                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 112 (const_relational_expression)


State 78

  113 const_relational_expression: const_relational_expression LTE const_additive_expression .
  115 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  116                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60

    $default  reduce using rule 113 (const_relational_expression)


State 79

  115 const_additive_expression: const_additive_expression ADD const_multiplicative_expression .
  118 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  119                                | const_multiplicative_expression . DIV const_prefix_expression
  120                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 115 (const_additive_expression)


State 80

  116 const_additive_expression: const_additive_expression SUB const_multiplicative_expression .
  118 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  119                                | const_multiplicative_expression . DIV const_prefix_expression
  120                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 116 (const_additive_expression)


State 81

  118 const_multiplicative_expression: const_multiplicative_expression MUL const_prefix_expression .

    $default  reduce using rule 118 (const_multiplicative_expression)


State 82

  119 const_multiplicative_expression: const_multiplicative_expression DIV const_prefix_expression .

    $default  reduce using rule 119 (const_multiplicative_expression)


State 83

  120 const_multiplicative_expression: const_multiplicative_expression MOD const_prefix_expression .

    $default  reduce using rule 120 (const_multiplicative_expression)


State 84

   91 prefix_expression: ADD . prefix_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str   go to state 94
    prefix_expression   go to state 124
    postfix_expression  go to state 116
    bra_expression      go to state 117


State 85

   92 prefix_expression: SUB . prefix_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str   go to state 94
    prefix_expression   go to state 125
    postfix_expression  go to state 116
    bra_expression      go to state 117


State 86

   97 postfix_expression: LB . expression_list RB
  101 bra_expression: LB . bra_expression RB

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 92

    const_without_str          go to state 94
    expression_list            go to state 126
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 127


State 87

   44 compound_statement: LCB RCB .

    $default  reduce using rule 44 (compound_statement)


State 88

   38 print_statement: PRINT . LB ID RB SEMICOLON
   39                | PRINT . LB STR_CONST RB SEMICOLON

    LB  shift, and go to state 128


State 89

  126 selection_statement: IF . LB expression_list RB compound_statement
  127                    | IF . LB expression_list RB compound_statement ELSE selection_statement
  128                    | IF . LB expression_list RB compound_statement ELSE compound_statement

    LB  shift, and go to state 129


State 90

  129 iteration_statement: WHILE . LB expression_list RB loop_compound_statement

    LB  shift, and go to state 130


State 91

   42 jump_statement: RET . SEMICOLON
   43               | RET . statement_with_return

    ADD        shift, and go to state 84
    SUB        shift, and go to state 85
    LB         shift, and go to state 86
    PRINT      shift, and go to state 88
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    I_CONST    shift, and go to state 31
    F_CONST    shift, and go to state 32
    ID         shift, and go to state 92
    SEMICOLON  shift, and go to state 131

    const_without_str          go to state 94
    statement_with_return      go to state 132
    print_statement            go to state 99
    expression_statement       go to state 106
    expression_list            go to state 107
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 92

   63 assignment_expression: ID . assignment_operator assignment_expression
   64                      | ID . ASGN STR_CONST
   93 postfix_expression: ID .
   94                   | ID . LB RB
   95                   | ID . LB expression_list RB
  100 bra_expression: ID .

    ASGN     shift, and go to state 133
    ADDASGN  shift, and go to state 134
    SUBASGN  shift, and go to state 135
    MULASGN  shift, and go to state 136
    DIVASGN  shift, and go to state 137
    MODASGN  shift, and go to state 138
    LB       shift, and go to state 139

    INC       reduce using rule 100 (bra_expression)
    DEC       reduce using rule 100 (bra_expression)
    RB        reduce using rule 93 (postfix_expression)
    RB        [reduce using rule 100 (bra_expression)]
    $default  reduce using rule 93 (postfix_expression)

    assignment_operator  go to state 140


State 93

   58 expression_statement: SEMICOLON .

    $default  reduce using rule 58 (expression_statement)


State 94

   96 postfix_expression: const_without_str .

    $default  reduce using rule 96 (postfix_expression)


State 95

   26 function_definition: type . ID LB RB compound_statement
   27                    | type . ID LB function_parameter_list RB compound_statement
   51 local_declaration: type . SEMICOLON
   52                  | type . local_declarator_list SEMICOLON

    ID         shift, and go to state 141
    SEMICOLON  shift, and go to state 142

    local_declarator_list  go to state 143
    local_declarator       go to state 144


State 96

   50 block_item: function_definition .

    $default  reduce using rule 50 (block_item)


State 97

   48 block_item: statement .

    $default  reduce using rule 48 (block_item)


State 98

   31 statement: statement_with_return .

    $default  reduce using rule 31 (statement)


State 99

   37 statement_with_return: print_statement .

    $default  reduce using rule 37 (statement_with_return)


State 100

   34 statement: comment .

    $default  reduce using rule 34 (statement)


State 101

   35 statement: jump_statement .

    $default  reduce using rule 35 (statement)


State 102

   30 statement: compound_statement .

    $default  reduce using rule 30 (statement)


State 103

   45 compound_statement: LCB block_item_list . RCB
   47 block_item_list: block_item_list . block_item

    ADD          shift, and go to state 84
    SUB          shift, and go to state 85
    LB           shift, and go to state 86
    LCB          shift, and go to state 64
    RCB          shift, and go to state 145
    PRINT        shift, and go to state 88
    IF           shift, and go to state 89
    WHILE        shift, and go to state 90
    RET          shift, and go to state 91
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 31
    F_CONST      shift, and go to state 32
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 92
    SEMICOLON    shift, and go to state 93

    const_without_str          go to state 94
    type                       go to state 95
    function_definition        go to state 96
    statement                  go to state 97
    statement_with_return      go to state 98
    print_statement            go to state 99
    comment                    go to state 100
    jump_statement             go to state 101
    compound_statement         go to state 102
    block_item                 go to state 146
    local_declaration          go to state 105
    expression_statement       go to state 106
    expression_list            go to state 107
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117
    selection_statement        go to state 118
    iteration_statement        go to state 119


State 104

   46 block_item_list: block_item .

    $default  reduce using rule 46 (block_item_list)


State 105

   49 block_item: local_declaration .

    $default  reduce using rule 49 (block_item)


State 106

   36 statement_with_return: expression_statement .

    $default  reduce using rule 36 (statement_with_return)


State 107

   59 expression_statement: expression_list . SEMICOLON
   61 expression_list: expression_list . COMMA assignment_expression

    COMMA      shift, and go to state 147
    SEMICOLON  shift, and go to state 148


State 108

   60 expression_list: assignment_expression .

    $default  reduce using rule 60 (expression_list)


State 109

   62 assignment_expression: logical_or_expression .
   72 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 149

    $default  reduce using rule 62 (assignment_expression)


State 110

   71 logical_or_expression: logical_and_expression .
   74 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 150

    $default  reduce using rule 71 (logical_or_expression)


State 111

   73 logical_and_expression: equality_expression .
   76 equality_expression: equality_expression . EQ relational_expression
   77                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 151
    NE  shift, and go to state 152

    $default  reduce using rule 73 (logical_and_expression)


State 112

   75 equality_expression: relational_expression .
   79 relational_expression: relational_expression . MT additive_expression
   80                      | relational_expression . LT additive_expression
   81                      | relational_expression . MTE additive_expression
   82                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 153
    LT   shift, and go to state 154
    MTE  shift, and go to state 155
    LTE  shift, and go to state 156

    $default  reduce using rule 75 (equality_expression)


State 113

   78 relational_expression: additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 78 (relational_expression)


State 114

   83 additive_expression: multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   88                          | multiplicative_expression . DIV prefix_expression
   89                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 159
    DIV  shift, and go to state 160
    MOD  shift, and go to state 161

    $default  reduce using rule 83 (additive_expression)


State 115

   86 multiplicative_expression: prefix_expression .

    $default  reduce using rule 86 (multiplicative_expression)


State 116

   90 prefix_expression: postfix_expression .

    $default  reduce using rule 90 (prefix_expression)


State 117

   98 postfix_expression: bra_expression . INC
   99                   | bra_expression . DEC

    INC  shift, and go to state 162
    DEC  shift, and go to state 163


State 118

   32 statement: selection_statement .

    $default  reduce using rule 32 (statement)


State 119

   33 statement: iteration_statement .

    $default  reduce using rule 33 (statement)


State 120

   25 function_declaration: type ID LB function_parameter_list RB SEMICOLON .

    $default  reduce using rule 25 (function_declaration)


State 121

   27 function_definition: type ID LB function_parameter_list RB compound_statement .

    $default  reduce using rule 27 (function_definition)


State 122

   29 function_parameter_list: function_parameter_list COMMA type . ID

    ID  shift, and go to state 164


State 123

   93 postfix_expression: ID .
   94                   | ID . LB RB
   95                   | ID . LB expression_list RB
  100 bra_expression: ID .

    LB  shift, and go to state 139

    INC       reduce using rule 100 (bra_expression)
    DEC       reduce using rule 100 (bra_expression)
    $default  reduce using rule 93 (postfix_expression)


State 124

   91 prefix_expression: ADD prefix_expression .

    $default  reduce using rule 91 (prefix_expression)


State 125

   92 prefix_expression: SUB prefix_expression .

    $default  reduce using rule 92 (prefix_expression)


State 126

   61 expression_list: expression_list . COMMA assignment_expression
   97 postfix_expression: LB expression_list . RB

    RB     shift, and go to state 165
    COMMA  shift, and go to state 147


State 127

   98 postfix_expression: bra_expression . INC
   99                   | bra_expression . DEC
  101 bra_expression: LB bra_expression . RB

    INC  shift, and go to state 162
    DEC  shift, and go to state 163
    RB   shift, and go to state 166


State 128

   38 print_statement: PRINT LB . ID RB SEMICOLON
   39                | PRINT LB . STR_CONST RB SEMICOLON

    STR_CONST  shift, and go to state 167
    ID         shift, and go to state 168


State 129

  126 selection_statement: IF LB . expression_list RB compound_statement
  127                    | IF LB . expression_list RB compound_statement ELSE selection_statement
  128                    | IF LB . expression_list RB compound_statement ELSE compound_statement

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 92

    const_without_str          go to state 94
    expression_list            go to state 169
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 130

  129 iteration_statement: WHILE LB . expression_list RB loop_compound_statement

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 92

    const_without_str          go to state 94
    expression_list            go to state 170
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 131

   42 jump_statement: RET SEMICOLON .
   58 expression_statement: SEMICOLON .

    ADD          reduce using rule 42 (jump_statement)
    ADD          [reduce using rule 58 (expression_statement)]
    SUB          reduce using rule 42 (jump_statement)
    SUB          [reduce using rule 58 (expression_statement)]
    LB           reduce using rule 42 (jump_statement)
    LB           [reduce using rule 58 (expression_statement)]
    LCB          reduce using rule 42 (jump_statement)
    LCB          [reduce using rule 58 (expression_statement)]
    RCB          reduce using rule 42 (jump_statement)
    RCB          [reduce using rule 58 (expression_statement)]
    PRINT        reduce using rule 42 (jump_statement)
    PRINT        [reduce using rule 58 (expression_statement)]
    IF           reduce using rule 42 (jump_statement)
    IF           [reduce using rule 58 (expression_statement)]
    WHILE        reduce using rule 42 (jump_statement)
    WHILE        [reduce using rule 58 (expression_statement)]
    RET          reduce using rule 42 (jump_statement)
    RET          [reduce using rule 58 (expression_statement)]
    CONT         reduce using rule 42 (jump_statement)
    CONT         [reduce using rule 58 (expression_statement)]
    BREAK        reduce using rule 42 (jump_statement)
    BREAK        [reduce using rule 58 (expression_statement)]
    VOID         reduce using rule 42 (jump_statement)
    VOID         [reduce using rule 58 (expression_statement)]
    INT          reduce using rule 42 (jump_statement)
    INT          [reduce using rule 58 (expression_statement)]
    FLOAT        reduce using rule 42 (jump_statement)
    FLOAT        [reduce using rule 58 (expression_statement)]
    STRING       reduce using rule 42 (jump_statement)
    STRING       [reduce using rule 58 (expression_statement)]
    BOOL         reduce using rule 42 (jump_statement)
    BOOL         [reduce using rule 58 (expression_statement)]
    TRUE         reduce using rule 42 (jump_statement)
    TRUE         [reduce using rule 58 (expression_statement)]
    FALSE        reduce using rule 42 (jump_statement)
    FALSE        [reduce using rule 58 (expression_statement)]
    I_CONST      reduce using rule 42 (jump_statement)
    I_CONST      [reduce using rule 58 (expression_statement)]
    F_CONST      reduce using rule 42 (jump_statement)
    F_CONST      [reduce using rule 58 (expression_statement)]
    C_COMMENT    reduce using rule 42 (jump_statement)
    C_COMMENT    [reduce using rule 58 (expression_statement)]
    CPP_COMMENT  reduce using rule 42 (jump_statement)
    CPP_COMMENT  [reduce using rule 58 (expression_statement)]
    ID           reduce using rule 42 (jump_statement)
    ID           [reduce using rule 58 (expression_statement)]
    SEMICOLON    reduce using rule 42 (jump_statement)
    SEMICOLON    [reduce using rule 58 (expression_statement)]
    $default     reduce using rule 42 (jump_statement)


State 132

   43 jump_statement: RET statement_with_return .

    $default  reduce using rule 43 (jump_statement)


State 133

   64 assignment_expression: ID ASGN . STR_CONST
   65 assignment_operator: ASGN .

    STR_CONST  shift, and go to state 171

    $default  reduce using rule 65 (assignment_operator)


State 134

   66 assignment_operator: ADDASGN .

    $default  reduce using rule 66 (assignment_operator)


State 135

   67 assignment_operator: SUBASGN .

    $default  reduce using rule 67 (assignment_operator)


State 136

   68 assignment_operator: MULASGN .

    $default  reduce using rule 68 (assignment_operator)


State 137

   69 assignment_operator: DIVASGN .

    $default  reduce using rule 69 (assignment_operator)


State 138

   70 assignment_operator: MODASGN .

    $default  reduce using rule 70 (assignment_operator)


State 139

   94 postfix_expression: ID LB . RB
   95                   | ID LB . expression_list RB

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    RB       shift, and go to state 172
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 92

    const_without_str          go to state 94
    expression_list            go to state 173
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 140

   63 assignment_expression: ID assignment_operator . assignment_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 92

    const_without_str          go to state 94
    assignment_expression      go to state 174
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 141

   26 function_definition: type ID . LB RB compound_statement
   27                    | type ID . LB function_parameter_list RB compound_statement
   55 local_declarator: ID .
   56                 | ID . ASGN assignment_expression
   57                 | ID . ASGN STR_CONST

    ASGN  shift, and go to state 175
    LB    shift, and go to state 176

    $default  reduce using rule 55 (local_declarator)


State 142

   51 local_declaration: type SEMICOLON .

    $default  reduce using rule 51 (local_declaration)


State 143

   52 local_declaration: type local_declarator_list . SEMICOLON
   54 local_declarator_list: local_declarator_list . COMMA local_declarator

    COMMA      shift, and go to state 177
    SEMICOLON  shift, and go to state 178


State 144

   53 local_declarator_list: local_declarator .

    $default  reduce using rule 53 (local_declarator_list)


State 145

   45 compound_statement: LCB block_item_list RCB .

    $default  reduce using rule 45 (compound_statement)


State 146

   47 block_item_list: block_item_list block_item .

    $default  reduce using rule 47 (block_item_list)


State 147

   61 expression_list: expression_list COMMA . assignment_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 92

    const_without_str          go to state 94
    assignment_expression      go to state 179
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 148

   59 expression_statement: expression_list SEMICOLON .

    $default  reduce using rule 59 (expression_statement)


State 149

   72 logical_or_expression: logical_or_expression OR . logical_and_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    logical_and_expression     go to state 180
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 150

   74 logical_and_expression: logical_and_expression AND . equality_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    equality_expression        go to state 181
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 151

   76 equality_expression: equality_expression EQ . relational_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    relational_expression      go to state 182
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 152

   77 equality_expression: equality_expression NE . relational_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    relational_expression      go to state 183
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 153

   79 relational_expression: relational_expression MT . additive_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    additive_expression        go to state 184
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 154

   80 relational_expression: relational_expression LT . additive_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    additive_expression        go to state 185
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 155

   81 relational_expression: relational_expression MTE . additive_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    additive_expression        go to state 186
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 156

   82 relational_expression: relational_expression LTE . additive_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    additive_expression        go to state 187
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 157

   84 additive_expression: additive_expression ADD . multiplicative_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    multiplicative_expression  go to state 188
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 158

   85 additive_expression: additive_expression SUB . multiplicative_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str          go to state 94
    multiplicative_expression  go to state 189
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 159

   87 multiplicative_expression: multiplicative_expression MUL . prefix_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str   go to state 94
    prefix_expression   go to state 190
    postfix_expression  go to state 116
    bra_expression      go to state 117


State 160

   88 multiplicative_expression: multiplicative_expression DIV . prefix_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str   go to state 94
    prefix_expression   go to state 191
    postfix_expression  go to state 116
    bra_expression      go to state 117


State 161

   89 multiplicative_expression: multiplicative_expression MOD . prefix_expression

    ADD      shift, and go to state 84
    SUB      shift, and go to state 85
    LB       shift, and go to state 86
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 31
    F_CONST  shift, and go to state 32
    ID       shift, and go to state 123

    const_without_str   go to state 94
    prefix_expression   go to state 192
    postfix_expression  go to state 116
    bra_expression      go to state 117


State 162

   98 postfix_expression: bra_expression INC .

    $default  reduce using rule 98 (postfix_expression)


State 163

   99 postfix_expression: bra_expression DEC .

    $default  reduce using rule 99 (postfix_expression)


State 164

   29 function_parameter_list: function_parameter_list COMMA type ID .

    $default  reduce using rule 29 (function_parameter_list)


State 165

   97 postfix_expression: LB expression_list RB .

    $default  reduce using rule 97 (postfix_expression)


State 166

  101 bra_expression: LB bra_expression RB .

    $default  reduce using rule 101 (bra_expression)


State 167

   39 print_statement: PRINT LB STR_CONST . RB SEMICOLON

    RB  shift, and go to state 193


State 168

   38 print_statement: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 194


State 169

   61 expression_list: expression_list . COMMA assignment_expression
  126 selection_statement: IF LB expression_list . RB compound_statement
  127                    | IF LB expression_list . RB compound_statement ELSE selection_statement
  128                    | IF LB expression_list . RB compound_statement ELSE compound_statement

    RB     shift, and go to state 195
    COMMA  shift, and go to state 147


State 170

   61 expression_list: expression_list . COMMA assignment_expression
  129 iteration_statement: WHILE LB expression_list . RB loop_compound_statement

    RB     shift, and go to state 196
    COMMA  shift, and go to state 147


State 171

   64 assignment_expression: ID ASGN STR_CONST .

    $default  reduce using rule 64 (assignment_expression)


State 172

   94 postfix_expression: ID LB RB .

    $default  reduce using rule 94 (postfix_expression)


State 173

   61 expression_list: expression_list . COMMA assignment_expression
   95 postfix_expression: ID LB expression_list . RB

    RB     shift, and go to state 197
    COMMA  shift, and go to state 147


State 174

   63 assignment_expression: ID assignment_operator assignment_expression .

    $default  reduce using rule 63 (assignment_expression)


State 175

   56 local_declarator: ID ASGN . assignment_expression
   57                 | ID ASGN . STR_CONST

    ADD        shift, and go to state 84
    SUB        shift, and go to state 85
    LB         shift, and go to state 86
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    STR_CONST  shift, and go to state 198
    I_CONST    shift, and go to state 31
    F_CONST    shift, and go to state 32
    ID         shift, and go to state 92

    const_without_str          go to state 94
    assignment_expression      go to state 199
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117


State 176

   26 function_definition: type ID LB . RB compound_statement
   27                    | type ID LB . function_parameter_list RB compound_statement

    RB      shift, and go to state 200
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type                     go to state 44
    function_parameter_list  go to state 201


State 177

   54 local_declarator_list: local_declarator_list COMMA . local_declarator

    ID  shift, and go to state 202

    local_declarator  go to state 203


State 178

   52 local_declaration: type local_declarator_list SEMICOLON .

    $default  reduce using rule 52 (local_declaration)


State 179

   61 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 61 (expression_list)


State 180

   72 logical_or_expression: logical_or_expression OR logical_and_expression .
   74 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 150

    $default  reduce using rule 72 (logical_or_expression)


State 181

   74 logical_and_expression: logical_and_expression AND equality_expression .
   76 equality_expression: equality_expression . EQ relational_expression
   77                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 151
    NE  shift, and go to state 152

    $default  reduce using rule 74 (logical_and_expression)


State 182

   76 equality_expression: equality_expression EQ relational_expression .
   79 relational_expression: relational_expression . MT additive_expression
   80                      | relational_expression . LT additive_expression
   81                      | relational_expression . MTE additive_expression
   82                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 153
    LT   shift, and go to state 154
    MTE  shift, and go to state 155
    LTE  shift, and go to state 156

    $default  reduce using rule 76 (equality_expression)


State 183

   77 equality_expression: equality_expression NE relational_expression .
   79 relational_expression: relational_expression . MT additive_expression
   80                      | relational_expression . LT additive_expression
   81                      | relational_expression . MTE additive_expression
   82                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 153
    LT   shift, and go to state 154
    MTE  shift, and go to state 155
    LTE  shift, and go to state 156

    $default  reduce using rule 77 (equality_expression)


State 184

   79 relational_expression: relational_expression MT additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 79 (relational_expression)


State 185

   80 relational_expression: relational_expression LT additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 80 (relational_expression)


State 186

   81 relational_expression: relational_expression MTE additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 81 (relational_expression)


State 187

   82 relational_expression: relational_expression LTE additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 82 (relational_expression)


State 188

   84 additive_expression: additive_expression ADD multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   88                          | multiplicative_expression . DIV prefix_expression
   89                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 159
    DIV  shift, and go to state 160
    MOD  shift, and go to state 161

    $default  reduce using rule 84 (additive_expression)


State 189

   85 additive_expression: additive_expression SUB multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   88                          | multiplicative_expression . DIV prefix_expression
   89                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 159
    DIV  shift, and go to state 160
    MOD  shift, and go to state 161

    $default  reduce using rule 85 (additive_expression)


State 190

   87 multiplicative_expression: multiplicative_expression MUL prefix_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 191

   88 multiplicative_expression: multiplicative_expression DIV prefix_expression .

    $default  reduce using rule 88 (multiplicative_expression)


State 192

   89 multiplicative_expression: multiplicative_expression MOD prefix_expression .

    $default  reduce using rule 89 (multiplicative_expression)


State 193

   39 print_statement: PRINT LB STR_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 204


State 194

   38 print_statement: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 205


State 195

  126 selection_statement: IF LB expression_list RB . compound_statement
  127                    | IF LB expression_list RB . compound_statement ELSE selection_statement
  128                    | IF LB expression_list RB . compound_statement ELSE compound_statement

    LCB  shift, and go to state 64

    compound_statement  go to state 206


State 196

  129 iteration_statement: WHILE LB expression_list RB . loop_compound_statement

    LCB  shift, and go to state 207

    loop_compound_statement  go to state 208


State 197

   95 postfix_expression: ID LB expression_list RB .

    $default  reduce using rule 95 (postfix_expression)


State 198

   57 local_declarator: ID ASGN STR_CONST .

    $default  reduce using rule 57 (local_declarator)


State 199

   56 local_declarator: ID ASGN assignment_expression .

    $default  reduce using rule 56 (local_declarator)


State 200

   26 function_definition: type ID LB RB . compound_statement

    LCB  shift, and go to state 64

    compound_statement  go to state 66


State 201

   27 function_definition: type ID LB function_parameter_list . RB compound_statement
   29 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 209
    COMMA  shift, and go to state 69


State 202

   55 local_declarator: ID .
   56                 | ID . ASGN assignment_expression
   57                 | ID . ASGN STR_CONST

    ASGN  shift, and go to state 175

    $default  reduce using rule 55 (local_declarator)


State 203

   54 local_declarator_list: local_declarator_list COMMA local_declarator .

    $default  reduce using rule 54 (local_declarator_list)


State 204

   39 print_statement: PRINT LB STR_CONST RB SEMICOLON .

    $default  reduce using rule 39 (print_statement)


State 205

   38 print_statement: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 38 (print_statement)


State 206

  126 selection_statement: IF LB expression_list RB compound_statement .
  127                    | IF LB expression_list RB compound_statement . ELSE selection_statement
  128                    | IF LB expression_list RB compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 210

    $default  reduce using rule 126 (selection_statement)


State 207

  137 loop_compound_statement: LCB . RCB
  138                        | LCB . loop_block_item_list RCB

    ADD          shift, and go to state 84
    SUB          shift, and go to state 85
    LB           shift, and go to state 86
    LCB          shift, and go to state 64
    RCB          shift, and go to state 211
    PRINT        shift, and go to state 88
    IF           shift, and go to state 89
    WHILE        shift, and go to state 90
    RET          shift, and go to state 91
    CONT         shift, and go to state 212
    BREAK        shift, and go to state 213
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 31
    F_CONST      shift, and go to state 32
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 92
    SEMICOLON    shift, and go to state 93

    const_without_str          go to state 94
    type                       go to state 95
    function_definition        go to state 214
    print_statement            go to state 215
    comment                    go to state 216
    jump_statement             go to state 217
    compound_statement         go to state 218
    local_declaration          go to state 219
    expression_statement       go to state 220
    expression_list            go to state 107
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117
    selection_statement        go to state 221
    iteration_statement        go to state 222
    loop_statement             go to state 223
    loop_block_item_list       go to state 224
    loop_block_item            go to state 225
    loop_jump_statement        go to state 226


State 208

  129 iteration_statement: WHILE LB expression_list RB loop_compound_statement .

    $default  reduce using rule 129 (iteration_statement)


State 209

   27 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB  shift, and go to state 64

    compound_statement  go to state 121


State 210

  127 selection_statement: IF LB expression_list RB compound_statement ELSE . selection_statement
  128                    | IF LB expression_list RB compound_statement ELSE . compound_statement

    LCB  shift, and go to state 64
    IF   shift, and go to state 89

    compound_statement   go to state 227
    selection_statement  go to state 228


State 211

  137 loop_compound_statement: LCB RCB .

    $default  reduce using rule 137 (loop_compound_statement)


State 212

  144 loop_jump_statement: CONT . SEMICOLON

    SEMICOLON  shift, and go to state 229


State 213

  145 loop_jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 230


State 214

  143 loop_block_item: function_definition .

    $default  reduce using rule 143 (loop_block_item)


State 215

  134 loop_statement: print_statement .

    $default  reduce using rule 134 (loop_statement)


State 216

  135 loop_statement: comment .

    $default  reduce using rule 135 (loop_statement)


State 217

  146 loop_jump_statement: jump_statement .

    $default  reduce using rule 146 (loop_jump_statement)


State 218

  130 loop_statement: compound_statement .

    $default  reduce using rule 130 (loop_statement)


State 219

  142 loop_block_item: local_declaration .

    $default  reduce using rule 142 (loop_block_item)


State 220

  131 loop_statement: expression_statement .

    $default  reduce using rule 131 (loop_statement)


State 221

  132 loop_statement: selection_statement .

    $default  reduce using rule 132 (loop_statement)


State 222

  133 loop_statement: iteration_statement .

    $default  reduce using rule 133 (loop_statement)


State 223

  141 loop_block_item: loop_statement .

    $default  reduce using rule 141 (loop_block_item)


State 224

  138 loop_compound_statement: LCB loop_block_item_list . RCB
  140 loop_block_item_list: loop_block_item_list . loop_block_item

    ADD          shift, and go to state 84
    SUB          shift, and go to state 85
    LB           shift, and go to state 86
    LCB          shift, and go to state 64
    RCB          shift, and go to state 231
    PRINT        shift, and go to state 88
    IF           shift, and go to state 89
    WHILE        shift, and go to state 90
    RET          shift, and go to state 91
    CONT         shift, and go to state 212
    BREAK        shift, and go to state 213
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 31
    F_CONST      shift, and go to state 32
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 92
    SEMICOLON    shift, and go to state 93

    const_without_str          go to state 94
    type                       go to state 95
    function_definition        go to state 214
    print_statement            go to state 215
    comment                    go to state 216
    jump_statement             go to state 217
    compound_statement         go to state 218
    local_declaration          go to state 219
    expression_statement       go to state 220
    expression_list            go to state 107
    assignment_expression      go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    prefix_expression          go to state 115
    postfix_expression         go to state 116
    bra_expression             go to state 117
    selection_statement        go to state 221
    iteration_statement        go to state 222
    loop_statement             go to state 223
    loop_block_item            go to state 232
    loop_jump_statement        go to state 226


State 225

  139 loop_block_item_list: loop_block_item .

    $default  reduce using rule 139 (loop_block_item_list)


State 226

  136 loop_statement: loop_jump_statement .

    $default  reduce using rule 136 (loop_statement)


State 227

  128 selection_statement: IF LB expression_list RB compound_statement ELSE compound_statement .

    $default  reduce using rule 128 (selection_statement)


State 228

  127 selection_statement: IF LB expression_list RB compound_statement ELSE selection_statement .

    $default  reduce using rule 127 (selection_statement)


State 229

  144 loop_jump_statement: CONT SEMICOLON .

    $default  reduce using rule 144 (loop_jump_statement)


State 230

  145 loop_jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 145 (loop_jump_statement)


State 231

  138 loop_compound_statement: LCB loop_block_item_list RCB .

    $default  reduce using rule 138 (loop_compound_statement)


State 232

  140 loop_block_item_list: loop_block_item_list loop_block_item .

    $default  reduce using rule 140 (loop_block_item_list)
