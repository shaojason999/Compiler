Terminals unused in grammar

   NOT
   LSB
   RSB
   FOR


State 91 conflicts: 1 reduce/reduce
State 130 conflicts: 24 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration

    3 external_declaration: function_declaration
    4                     | function_definition
    5                     | global_declaration
    6                     | comment

    7 global_declaration: type SEMICOLON
    8                   | type global_declarator_list SEMICOLON

    9 global_declarator_list: global_declarator
   10                       | global_declarator_list COMMA global_declarator

   11 global_declarator: ID
   12                  | ID ASGN only_const_operation

   13 only_const_operation: const_logical_or_expression

   14 const_without_str: I_CONST
   15                  | F_CONST
   16                  | TRUE
   17                  | FALSE

   18 type: VOID
   19     | INT
   20     | FLOAT
   21     | STRING
   22     | BOOL

   23 function_declaration: type ID LB RB SEMICOLON
   24                     | type ID LB function_parameter_list RB SEMICOLON

   25 function_definition: type ID LB RB compound_statement
   26                    | type ID LB function_parameter_list RB compound_statement

   27 function_parameter_list: type ID
   28                        | function_parameter_list COMMA type ID

   29 statement: compound_statement
   30          | statement_with_return
   31          | selection_statement
   32          | iteration_statement
   33          | comment
   34          | jump_statement

   35 statement_with_return: expression_statement
   36                      | print_statement

   37 print_statement: PRINT LB ID RB SEMICOLON
   38                | PRINT LB STR_CONST RB SEMICOLON

   39 comment: C_COMMENT
   40        | CPP_COMMENT

   41 jump_statement: RET SEMICOLON
   42               | RET statement_with_return

   43 compound_statement: LCB RCB
   44                   | LCB block_item_list RCB

   45 block_item_list: block_item
   46                | block_item_list block_item

   47 block_item: statement
   48           | local_declaration
   49           | function_definition

   50 local_declaration: type SEMICOLON
   51                  | type expression_list SEMICOLON

   52 expression_statement: SEMICOLON
   53                     | expression_list SEMICOLON

   54 expression_list: assignment_expression
   55                | expression_list COMMA assignment_expression

   56 assignment_expression: logical_or_expression
   57                      | ID assignment_operator assignment_expression
   58                      | ID ASGN STR_CONST

   59 assignment_operator: ASGN
   60                    | ADDASGN
   61                    | SUBASGN
   62                    | MULASGN
   63                    | DIVASGN
   64                    | MODASGN

   65 logical_or_expression: logical_and_expression
   66                      | logical_or_expression OR logical_and_expression

   67 logical_and_expression: equality_expression
   68                       | logical_and_expression AND equality_expression

   69 equality_expression: relational_expression
   70                    | equality_expression EQ relational_expression
   71                    | equality_expression NE relational_expression

   72 relational_expression: additive_expression
   73                      | relational_expression MT additive_expression
   74                      | relational_expression LT additive_expression
   75                      | relational_expression MTE additive_expression
   76                      | relational_expression LTE additive_expression

   77 additive_expression: multiplicative_expression
   78                    | additive_expression ADD multiplicative_expression
   79                    | additive_expression SUB multiplicative_expression

   80 multiplicative_expression: prefix_expression
   81                          | multiplicative_expression MUL prefix_expression
   82                          | multiplicative_expression DIV prefix_expression
   83                          | multiplicative_expression MOD prefix_expression

   84 prefix_expression: postfix_expression
   85                  | ADD prefix_expression
   86                  | SUB prefix_expression

   87 postfix_expression: ID
   88                   | ID LB RB
   89                   | ID LB expression_list RB
   90                   | const_without_str
   91                   | LB expression_list RB
   92                   | bra_expression INC
   93                   | bra_expression DEC

   94 bra_expression: ID
   95               | LB bra_expression RB

   96 const_logical_or_expression: const_logical_and_expression
   97                            | const_logical_or_expression OR const_logical_and_expression

   98 const_logical_and_expression: const_equality_expression
   99                             | const_logical_and_expression AND const_equality_expression

  100 const_equality_expression: const_relational_expression
  101                          | const_equality_expression EQ const_relational_expression
  102                          | const_equality_expression NE const_relational_expression

  103 const_relational_expression: const_additive_expression
  104                            | const_relational_expression MT const_additive_expression
  105                            | const_relational_expression LT const_additive_expression
  106                            | const_relational_expression MTE const_additive_expression
  107                            | const_relational_expression LTE const_additive_expression

  108 const_additive_expression: const_multiplicative_expression
  109                          | const_additive_expression ADD const_multiplicative_expression
  110                          | const_additive_expression SUB const_multiplicative_expression

  111 const_multiplicative_expression: const_prefix_expression
  112                                | const_multiplicative_expression MUL const_prefix_expression
  113                                | const_multiplicative_expression DIV const_prefix_expression
  114                                | const_multiplicative_expression MOD const_prefix_expression

  115 const_prefix_expression: const_postfix_expression
  116                        | ADD const_prefix_expression
  117                        | SUB const_prefix_expression

  118 const_postfix_expression: const_without_str
  119                         | LB const_logical_or_expression RB

  120 selection_statement: IF LB expression_list RB compound_statement
  121                    | IF LB expression_list RB compound_statement ELSE selection_statement
  122                    | IF LB expression_list RB compound_statement ELSE compound_statement

  123 iteration_statement: WHILE LB expression_list RB loop_compound_statement

  124 loop_statement: compound_statement
  125               | expression_statement
  126               | selection_statement
  127               | iteration_statement
  128               | print_statement
  129               | comment
  130               | loop_jump_statement

  131 loop_compound_statement: LCB RCB
  132                        | LCB loop_block_item_list RCB

  133 loop_block_item_list: loop_block_item
  134                     | loop_block_item_list loop_block_item

  135 loop_block_item: loop_statement
  136                | local_declaration
  137                | function_definition

  138 loop_jump_statement: CONT SEMICOLON
  139                    | BREAK SEMICOLON
  140                    | jump_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 78 85 109 116
SUB (259) 79 86 110 117
MUL (260) 81 112
DIV (261) 82 113
MOD (262) 83 114
INC (263) 92
DEC (264) 93
MT (265) 73 104
LT (266) 74 105
MTE (267) 75 106
LTE (268) 76 107
EQ (269) 70 101
NE (270) 71 102
ASGN (271) 12 58 59
ADDASGN (272) 60
SUBASGN (273) 61
MULASGN (274) 62
DIVASGN (275) 63
MODASGN (276) 64
AND (277) 68 99
OR (278) 66 97
NOT (279)
LB (280) 23 24 25 26 37 38 88 89 91 95 119 120 121 122 123
RB (281) 23 24 25 26 37 38 88 89 91 95 119 120 121 122 123
LCB (282) 43 44 131 132
RCB (283) 43 44 131 132
LSB (284)
RSB (285)
COMMA (286) 10 28 55
PRINT (287) 37 38
IF (288) 120 121 122
ELSE (289) 121 122
FOR (290)
WHILE (291) 123
RET (292) 41 42
CONT (293) 138
BREAK (294) 139
VOID (295) 18
INT (296) 19
FLOAT (297) 20
STRING (298) 21
BOOL (299) 22
TRUE (300) 16
FALSE (301) 17
STR_CONST (302) 38 58
I_CONST (303) 14
F_CONST (304) 15
C_COMMENT (305) 39
CPP_COMMENT (306) 40
ID (307) 11 12 23 24 25 26 27 28 37 57 58 87 88 89 94
SEMICOLON (308) 7 8 23 24 37 38 41 50 51 52 53 138 139


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0 2
external_declaration (56)
    on left: 3 4 5 6, on right: 1 2
global_declaration (57)
    on left: 7 8, on right: 5
global_declarator_list (58)
    on left: 9 10, on right: 8 10
global_declarator (59)
    on left: 11 12, on right: 9 10
only_const_operation (60)
    on left: 13, on right: 12
const_without_str (61)
    on left: 14 15 16 17, on right: 90 118
type (62)
    on left: 18 19 20 21 22, on right: 7 8 23 24 25 26 27 28 50 51
function_declaration (63)
    on left: 23 24, on right: 3
function_definition (64)
    on left: 25 26, on right: 4 49 137
function_parameter_list (65)
    on left: 27 28, on right: 24 26 28
statement (66)
    on left: 29 30 31 32 33 34, on right: 47
statement_with_return (67)
    on left: 35 36, on right: 30 42
print_statement (68)
    on left: 37 38, on right: 36 128
comment (69)
    on left: 39 40, on right: 6 33 129
jump_statement (70)
    on left: 41 42, on right: 34 140
compound_statement (71)
    on left: 43 44, on right: 25 26 29 120 121 122 124
block_item_list (72)
    on left: 45 46, on right: 44 46
block_item (73)
    on left: 47 48 49, on right: 45 46
local_declaration (74)
    on left: 50 51, on right: 48 136
expression_statement (75)
    on left: 52 53, on right: 35 125
expression_list (76)
    on left: 54 55, on right: 51 53 55 89 91 120 121 122 123
assignment_expression (77)
    on left: 56 57 58, on right: 54 55 57
assignment_operator (78)
    on left: 59 60 61 62 63 64, on right: 57
logical_or_expression (79)
    on left: 65 66, on right: 56 66
logical_and_expression (80)
    on left: 67 68, on right: 65 66 68
equality_expression (81)
    on left: 69 70 71, on right: 67 68 70 71
relational_expression (82)
    on left: 72 73 74 75 76, on right: 69 70 71 73 74 75 76
additive_expression (83)
    on left: 77 78 79, on right: 72 73 74 75 76 78 79
multiplicative_expression (84)
    on left: 80 81 82 83, on right: 77 78 79 81 82 83
prefix_expression (85)
    on left: 84 85 86, on right: 80 81 82 83 85 86
postfix_expression (86)
    on left: 87 88 89 90 91 92 93, on right: 84
bra_expression (87)
    on left: 94 95, on right: 92 93 95
const_logical_or_expression (88)
    on left: 96 97, on right: 13 97 119
const_logical_and_expression (89)
    on left: 98 99, on right: 96 97 99
const_equality_expression (90)
    on left: 100 101 102, on right: 98 99 101 102
const_relational_expression (91)
    on left: 103 104 105 106 107, on right: 100 101 102 104 105 106
    107
const_additive_expression (92)
    on left: 108 109 110, on right: 103 104 105 106 107 109 110
const_multiplicative_expression (93)
    on left: 111 112 113 114, on right: 108 109 110 112 113 114
const_prefix_expression (94)
    on left: 115 116 117, on right: 111 112 113 114 116 117
const_postfix_expression (95)
    on left: 118 119, on right: 115
selection_statement (96)
    on left: 120 121 122, on right: 31 121 126
iteration_statement (97)
    on left: 123, on right: 32 127
loop_statement (98)
    on left: 124 125 126 127 128 129 130, on right: 135
loop_compound_statement (99)
    on left: 131 132, on right: 123
loop_block_item_list (100)
    on left: 133 134, on right: 132 134
loop_block_item (101)
    on left: 135 136 137, on right: 133 134
loop_jump_statement (102)
    on left: 138 139 140, on right: 130


State 0

    0 $accept: . program $end

    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7

    program               go to state 8
    external_declaration  go to state 9
    global_declaration    go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 1

   18 type: VOID .

    $default  reduce using rule 18 (type)


State 2

   19 type: INT .

    $default  reduce using rule 19 (type)


State 3

   20 type: FLOAT .

    $default  reduce using rule 20 (type)


State 4

   21 type: STRING .

    $default  reduce using rule 21 (type)


State 5

   22 type: BOOL .

    $default  reduce using rule 22 (type)


State 6

   39 comment: C_COMMENT .

    $default  reduce using rule 39 (comment)


State 7

   40 comment: CPP_COMMENT .

    $default  reduce using rule 40 (comment)


State 8

    0 $accept: program . $end
    2 program: program . external_declaration

    $end         shift, and go to state 15
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7

    external_declaration  go to state 16
    global_declaration    go to state 10
    type                  go to state 11
    function_declaration  go to state 12
    function_definition   go to state 13
    comment               go to state 14


State 9

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 10

    5 external_declaration: global_declaration .

    $default  reduce using rule 5 (external_declaration)


State 11

    7 global_declaration: type . SEMICOLON
    8                   | type . global_declarator_list SEMICOLON
   23 function_declaration: type . ID LB RB SEMICOLON
   24                     | type . ID LB function_parameter_list RB SEMICOLON
   25 function_definition: type . ID LB RB compound_statement
   26                    | type . ID LB function_parameter_list RB compound_statement

    ID         shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    global_declarator_list  go to state 19
    global_declarator       go to state 20


State 12

    3 external_declaration: function_declaration .

    $default  reduce using rule 3 (external_declaration)


State 13

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 14

    6 external_declaration: comment .

    $default  reduce using rule 6 (external_declaration)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 17

   11 global_declarator: ID .
   12                  | ID . ASGN only_const_operation
   23 function_declaration: type ID . LB RB SEMICOLON
   24                     | type ID . LB function_parameter_list RB SEMICOLON
   25 function_definition: type ID . LB RB compound_statement
   26                    | type ID . LB function_parameter_list RB compound_statement

    ASGN  shift, and go to state 21
    LB    shift, and go to state 22

    $default  reduce using rule 11 (global_declarator)


State 18

    7 global_declaration: type SEMICOLON .

    $default  reduce using rule 7 (global_declaration)


State 19

    8 global_declaration: type global_declarator_list . SEMICOLON
   10 global_declarator_list: global_declarator_list . COMMA global_declarator

    COMMA      shift, and go to state 23
    SEMICOLON  shift, and go to state 24


State 20

    9 global_declarator_list: global_declarator .

    $default  reduce using rule 9 (global_declarator_list)


State 21

   12 global_declarator: ID ASGN . only_const_operation

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    only_const_operation             go to state 32
    const_without_str                go to state 33
    const_logical_or_expression      go to state 34
    const_logical_and_expression     go to state 35
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 22

   23 function_declaration: type ID LB . RB SEMICOLON
   24                     | type ID LB . function_parameter_list RB SEMICOLON
   25 function_definition: type ID LB . RB compound_statement
   26                    | type ID LB . function_parameter_list RB compound_statement

    RB      shift, and go to state 42
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type                     go to state 43
    function_parameter_list  go to state 44


State 23

   10 global_declarator_list: global_declarator_list COMMA . global_declarator

    ID  shift, and go to state 45

    global_declarator  go to state 46


State 24

    8 global_declaration: type global_declarator_list SEMICOLON .

    $default  reduce using rule 8 (global_declaration)


State 25

  116 const_prefix_expression: ADD . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 47
    const_postfix_expression  go to state 41


State 26

  117 const_prefix_expression: SUB . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 48
    const_postfix_expression  go to state 41


State 27

  119 const_postfix_expression: LB . const_logical_or_expression RB

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_logical_or_expression      go to state 49
    const_logical_and_expression     go to state 35
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 28

   16 const_without_str: TRUE .

    $default  reduce using rule 16 (const_without_str)


State 29

   17 const_without_str: FALSE .

    $default  reduce using rule 17 (const_without_str)


State 30

   14 const_without_str: I_CONST .

    $default  reduce using rule 14 (const_without_str)


State 31

   15 const_without_str: F_CONST .

    $default  reduce using rule 15 (const_without_str)


State 32

   12 global_declarator: ID ASGN only_const_operation .

    $default  reduce using rule 12 (global_declarator)


State 33

  118 const_postfix_expression: const_without_str .

    $default  reduce using rule 118 (const_postfix_expression)


State 34

   13 only_const_operation: const_logical_or_expression .
   97 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression

    OR  shift, and go to state 50

    $default  reduce using rule 13 (only_const_operation)


State 35

   96 const_logical_or_expression: const_logical_and_expression .
   99 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 51

    $default  reduce using rule 96 (const_logical_or_expression)


State 36

   98 const_logical_and_expression: const_equality_expression .
  101 const_equality_expression: const_equality_expression . EQ const_relational_expression
  102                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 52
    NE  shift, and go to state 53

    $default  reduce using rule 98 (const_logical_and_expression)


State 37

  100 const_equality_expression: const_relational_expression .
  104 const_relational_expression: const_relational_expression . MT const_additive_expression
  105                            | const_relational_expression . LT const_additive_expression
  106                            | const_relational_expression . MTE const_additive_expression
  107                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57

    $default  reduce using rule 100 (const_equality_expression)


State 38

  103 const_relational_expression: const_additive_expression .
  109 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  110                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 103 (const_relational_expression)


State 39

  108 const_additive_expression: const_multiplicative_expression .
  112 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  113                                | const_multiplicative_expression . DIV const_prefix_expression
  114                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 108 (const_additive_expression)


State 40

  111 const_multiplicative_expression: const_prefix_expression .

    $default  reduce using rule 111 (const_multiplicative_expression)


State 41

  115 const_prefix_expression: const_postfix_expression .

    $default  reduce using rule 115 (const_prefix_expression)


State 42

   23 function_declaration: type ID LB RB . SEMICOLON
   25 function_definition: type ID LB RB . compound_statement

    LCB        shift, and go to state 63
    SEMICOLON  shift, and go to state 64

    compound_statement  go to state 65


State 43

   27 function_parameter_list: type . ID

    ID  shift, and go to state 66


State 44

   24 function_declaration: type ID LB function_parameter_list . RB SEMICOLON
   26 function_definition: type ID LB function_parameter_list . RB compound_statement
   28 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 67
    COMMA  shift, and go to state 68


State 45

   11 global_declarator: ID .
   12                  | ID . ASGN only_const_operation

    ASGN  shift, and go to state 21

    $default  reduce using rule 11 (global_declarator)


State 46

   10 global_declarator_list: global_declarator_list COMMA global_declarator .

    $default  reduce using rule 10 (global_declarator_list)


State 47

  116 const_prefix_expression: ADD const_prefix_expression .

    $default  reduce using rule 116 (const_prefix_expression)


State 48

  117 const_prefix_expression: SUB const_prefix_expression .

    $default  reduce using rule 117 (const_prefix_expression)


State 49

   97 const_logical_or_expression: const_logical_or_expression . OR const_logical_and_expression
  119 const_postfix_expression: LB const_logical_or_expression . RB

    OR  shift, and go to state 50
    RB  shift, and go to state 69


State 50

   97 const_logical_or_expression: const_logical_or_expression OR . const_logical_and_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_logical_and_expression     go to state 70
    const_equality_expression        go to state 36
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 51

   99 const_logical_and_expression: const_logical_and_expression AND . const_equality_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_equality_expression        go to state 71
    const_relational_expression      go to state 37
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 52

  101 const_equality_expression: const_equality_expression EQ . const_relational_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_relational_expression      go to state 72
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 53

  102 const_equality_expression: const_equality_expression NE . const_relational_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_relational_expression      go to state 73
    const_additive_expression        go to state 38
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 54

  104 const_relational_expression: const_relational_expression MT . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 74
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 55

  105 const_relational_expression: const_relational_expression LT . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 75
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 56

  106 const_relational_expression: const_relational_expression MTE . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 76
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 57

  107 const_relational_expression: const_relational_expression LTE . const_additive_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_additive_expression        go to state 77
    const_multiplicative_expression  go to state 39
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 58

  109 const_additive_expression: const_additive_expression ADD . const_multiplicative_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_multiplicative_expression  go to state 78
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 59

  110 const_additive_expression: const_additive_expression SUB . const_multiplicative_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str                go to state 33
    const_multiplicative_expression  go to state 79
    const_prefix_expression          go to state 40
    const_postfix_expression         go to state 41


State 60

  112 const_multiplicative_expression: const_multiplicative_expression MUL . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 80
    const_postfix_expression  go to state 41


State 61

  113 const_multiplicative_expression: const_multiplicative_expression DIV . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 81
    const_postfix_expression  go to state 41


State 62

  114 const_multiplicative_expression: const_multiplicative_expression MOD . const_prefix_expression

    ADD      shift, and go to state 25
    SUB      shift, and go to state 26
    LB       shift, and go to state 27
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31

    const_without_str         go to state 33
    const_prefix_expression   go to state 82
    const_postfix_expression  go to state 41


State 63

   43 compound_statement: LCB . RCB
   44                   | LCB . block_item_list RCB

    ADD          shift, and go to state 83
    SUB          shift, and go to state 84
    LB           shift, and go to state 85
    LCB          shift, and go to state 63
    RCB          shift, and go to state 86
    PRINT        shift, and go to state 87
    IF           shift, and go to state 88
    WHILE        shift, and go to state 89
    RET          shift, and go to state 90
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 91
    SEMICOLON    shift, and go to state 92

    const_without_str          go to state 93
    type                       go to state 94
    function_definition        go to state 95
    statement                  go to state 96
    statement_with_return      go to state 97
    print_statement            go to state 98
    comment                    go to state 99
    jump_statement             go to state 100
    compound_statement         go to state 101
    block_item_list            go to state 102
    block_item                 go to state 103
    local_declaration          go to state 104
    expression_statement       go to state 105
    expression_list            go to state 106
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116
    selection_statement        go to state 117
    iteration_statement        go to state 118


State 64

   23 function_declaration: type ID LB RB SEMICOLON .

    $default  reduce using rule 23 (function_declaration)


State 65

   25 function_definition: type ID LB RB compound_statement .

    $default  reduce using rule 25 (function_definition)


State 66

   27 function_parameter_list: type ID .

    $default  reduce using rule 27 (function_parameter_list)


State 67

   24 function_declaration: type ID LB function_parameter_list RB . SEMICOLON
   26 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB        shift, and go to state 63
    SEMICOLON  shift, and go to state 119

    compound_statement  go to state 120


State 68

   28 function_parameter_list: function_parameter_list COMMA . type ID

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type  go to state 121


State 69

  119 const_postfix_expression: LB const_logical_or_expression RB .

    $default  reduce using rule 119 (const_postfix_expression)


State 70

   97 const_logical_or_expression: const_logical_or_expression OR const_logical_and_expression .
   99 const_logical_and_expression: const_logical_and_expression . AND const_equality_expression

    AND  shift, and go to state 51

    $default  reduce using rule 97 (const_logical_or_expression)


State 71

   99 const_logical_and_expression: const_logical_and_expression AND const_equality_expression .
  101 const_equality_expression: const_equality_expression . EQ const_relational_expression
  102                          | const_equality_expression . NE const_relational_expression

    EQ  shift, and go to state 52
    NE  shift, and go to state 53

    $default  reduce using rule 99 (const_logical_and_expression)


State 72

  101 const_equality_expression: const_equality_expression EQ const_relational_expression .
  104 const_relational_expression: const_relational_expression . MT const_additive_expression
  105                            | const_relational_expression . LT const_additive_expression
  106                            | const_relational_expression . MTE const_additive_expression
  107                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57

    $default  reduce using rule 101 (const_equality_expression)


State 73

  102 const_equality_expression: const_equality_expression NE const_relational_expression .
  104 const_relational_expression: const_relational_expression . MT const_additive_expression
  105                            | const_relational_expression . LT const_additive_expression
  106                            | const_relational_expression . MTE const_additive_expression
  107                            | const_relational_expression . LTE const_additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57

    $default  reduce using rule 102 (const_equality_expression)


State 74

  104 const_relational_expression: const_relational_expression MT const_additive_expression .
  109 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  110                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 104 (const_relational_expression)


State 75

  105 const_relational_expression: const_relational_expression LT const_additive_expression .
  109 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  110                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 105 (const_relational_expression)


State 76

  106 const_relational_expression: const_relational_expression MTE const_additive_expression .
  109 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  110                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 106 (const_relational_expression)


State 77

  107 const_relational_expression: const_relational_expression LTE const_additive_expression .
  109 const_additive_expression: const_additive_expression . ADD const_multiplicative_expression
  110                          | const_additive_expression . SUB const_multiplicative_expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 107 (const_relational_expression)


State 78

  109 const_additive_expression: const_additive_expression ADD const_multiplicative_expression .
  112 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  113                                | const_multiplicative_expression . DIV const_prefix_expression
  114                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 109 (const_additive_expression)


State 79

  110 const_additive_expression: const_additive_expression SUB const_multiplicative_expression .
  112 const_multiplicative_expression: const_multiplicative_expression . MUL const_prefix_expression
  113                                | const_multiplicative_expression . DIV const_prefix_expression
  114                                | const_multiplicative_expression . MOD const_prefix_expression

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61
    MOD  shift, and go to state 62

    $default  reduce using rule 110 (const_additive_expression)


State 80

  112 const_multiplicative_expression: const_multiplicative_expression MUL const_prefix_expression .

    $default  reduce using rule 112 (const_multiplicative_expression)


State 81

  113 const_multiplicative_expression: const_multiplicative_expression DIV const_prefix_expression .

    $default  reduce using rule 113 (const_multiplicative_expression)


State 82

  114 const_multiplicative_expression: const_multiplicative_expression MOD const_prefix_expression .

    $default  reduce using rule 114 (const_multiplicative_expression)


State 83

   85 prefix_expression: ADD . prefix_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str   go to state 93
    prefix_expression   go to state 123
    postfix_expression  go to state 115
    bra_expression      go to state 116


State 84

   86 prefix_expression: SUB . prefix_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str   go to state 93
    prefix_expression   go to state 124
    postfix_expression  go to state 115
    bra_expression      go to state 116


State 85

   91 postfix_expression: LB . expression_list RB
   95 bra_expression: LB . bra_expression RB

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 91

    const_without_str          go to state 93
    expression_list            go to state 125
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 126


State 86

   43 compound_statement: LCB RCB .

    $default  reduce using rule 43 (compound_statement)


State 87

   37 print_statement: PRINT . LB ID RB SEMICOLON
   38                | PRINT . LB STR_CONST RB SEMICOLON

    LB  shift, and go to state 127


State 88

  120 selection_statement: IF . LB expression_list RB compound_statement
  121                    | IF . LB expression_list RB compound_statement ELSE selection_statement
  122                    | IF . LB expression_list RB compound_statement ELSE compound_statement

    LB  shift, and go to state 128


State 89

  123 iteration_statement: WHILE . LB expression_list RB loop_compound_statement

    LB  shift, and go to state 129


State 90

   41 jump_statement: RET . SEMICOLON
   42               | RET . statement_with_return

    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    LB         shift, and go to state 85
    PRINT      shift, and go to state 87
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    I_CONST    shift, and go to state 30
    F_CONST    shift, and go to state 31
    ID         shift, and go to state 91
    SEMICOLON  shift, and go to state 130

    const_without_str          go to state 93
    statement_with_return      go to state 131
    print_statement            go to state 98
    expression_statement       go to state 105
    expression_list            go to state 106
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 91

   57 assignment_expression: ID . assignment_operator assignment_expression
   58                      | ID . ASGN STR_CONST
   87 postfix_expression: ID .
   88                   | ID . LB RB
   89                   | ID . LB expression_list RB
   94 bra_expression: ID .

    ASGN     shift, and go to state 132
    ADDASGN  shift, and go to state 133
    SUBASGN  shift, and go to state 134
    MULASGN  shift, and go to state 135
    DIVASGN  shift, and go to state 136
    MODASGN  shift, and go to state 137
    LB       shift, and go to state 138

    INC       reduce using rule 94 (bra_expression)
    DEC       reduce using rule 94 (bra_expression)
    RB        reduce using rule 87 (postfix_expression)
    RB        [reduce using rule 94 (bra_expression)]
    $default  reduce using rule 87 (postfix_expression)

    assignment_operator  go to state 139


State 92

   52 expression_statement: SEMICOLON .

    $default  reduce using rule 52 (expression_statement)


State 93

   90 postfix_expression: const_without_str .

    $default  reduce using rule 90 (postfix_expression)


State 94

   25 function_definition: type . ID LB RB compound_statement
   26                    | type . ID LB function_parameter_list RB compound_statement
   50 local_declaration: type . SEMICOLON
   51                  | type . expression_list SEMICOLON

    ADD        shift, and go to state 83
    SUB        shift, and go to state 84
    LB         shift, and go to state 85
    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    I_CONST    shift, and go to state 30
    F_CONST    shift, and go to state 31
    ID         shift, and go to state 140
    SEMICOLON  shift, and go to state 141

    const_without_str          go to state 93
    expression_list            go to state 142
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 95

   49 block_item: function_definition .

    $default  reduce using rule 49 (block_item)


State 96

   47 block_item: statement .

    $default  reduce using rule 47 (block_item)


State 97

   30 statement: statement_with_return .

    $default  reduce using rule 30 (statement)


State 98

   36 statement_with_return: print_statement .

    $default  reduce using rule 36 (statement_with_return)


State 99

   33 statement: comment .

    $default  reduce using rule 33 (statement)


State 100

   34 statement: jump_statement .

    $default  reduce using rule 34 (statement)


State 101

   29 statement: compound_statement .

    $default  reduce using rule 29 (statement)


State 102

   44 compound_statement: LCB block_item_list . RCB
   46 block_item_list: block_item_list . block_item

    ADD          shift, and go to state 83
    SUB          shift, and go to state 84
    LB           shift, and go to state 85
    LCB          shift, and go to state 63
    RCB          shift, and go to state 143
    PRINT        shift, and go to state 87
    IF           shift, and go to state 88
    WHILE        shift, and go to state 89
    RET          shift, and go to state 90
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 91
    SEMICOLON    shift, and go to state 92

    const_without_str          go to state 93
    type                       go to state 94
    function_definition        go to state 95
    statement                  go to state 96
    statement_with_return      go to state 97
    print_statement            go to state 98
    comment                    go to state 99
    jump_statement             go to state 100
    compound_statement         go to state 101
    block_item                 go to state 144
    local_declaration          go to state 104
    expression_statement       go to state 105
    expression_list            go to state 106
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116
    selection_statement        go to state 117
    iteration_statement        go to state 118


State 103

   45 block_item_list: block_item .

    $default  reduce using rule 45 (block_item_list)


State 104

   48 block_item: local_declaration .

    $default  reduce using rule 48 (block_item)


State 105

   35 statement_with_return: expression_statement .

    $default  reduce using rule 35 (statement_with_return)


State 106

   53 expression_statement: expression_list . SEMICOLON
   55 expression_list: expression_list . COMMA assignment_expression

    COMMA      shift, and go to state 145
    SEMICOLON  shift, and go to state 146


State 107

   54 expression_list: assignment_expression .

    $default  reduce using rule 54 (expression_list)


State 108

   56 assignment_expression: logical_or_expression .
   66 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 147

    $default  reduce using rule 56 (assignment_expression)


State 109

   65 logical_or_expression: logical_and_expression .
   68 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 148

    $default  reduce using rule 65 (logical_or_expression)


State 110

   67 logical_and_expression: equality_expression .
   70 equality_expression: equality_expression . EQ relational_expression
   71                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 149
    NE  shift, and go to state 150

    $default  reduce using rule 67 (logical_and_expression)


State 111

   69 equality_expression: relational_expression .
   73 relational_expression: relational_expression . MT additive_expression
   74                      | relational_expression . LT additive_expression
   75                      | relational_expression . MTE additive_expression
   76                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 151
    LT   shift, and go to state 152
    MTE  shift, and go to state 153
    LTE  shift, and go to state 154

    $default  reduce using rule 69 (equality_expression)


State 112

   72 relational_expression: additive_expression .
   78 additive_expression: additive_expression . ADD multiplicative_expression
   79                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 155
    SUB  shift, and go to state 156

    $default  reduce using rule 72 (relational_expression)


State 113

   77 additive_expression: multiplicative_expression .
   81 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   82                          | multiplicative_expression . DIV prefix_expression
   83                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 157
    DIV  shift, and go to state 158
    MOD  shift, and go to state 159

    $default  reduce using rule 77 (additive_expression)


State 114

   80 multiplicative_expression: prefix_expression .

    $default  reduce using rule 80 (multiplicative_expression)


State 115

   84 prefix_expression: postfix_expression .

    $default  reduce using rule 84 (prefix_expression)


State 116

   92 postfix_expression: bra_expression . INC
   93                   | bra_expression . DEC

    INC  shift, and go to state 160
    DEC  shift, and go to state 161


State 117

   31 statement: selection_statement .

    $default  reduce using rule 31 (statement)


State 118

   32 statement: iteration_statement .

    $default  reduce using rule 32 (statement)


State 119

   24 function_declaration: type ID LB function_parameter_list RB SEMICOLON .

    $default  reduce using rule 24 (function_declaration)


State 120

   26 function_definition: type ID LB function_parameter_list RB compound_statement .

    $default  reduce using rule 26 (function_definition)


State 121

   28 function_parameter_list: function_parameter_list COMMA type . ID

    ID  shift, and go to state 162


State 122

   87 postfix_expression: ID .
   88                   | ID . LB RB
   89                   | ID . LB expression_list RB
   94 bra_expression: ID .

    LB  shift, and go to state 138

    INC       reduce using rule 94 (bra_expression)
    DEC       reduce using rule 94 (bra_expression)
    $default  reduce using rule 87 (postfix_expression)


State 123

   85 prefix_expression: ADD prefix_expression .

    $default  reduce using rule 85 (prefix_expression)


State 124

   86 prefix_expression: SUB prefix_expression .

    $default  reduce using rule 86 (prefix_expression)


State 125

   55 expression_list: expression_list . COMMA assignment_expression
   91 postfix_expression: LB expression_list . RB

    RB     shift, and go to state 163
    COMMA  shift, and go to state 145


State 126

   92 postfix_expression: bra_expression . INC
   93                   | bra_expression . DEC
   95 bra_expression: LB bra_expression . RB

    INC  shift, and go to state 160
    DEC  shift, and go to state 161
    RB   shift, and go to state 164


State 127

   37 print_statement: PRINT LB . ID RB SEMICOLON
   38                | PRINT LB . STR_CONST RB SEMICOLON

    STR_CONST  shift, and go to state 165
    ID         shift, and go to state 166


State 128

  120 selection_statement: IF LB . expression_list RB compound_statement
  121                    | IF LB . expression_list RB compound_statement ELSE selection_statement
  122                    | IF LB . expression_list RB compound_statement ELSE compound_statement

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 91

    const_without_str          go to state 93
    expression_list            go to state 167
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 129

  123 iteration_statement: WHILE LB . expression_list RB loop_compound_statement

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 91

    const_without_str          go to state 93
    expression_list            go to state 168
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 130

   41 jump_statement: RET SEMICOLON .
   52 expression_statement: SEMICOLON .

    ADD          reduce using rule 41 (jump_statement)
    ADD          [reduce using rule 52 (expression_statement)]
    SUB          reduce using rule 41 (jump_statement)
    SUB          [reduce using rule 52 (expression_statement)]
    LB           reduce using rule 41 (jump_statement)
    LB           [reduce using rule 52 (expression_statement)]
    LCB          reduce using rule 41 (jump_statement)
    LCB          [reduce using rule 52 (expression_statement)]
    RCB          reduce using rule 41 (jump_statement)
    RCB          [reduce using rule 52 (expression_statement)]
    PRINT        reduce using rule 41 (jump_statement)
    PRINT        [reduce using rule 52 (expression_statement)]
    IF           reduce using rule 41 (jump_statement)
    IF           [reduce using rule 52 (expression_statement)]
    WHILE        reduce using rule 41 (jump_statement)
    WHILE        [reduce using rule 52 (expression_statement)]
    RET          reduce using rule 41 (jump_statement)
    RET          [reduce using rule 52 (expression_statement)]
    CONT         reduce using rule 41 (jump_statement)
    CONT         [reduce using rule 52 (expression_statement)]
    BREAK        reduce using rule 41 (jump_statement)
    BREAK        [reduce using rule 52 (expression_statement)]
    VOID         reduce using rule 41 (jump_statement)
    VOID         [reduce using rule 52 (expression_statement)]
    INT          reduce using rule 41 (jump_statement)
    INT          [reduce using rule 52 (expression_statement)]
    FLOAT        reduce using rule 41 (jump_statement)
    FLOAT        [reduce using rule 52 (expression_statement)]
    STRING       reduce using rule 41 (jump_statement)
    STRING       [reduce using rule 52 (expression_statement)]
    BOOL         reduce using rule 41 (jump_statement)
    BOOL         [reduce using rule 52 (expression_statement)]
    TRUE         reduce using rule 41 (jump_statement)
    TRUE         [reduce using rule 52 (expression_statement)]
    FALSE        reduce using rule 41 (jump_statement)
    FALSE        [reduce using rule 52 (expression_statement)]
    I_CONST      reduce using rule 41 (jump_statement)
    I_CONST      [reduce using rule 52 (expression_statement)]
    F_CONST      reduce using rule 41 (jump_statement)
    F_CONST      [reduce using rule 52 (expression_statement)]
    C_COMMENT    reduce using rule 41 (jump_statement)
    C_COMMENT    [reduce using rule 52 (expression_statement)]
    CPP_COMMENT  reduce using rule 41 (jump_statement)
    CPP_COMMENT  [reduce using rule 52 (expression_statement)]
    ID           reduce using rule 41 (jump_statement)
    ID           [reduce using rule 52 (expression_statement)]
    SEMICOLON    reduce using rule 41 (jump_statement)
    SEMICOLON    [reduce using rule 52 (expression_statement)]
    $default     reduce using rule 41 (jump_statement)


State 131

   42 jump_statement: RET statement_with_return .

    $default  reduce using rule 42 (jump_statement)


State 132

   58 assignment_expression: ID ASGN . STR_CONST
   59 assignment_operator: ASGN .

    STR_CONST  shift, and go to state 169

    $default  reduce using rule 59 (assignment_operator)


State 133

   60 assignment_operator: ADDASGN .

    $default  reduce using rule 60 (assignment_operator)


State 134

   61 assignment_operator: SUBASGN .

    $default  reduce using rule 61 (assignment_operator)


State 135

   62 assignment_operator: MULASGN .

    $default  reduce using rule 62 (assignment_operator)


State 136

   63 assignment_operator: DIVASGN .

    $default  reduce using rule 63 (assignment_operator)


State 137

   64 assignment_operator: MODASGN .

    $default  reduce using rule 64 (assignment_operator)


State 138

   88 postfix_expression: ID LB . RB
   89                   | ID LB . expression_list RB

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    RB       shift, and go to state 170
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 91

    const_without_str          go to state 93
    expression_list            go to state 171
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 139

   57 assignment_expression: ID assignment_operator . assignment_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 91

    const_without_str          go to state 93
    assignment_expression      go to state 172
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 140

   25 function_definition: type ID . LB RB compound_statement
   26                    | type ID . LB function_parameter_list RB compound_statement
   57 assignment_expression: ID . assignment_operator assignment_expression
   58                      | ID . ASGN STR_CONST
   87 postfix_expression: ID .
   88                   | ID . LB RB
   89                   | ID . LB expression_list RB
   94 bra_expression: ID .

    ASGN     shift, and go to state 132
    ADDASGN  shift, and go to state 133
    SUBASGN  shift, and go to state 134
    MULASGN  shift, and go to state 135
    DIVASGN  shift, and go to state 136
    MODASGN  shift, and go to state 137
    LB       shift, and go to state 173

    INC       reduce using rule 94 (bra_expression)
    DEC       reduce using rule 94 (bra_expression)
    $default  reduce using rule 87 (postfix_expression)

    assignment_operator  go to state 139


State 141

   50 local_declaration: type SEMICOLON .

    $default  reduce using rule 50 (local_declaration)


State 142

   51 local_declaration: type expression_list . SEMICOLON
   55 expression_list: expression_list . COMMA assignment_expression

    COMMA      shift, and go to state 145
    SEMICOLON  shift, and go to state 174


State 143

   44 compound_statement: LCB block_item_list RCB .

    $default  reduce using rule 44 (compound_statement)


State 144

   46 block_item_list: block_item_list block_item .

    $default  reduce using rule 46 (block_item_list)


State 145

   55 expression_list: expression_list COMMA . assignment_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 91

    const_without_str          go to state 93
    assignment_expression      go to state 175
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 146

   53 expression_statement: expression_list SEMICOLON .

    $default  reduce using rule 53 (expression_statement)


State 147

   66 logical_or_expression: logical_or_expression OR . logical_and_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    logical_and_expression     go to state 176
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 148

   68 logical_and_expression: logical_and_expression AND . equality_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    equality_expression        go to state 177
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 149

   70 equality_expression: equality_expression EQ . relational_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    relational_expression      go to state 178
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 150

   71 equality_expression: equality_expression NE . relational_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    relational_expression      go to state 179
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 151

   73 relational_expression: relational_expression MT . additive_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    additive_expression        go to state 180
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 152

   74 relational_expression: relational_expression LT . additive_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    additive_expression        go to state 181
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 153

   75 relational_expression: relational_expression MTE . additive_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    additive_expression        go to state 182
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 154

   76 relational_expression: relational_expression LTE . additive_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    additive_expression        go to state 183
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 155

   78 additive_expression: additive_expression ADD . multiplicative_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    multiplicative_expression  go to state 184
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 156

   79 additive_expression: additive_expression SUB . multiplicative_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str          go to state 93
    multiplicative_expression  go to state 185
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 157

   81 multiplicative_expression: multiplicative_expression MUL . prefix_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str   go to state 93
    prefix_expression   go to state 186
    postfix_expression  go to state 115
    bra_expression      go to state 116


State 158

   82 multiplicative_expression: multiplicative_expression DIV . prefix_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str   go to state 93
    prefix_expression   go to state 187
    postfix_expression  go to state 115
    bra_expression      go to state 116


State 159

   83 multiplicative_expression: multiplicative_expression MOD . prefix_expression

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 122

    const_without_str   go to state 93
    prefix_expression   go to state 188
    postfix_expression  go to state 115
    bra_expression      go to state 116


State 160

   92 postfix_expression: bra_expression INC .

    $default  reduce using rule 92 (postfix_expression)


State 161

   93 postfix_expression: bra_expression DEC .

    $default  reduce using rule 93 (postfix_expression)


State 162

   28 function_parameter_list: function_parameter_list COMMA type ID .

    $default  reduce using rule 28 (function_parameter_list)


State 163

   91 postfix_expression: LB expression_list RB .

    $default  reduce using rule 91 (postfix_expression)


State 164

   95 bra_expression: LB bra_expression RB .

    $default  reduce using rule 95 (bra_expression)


State 165

   38 print_statement: PRINT LB STR_CONST . RB SEMICOLON

    RB  shift, and go to state 189


State 166

   37 print_statement: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 190


State 167

   55 expression_list: expression_list . COMMA assignment_expression
  120 selection_statement: IF LB expression_list . RB compound_statement
  121                    | IF LB expression_list . RB compound_statement ELSE selection_statement
  122                    | IF LB expression_list . RB compound_statement ELSE compound_statement

    RB     shift, and go to state 191
    COMMA  shift, and go to state 145


State 168

   55 expression_list: expression_list . COMMA assignment_expression
  123 iteration_statement: WHILE LB expression_list . RB loop_compound_statement

    RB     shift, and go to state 192
    COMMA  shift, and go to state 145


State 169

   58 assignment_expression: ID ASGN STR_CONST .

    $default  reduce using rule 58 (assignment_expression)


State 170

   88 postfix_expression: ID LB RB .

    $default  reduce using rule 88 (postfix_expression)


State 171

   55 expression_list: expression_list . COMMA assignment_expression
   89 postfix_expression: ID LB expression_list . RB

    RB     shift, and go to state 193
    COMMA  shift, and go to state 145


State 172

   57 assignment_expression: ID assignment_operator assignment_expression .

    $default  reduce using rule 57 (assignment_expression)


State 173

   25 function_definition: type ID LB . RB compound_statement
   26                    | type ID LB . function_parameter_list RB compound_statement
   88 postfix_expression: ID LB . RB
   89                   | ID LB . expression_list RB

    ADD      shift, and go to state 83
    SUB      shift, and go to state 84
    LB       shift, and go to state 85
    RB       shift, and go to state 194
    VOID     shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    STRING   shift, and go to state 4
    BOOL     shift, and go to state 5
    TRUE     shift, and go to state 28
    FALSE    shift, and go to state 29
    I_CONST  shift, and go to state 30
    F_CONST  shift, and go to state 31
    ID       shift, and go to state 91

    const_without_str          go to state 93
    type                       go to state 43
    function_parameter_list    go to state 195
    expression_list            go to state 171
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116


State 174

   51 local_declaration: type expression_list SEMICOLON .

    $default  reduce using rule 51 (local_declaration)


State 175

   55 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 55 (expression_list)


State 176

   66 logical_or_expression: logical_or_expression OR logical_and_expression .
   68 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 148

    $default  reduce using rule 66 (logical_or_expression)


State 177

   68 logical_and_expression: logical_and_expression AND equality_expression .
   70 equality_expression: equality_expression . EQ relational_expression
   71                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 149
    NE  shift, and go to state 150

    $default  reduce using rule 68 (logical_and_expression)


State 178

   70 equality_expression: equality_expression EQ relational_expression .
   73 relational_expression: relational_expression . MT additive_expression
   74                      | relational_expression . LT additive_expression
   75                      | relational_expression . MTE additive_expression
   76                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 151
    LT   shift, and go to state 152
    MTE  shift, and go to state 153
    LTE  shift, and go to state 154

    $default  reduce using rule 70 (equality_expression)


State 179

   71 equality_expression: equality_expression NE relational_expression .
   73 relational_expression: relational_expression . MT additive_expression
   74                      | relational_expression . LT additive_expression
   75                      | relational_expression . MTE additive_expression
   76                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 151
    LT   shift, and go to state 152
    MTE  shift, and go to state 153
    LTE  shift, and go to state 154

    $default  reduce using rule 71 (equality_expression)


State 180

   73 relational_expression: relational_expression MT additive_expression .
   78 additive_expression: additive_expression . ADD multiplicative_expression
   79                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 155
    SUB  shift, and go to state 156

    $default  reduce using rule 73 (relational_expression)


State 181

   74 relational_expression: relational_expression LT additive_expression .
   78 additive_expression: additive_expression . ADD multiplicative_expression
   79                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 155
    SUB  shift, and go to state 156

    $default  reduce using rule 74 (relational_expression)


State 182

   75 relational_expression: relational_expression MTE additive_expression .
   78 additive_expression: additive_expression . ADD multiplicative_expression
   79                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 155
    SUB  shift, and go to state 156

    $default  reduce using rule 75 (relational_expression)


State 183

   76 relational_expression: relational_expression LTE additive_expression .
   78 additive_expression: additive_expression . ADD multiplicative_expression
   79                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 155
    SUB  shift, and go to state 156

    $default  reduce using rule 76 (relational_expression)


State 184

   78 additive_expression: additive_expression ADD multiplicative_expression .
   81 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   82                          | multiplicative_expression . DIV prefix_expression
   83                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 157
    DIV  shift, and go to state 158
    MOD  shift, and go to state 159

    $default  reduce using rule 78 (additive_expression)


State 185

   79 additive_expression: additive_expression SUB multiplicative_expression .
   81 multiplicative_expression: multiplicative_expression . MUL prefix_expression
   82                          | multiplicative_expression . DIV prefix_expression
   83                          | multiplicative_expression . MOD prefix_expression

    MUL  shift, and go to state 157
    DIV  shift, and go to state 158
    MOD  shift, and go to state 159

    $default  reduce using rule 79 (additive_expression)


State 186

   81 multiplicative_expression: multiplicative_expression MUL prefix_expression .

    $default  reduce using rule 81 (multiplicative_expression)


State 187

   82 multiplicative_expression: multiplicative_expression DIV prefix_expression .

    $default  reduce using rule 82 (multiplicative_expression)


State 188

   83 multiplicative_expression: multiplicative_expression MOD prefix_expression .

    $default  reduce using rule 83 (multiplicative_expression)


State 189

   38 print_statement: PRINT LB STR_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 196


State 190

   37 print_statement: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 191

  120 selection_statement: IF LB expression_list RB . compound_statement
  121                    | IF LB expression_list RB . compound_statement ELSE selection_statement
  122                    | IF LB expression_list RB . compound_statement ELSE compound_statement

    LCB  shift, and go to state 63

    compound_statement  go to state 198


State 192

  123 iteration_statement: WHILE LB expression_list RB . loop_compound_statement

    LCB  shift, and go to state 199

    loop_compound_statement  go to state 200


State 193

   89 postfix_expression: ID LB expression_list RB .

    $default  reduce using rule 89 (postfix_expression)


State 194

   25 function_definition: type ID LB RB . compound_statement
   88 postfix_expression: ID LB RB .

    LCB  shift, and go to state 63

    $default  reduce using rule 88 (postfix_expression)

    compound_statement  go to state 65


State 195

   26 function_definition: type ID LB function_parameter_list . RB compound_statement
   28 function_parameter_list: function_parameter_list . COMMA type ID

    RB     shift, and go to state 201
    COMMA  shift, and go to state 68


State 196

   38 print_statement: PRINT LB STR_CONST RB SEMICOLON .

    $default  reduce using rule 38 (print_statement)


State 197

   37 print_statement: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 37 (print_statement)


State 198

  120 selection_statement: IF LB expression_list RB compound_statement .
  121                    | IF LB expression_list RB compound_statement . ELSE selection_statement
  122                    | IF LB expression_list RB compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 202

    $default  reduce using rule 120 (selection_statement)


State 199

  131 loop_compound_statement: LCB . RCB
  132                        | LCB . loop_block_item_list RCB

    ADD          shift, and go to state 83
    SUB          shift, and go to state 84
    LB           shift, and go to state 85
    LCB          shift, and go to state 63
    RCB          shift, and go to state 203
    PRINT        shift, and go to state 87
    IF           shift, and go to state 88
    WHILE        shift, and go to state 89
    RET          shift, and go to state 90
    CONT         shift, and go to state 204
    BREAK        shift, and go to state 205
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 91
    SEMICOLON    shift, and go to state 92

    const_without_str          go to state 93
    type                       go to state 94
    function_definition        go to state 206
    print_statement            go to state 207
    comment                    go to state 208
    jump_statement             go to state 209
    compound_statement         go to state 210
    local_declaration          go to state 211
    expression_statement       go to state 212
    expression_list            go to state 106
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116
    selection_statement        go to state 213
    iteration_statement        go to state 214
    loop_statement             go to state 215
    loop_block_item_list       go to state 216
    loop_block_item            go to state 217
    loop_jump_statement        go to state 218


State 200

  123 iteration_statement: WHILE LB expression_list RB loop_compound_statement .

    $default  reduce using rule 123 (iteration_statement)


State 201

   26 function_definition: type ID LB function_parameter_list RB . compound_statement

    LCB  shift, and go to state 63

    compound_statement  go to state 120


State 202

  121 selection_statement: IF LB expression_list RB compound_statement ELSE . selection_statement
  122                    | IF LB expression_list RB compound_statement ELSE . compound_statement

    LCB  shift, and go to state 63
    IF   shift, and go to state 88

    compound_statement   go to state 219
    selection_statement  go to state 220


State 203

  131 loop_compound_statement: LCB RCB .

    $default  reduce using rule 131 (loop_compound_statement)


State 204

  138 loop_jump_statement: CONT . SEMICOLON

    SEMICOLON  shift, and go to state 221


State 205

  139 loop_jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 222


State 206

  137 loop_block_item: function_definition .

    $default  reduce using rule 137 (loop_block_item)


State 207

  128 loop_statement: print_statement .

    $default  reduce using rule 128 (loop_statement)


State 208

  129 loop_statement: comment .

    $default  reduce using rule 129 (loop_statement)


State 209

  140 loop_jump_statement: jump_statement .

    $default  reduce using rule 140 (loop_jump_statement)


State 210

  124 loop_statement: compound_statement .

    $default  reduce using rule 124 (loop_statement)


State 211

  136 loop_block_item: local_declaration .

    $default  reduce using rule 136 (loop_block_item)


State 212

  125 loop_statement: expression_statement .

    $default  reduce using rule 125 (loop_statement)


State 213

  126 loop_statement: selection_statement .

    $default  reduce using rule 126 (loop_statement)


State 214

  127 loop_statement: iteration_statement .

    $default  reduce using rule 127 (loop_statement)


State 215

  135 loop_block_item: loop_statement .

    $default  reduce using rule 135 (loop_block_item)


State 216

  132 loop_compound_statement: LCB loop_block_item_list . RCB
  134 loop_block_item_list: loop_block_item_list . loop_block_item

    ADD          shift, and go to state 83
    SUB          shift, and go to state 84
    LB           shift, and go to state 85
    LCB          shift, and go to state 63
    RCB          shift, and go to state 223
    PRINT        shift, and go to state 87
    IF           shift, and go to state 88
    WHILE        shift, and go to state 89
    RET          shift, and go to state 90
    CONT         shift, and go to state 204
    BREAK        shift, and go to state 205
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    TRUE         shift, and go to state 28
    FALSE        shift, and go to state 29
    I_CONST      shift, and go to state 30
    F_CONST      shift, and go to state 31
    C_COMMENT    shift, and go to state 6
    CPP_COMMENT  shift, and go to state 7
    ID           shift, and go to state 91
    SEMICOLON    shift, and go to state 92

    const_without_str          go to state 93
    type                       go to state 94
    function_definition        go to state 206
    print_statement            go to state 207
    comment                    go to state 208
    jump_statement             go to state 209
    compound_statement         go to state 210
    local_declaration          go to state 211
    expression_statement       go to state 212
    expression_list            go to state 106
    assignment_expression      go to state 107
    logical_or_expression      go to state 108
    logical_and_expression     go to state 109
    equality_expression        go to state 110
    relational_expression      go to state 111
    additive_expression        go to state 112
    multiplicative_expression  go to state 113
    prefix_expression          go to state 114
    postfix_expression         go to state 115
    bra_expression             go to state 116
    selection_statement        go to state 213
    iteration_statement        go to state 214
    loop_statement             go to state 215
    loop_block_item            go to state 224
    loop_jump_statement        go to state 218


State 217

  133 loop_block_item_list: loop_block_item .

    $default  reduce using rule 133 (loop_block_item_list)


State 218

  130 loop_statement: loop_jump_statement .

    $default  reduce using rule 130 (loop_statement)


State 219

  122 selection_statement: IF LB expression_list RB compound_statement ELSE compound_statement .

    $default  reduce using rule 122 (selection_statement)


State 220

  121 selection_statement: IF LB expression_list RB compound_statement ELSE selection_statement .

    $default  reduce using rule 121 (selection_statement)


State 221

  138 loop_jump_statement: CONT SEMICOLON .

    $default  reduce using rule 138 (loop_jump_statement)


State 222

  139 loop_jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 139 (loop_jump_statement)


State 223

  132 loop_compound_statement: LCB loop_block_item_list RCB .

    $default  reduce using rule 132 (loop_compound_statement)


State 224

  134 loop_block_item_list: loop_block_item_list loop_block_item .

    $default  reduce using rule 134 (loop_block_item_list)
