/* Definition section */
%{
#include "y.tab.h"	/* header file generated by bison */

extern YYSTYPE yylval; //YYSTYPE
char buf[BUF_SIZE];

/* This macro is used to record code line */
#define CONCAT { strncat(buf, yytext, BUF_SIZE - strlen(buf) - 1); }
%}

/* Define regular expression label */
digit		[0-9]
letter		[a-zA-Z]
integer     {digit}+
float       {digit}+"."{digit}+
id			{letter}+({letter}|{digit})*

%option yylineno

%x COMMENT STRING_STATE

/* Rules section */
%%

 /* Arithmetic */
"+"     {  }
"-" 	{  }
"*" 	{  }
"/" 	{  }
"%"     {  }
"++"    {  }
"--"    {  }

 /* Relational */
">"		{  }
"<"		{  }
">="	{  }
"<="	{  }
"=="	{  }
"!="	{  }

 /* Assignment */
"="		{  }
"+="	{  }
"-="	{  }
"*="	{  }
"/="	{  }
"%="	{  }

 /* Logical */
"&&"	{  }
"||"	{  }
"!"		{  }

 /* Delimiters */
"("		{ }
")"		{  }
"{"		{  }
"}"		{  }
"["		{  }
"]"		{  }
","		{  }

 /* Print Keywords */	
"print"		{  }

 /* Condition and Loop Keywords */
"if"		{  }
"else"		{  }
"for"		{  }
"while"		{  }

 /* Declaration Keywords */
"void"		{ }
"int"		{ }
"float"  	{ }
"string"  	{ }
"bool"  	{ }

 /* boolean Keywords */
"true"      {  }
"false"     {  }

"return"    { }

 /* String Constant */
\"				        { BEGIN STRING_STATE; }
<STRING_STATE>\"		{ BEGIN INITIAL; }
<STRING_STATE>[^"]*		{  }

 /* Number Constant */
{integer}	{  }
{float}	    {  }

 /* C type Comment */
"/*"				{ BEGIN COMMENT; }
<COMMENT>[^*\n]+	{  }
<COMMENT>\n			{  }
<COMMENT>"*"		{  }
<COMMENT>"*/"		{  BEGIN INITIAL; }

 /* C++ type Comment */
\/\/.*	{  }

 /* Variable ID */
 {id}       {  }

 /* others */

[;]         {  }
[\n]        {  }
[ \t]		{ } /* Ignore */
[^ \t\n] 	{ } /* Ignore other charactor sets */
<<EOF>>     { }

%%

int yywrap()
{
    return 1;
}
